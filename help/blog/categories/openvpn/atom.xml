<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: OPENVPN | Ikenna Okpala]]></title>
  <link href="http://ikennaokpala.com/blog/categories/openvpn/atom.xml" rel="self"/>
  <link href="http://ikennaokpala.com/"/>
  <updated>2016-01-03T17:36:17+00:00</updated>
  <id>http://ikennaokpala.com/</id>
  <author>
    <name><![CDATA[Ikenna Okpala]]></name>
    <email><![CDATA[me@ikennaokpala.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Fix OPENVPN Network Interface Mismatch]]></title>
    <link href="http://ikennaokpala.com/blog/fix-openvpn-network-interface-mismatch"/>
    <updated>2014-04-05T05:35:09+01:00</updated>
    <id>http://ikennaokpala.com/blog/fix-openvpn-network-interface-mismatch</id>
    <content type="html"><![CDATA[<p>Getting VPN clients-to-server connected should be a piece of cake right. Simply dropping the client.conf (.ovpn) file and certificates (i.e crt and .key files) in the /etc/openvpn directory should do the trick.</p>

<p>Today, after a bit of housekeeping on my client box, connecting to the OPENVPN server seemed a big ask.</p>

<p>```bash
  $: service openvpn restart
  Stopping virtual private network daemon:/etc/init.d/openvpn: 98: kill: No such process</p>

<p>   client server.
  Starting virtual private network daemon: client server.
  Stopping virtual private network daemon:/etc/init.d/openvpn: 98: kill: No such process</p>

<p>   client server.
 ```</p>

<!--more-->


<p>After a bit of debugging the VPN client.conf:</p>

<p>```bash</p>

<pre><code>openvpn --config client.conf
</code></pre>

<p>```</p>

<p>The result were as follows:</p>

<p><code>bash
  OPTIONS IMPORT: timers and/or timeouts modified
  OPTIONS IMPORT: --ifconfig/up options modified
  OPTIONS IMPORT: route-related options modified
  Note: Cannot ioctl TUNSETIFF tap0: Device or resource busy (errno=16)
  do_ifconfig, tt-&gt;ipv6=0, tt-&gt;did_ifconfig_ipv6_setup=0
  /sbin/ifconfig  198.xxx.xxx.xxx netmask 255.255.254.0 mtu 1500 broadcast 198.xxx.xxx.xxx
  SIOCSIFADDR: No such device
  : ERROR while getting interface flags: No such device
  SIOCSIFNETMASK: No such device
  SIOCSIFMTU: No such device
  S  IOCSIFBRDADDR: No such device
  : ERROR while getting interface flags: No such device
  Linux ifconfig failed: external program exited with error status: 255
  Exiting
</code></p>

<p>As you may have observed above the network interface appeared to be busy or take over by some other service or simply not available.</p>

<p>```bash</p>

<pre><code>$: brctl show
bridge name bridge id       STP enabled interfaces
</code></pre>

<p>vmbrx       xxxxxxxx            no      ethx
vmbry       xxxxxxxx            no      ehtx</p>

<pre><code>                                    tap0
</code></pre>

<p>```</p>

<p>A query on the available network interfaces on the client showed that tap0 was actually available but already taken up.</p>

<p>A way of getting the vpn client to reconnect without interupting the activity on tap0 is to create up.sh and down.sh just for the VPN client, having them to use another tap interface.</p>

<p>```bash</p>

<pre><code>#!/bin/sh
/sbin/ifconfig vmbrx promisc
/sbin/ifconfig tapxx up promisc
/sbin/brctl addif vmbrxx tapxx
</code></pre>

<p>```</p>

<p>```bash</p>

<pre><code>#!/bin/sh
/sbin/brctl delif vmbrxx tapxx
/sbin/ifconfig tapxx down -promisc
/sbin/ifconfig vmbrxx -promisc
</code></pre>

<p>```</p>

<p>Now on testing the VPN client connection again all should be well.</p>
]]></content>
  </entry>
  
</feed>
