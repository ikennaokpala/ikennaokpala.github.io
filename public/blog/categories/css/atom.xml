<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: CSS | Ikenna Okpala]]></title>
  <link href="http://ikennaokpala.com/blog/categories/css/atom.xml" rel="self"/>
  <link href="http://ikennaokpala.com/"/>
  <updated>2015-12-24T22:18:29+00:00</updated>
  <id>http://ikennaokpala.com/</id>
  <author>
    <name><![CDATA[Ikenna Okpala]]></name>
    <email><![CDATA[me@ikennaokpala.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using the Wicket Framework to Update style tag.]]></title>
    <link href="http://ikennaokpala.com/blog/using-the-wicket-framework-to-update-html-style-tag"/>
    <updated>2009-09-08T15:18:00+01:00</updated>
    <id>http://ikennaokpala.com/blog/using-the-wicket-framework-to-update-html-style-tag</id>
    <content type="html"><![CDATA[<p>In this post,  <a href="http://wicket.apache.org/">Wicket</a> Framework is used to update the embedded style tag.</p>

<p>An already working sample can be found <a href="http://wicket1.ikennaokpala.staxapps.net/">here</a>.</p>

<!--more-->


<p>Let's begin by configuring the web application (i.e. web.xml)
<div>
  <pre><code class='xml'>&lt;/p&gt;

&lt;p&gt;&lt;web-app xmlns=&quot;http://java.sun.com/xml/ns/j2ee&quot; xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; schemalocation=&quot;http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd&quot; version=&quot;2.4&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;display-name&gt;CSS and Wicket&lt;/display-name&gt;
&lt;filter&gt;
&lt;filter-name&gt;css_wicket&lt;/filter-name&gt;
&lt;filter-class&gt;org.apache.wicket.protocol.http.WicketFilter&lt;/filter-class&gt;
&lt;init-param&gt;
&lt;param-name&gt;applicationClassName&lt;/param-name&gt;
&lt;param-value&gt;com.jw.ike.pages.CssApplication&lt;/param-value&gt;
&lt;/init-param&gt;
&lt;/filter&gt;&lt;/p&gt;

&lt;p&gt;&lt;filter-mapping&gt;
&lt;filter-name&gt;css_wicket&lt;/filter-name&gt;
&lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;&lt;/p&gt;

&lt;p&gt;&lt;/web-app&gt;&lt;/p&gt;

&lt;p&gt;</code></pre>
</div>
</p>

<p>The wicket  application class go as follows:</p>

<p><div>
  <pre><code class='java'>&lt;/p&gt;

&lt;p&gt;public class CssApplication extends WebApplication {&lt;/p&gt;

&lt;p&gt;public CssApplication() {
}&lt;/p&gt;

&lt;p&gt;public Class getHomePage() {
return CssDemo.class;
}&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;</code></pre>
</div>
</p>

<p>The getHomePage() method returns this Page:</p>

<p><div>
  <pre><code class='java'>&lt;/p&gt;

&lt;p&gt;public class CssDemo extends WebPage implements Serializable {&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;private String uStyle;

public CssDemo() {
    add(new Label(&quot;style&quot;));
    add(new CssForm(&quot;addform&quot;));

}

public CssDemo(String userStyle) {
    this.uStyle = userStyle;
    this.add(new Label(&quot;style&quot;, new PropertyModel(this, &quot;uStyle&quot;)));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;add(new CssForm(&quot;addform&quot;));&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;</code></pre>
</div>
</p>

<p>And the accompanying HTML web page is:</p>

<p><div>
  <pre><code class='html'>&lt;/p&gt;

&lt;p&gt;&lt;html&gt;&lt;/p&gt;

&lt;p&gt;&lt;head&gt;
&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;../css/style/style.css&quot;&gt;
&lt;title&gt;Wicket Updating Style Sheet&lt;/title&gt;&lt;/p&gt;



&lt;p&gt;&lt;/head&gt;
&lt;body&gt;&lt;/p&gt;

&lt;div id=&quot;bmain&quot;&gt;
&lt;form wicket:id=&quot;addform&quot;&gt;
&lt;h2&gt;Update Style Sheet...&lt;/h2&gt;

&lt;span&gt;Select Pre-Defined CSS Rules &lt;/span&gt;

&lt;select wicket:id=&quot;combo&quot;&gt;

&lt;/select&gt;

&lt;textarea id=&quot;ta&quot; wicket:id=&quot;txta&quot; rows=&quot;20&quot; cols=&quot;60&quot;&gt; rich text &lt;/textarea&gt;

&lt;input id=&quot;btn&quot; type=&quot;submit&quot; value=&quot;::Post Style Sheet::&quot;&gt;&lt;/form&gt;
&lt;a href=&quot;http://wicket.apache.org/&quot; &gt;
&lt;img id=&quot;logo&quot; alt=&quot;Wicket&quot; src=&quot;../images/wicket-logo.png&quot; border=&quot;0&quot; width=&#39;111&#39; height=&quot;155&quot;/&gt;&lt;/a&gt;

&lt;/div&gt;




&lt;div id=&quot;side&quot;&gt;

&lt;h1&gt;Change Me @!#%.&lt;/h1&gt;

 &lt;/div&gt;


&lt;p&gt;&lt;/body&gt;
&lt;/html&gt;&lt;/p&gt;

&lt;p&gt;</code></pre>
</div>
</p>

<p>And then the Form Class:</p>

<p><div>
  <pre><code class='java'>&lt;/p&gt;

&lt;p&gt;public class CssForm extends Form {&lt;/p&gt;

&lt;p&gt;private String style1 = &quot;Choose a style&quot;;
private String style2 = &quot;h1{ font-size: 4.0em; font-family: Mistral; color: #dc512b; border:10px solid #bb342d; background-color: #098762;text-align: center;}&quot;;
private String style3 = &quot;h1{ font-size: 5.0em; font-family: Comic Sans MS; color: #0066CC; border:10px solid #330066; background-color: green;text-align: center;}&quot;;
private String style4 = &quot;h1{ font-size: 6.0em; font-family: Curlz MT; color: #CCFFFF; border:10px solid #445698; background-color: #6666CC;text-align: center;}&quot;;&lt;/p&gt;

&lt;p&gt;private static String css;
private List cssList;
private String selectedCss = style1;
private DropDownChoice dropDownMenu;
private TextArea textArea;&lt;/p&gt;

&lt;p&gt;public CssForm(String componentid) {
super(componentid);&lt;/p&gt;

&lt;p&gt;cssList = Arrays.asList(new String[]{style1, style2, style3, style4});&lt;/p&gt;

&lt;p&gt;dropDownMenu = new DropDownChoice(&quot;combo&quot;, new PropertyModel(this, &quot;selectedCss&quot;),&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; cssList) {
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; @Override
 protected void onSelectionChanged(Object newSelection) {&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; textArea.setModelObject(newSelection);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; }&lt;/p&gt;

&lt;p&gt; @Override
 protected boolean wantOnSelectionChangedNotifications() {&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; return true;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; }&lt;/p&gt;

&lt;p&gt;};
add(dropDownMenu);&lt;/p&gt;

&lt;p&gt;textArea = new TextArea(&quot;txta&quot;, new PropertyModel(this, &quot;css&quot;));&lt;/p&gt;

&lt;p&gt;add(textArea);&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;@Override
protected void onSubmit() {
String definedCssRule =  textArea.getModelObject().toString();
definedCssRule = &quot;\n\n\n&quot; + definedCssRule + &quot;\n\n\n&quot;;
setResponsePage(new CssDemo(definedCssRule));
textArea.setModelObject(null);
}
}&lt;/p&gt;

&lt;p&gt;</code></pre>
</div>
</p>

<p>The External Style Sheet :</p>

<p><div>
  <pre><code class='css'>&lt;/p&gt;

&lt;p&gt;body {&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background-image: url(&quot;../images/cl.jpg&quot;);
background-repeat: no-repeat;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;h1 {&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;font-size: 4.5em;
color: #4088b8;
margin: -300px 0 0 0;
position: relative;
left: -20px;
top: 10px;
position: relative
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;h2 {&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;color: #4088b8;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;span {&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;font-size: 1.0em;
color: #4088b8;
padding:0 33px 0 2px;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;h1&gt;logo {&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;position: relative;
left: 0px;
top: 50px;
z-index: 1;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}
select {&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;position: relative;
left: 0px;
bottom: 2px;
width: 230px;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;h1&gt;jw {&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;position: relative;
left: 900px;
top: -50px;
z-index: 1;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;h1&gt;bmain {&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;width: 510px;
margin: 10px 0 0 0;
position: inherit;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;h1&gt;side {&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;float: right;
width: 600px;
margin: -150px 0 0 0;
padding: 1px 0 0 0;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;h1&gt;ta {&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;padding: 0 20px 0 0;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;h1&gt;btn {&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;background-color: #4088b8;
border-color: 4088b8;
color: white;
position: relative;
left: 180px;
top: 50px;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;</code></pre>
</div>
</p>
]]></content>
  </entry>
  
</feed>
