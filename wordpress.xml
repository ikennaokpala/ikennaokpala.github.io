<?xml version="1.0" encoding="UTF-8"?>
<!--
 This is a WordPress eXtended RSS file generated by WordPress as an export of your site.
 It contains information about your site's posts, pages, comments, categories, and other content.
 You may use this file to transfer that content from one site to another.
 This file is not intended to serve as a complete backup of your site.

 To import this information into a WordPress site follow these steps:
 1. Log in to that site as an administrator.
 2. Go to Tools: Import in the WordPress admin panel.
 3. Install the "WordPress" importer from the list.
 4. Activate & Run Importer.
 5. Upload this file using the form provided on that page.
 6. You will first be asked to map the authors in this export file to users
    on the site. For each author, you may choose to map to an
    existing user on the site or to create a new user.
 7. WordPress will then import each of the posts, pages, comments, categories, etc.
    contained in this file into your site.
-->
<!-- generator="WordPress.com" created="2013-04-26 02:51"-->
<rss version="2.0" xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:wp="http://wordpress.org/export/1.2/">
  <channel>
<title>Ikenna Okpala's Blog</title>
<link>http://ikennaokpala.wordpress.com</link>
<description>"there is no traffic on the extra mile" -- Rickey Minor</description>
<pubDate>Fri, 26 Apr 2013 02:51:04 +0000</pubDate>
<language>en</language>
<wp:wxr_version>1.2</wp:wxr_version>
<wp:base_site_url>http://wordpress.com/</wp:base_site_url>
<wp:base_blog_url>http://ikennaokpala.wordpress.com</wp:base_blog_url>
<wp:wp_author>
  <wp:author_login>kengimel</wp:author_login>
  <wp:author_email>me@ikennaokpala.com</wp:author_email>
  <wp:author_display_name><![CDATA[IKENNA OKPALA]]></wp:author_display_name>
  <wp:author_first_name><![CDATA[]]></wp:author_first_name>
  <wp:author_last_name><![CDATA[]]></wp:author_last_name>
</wp:wp_author>
<wp:category>
  <wp:term_id>11287</wp:term_id>
  <wp:category_nicename>agile</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[AGILE]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>75400</wp:term_id>
  <wp:category_nicename>bdd</wp:category_nicename>
  <wp:category_parent>agile</wp:category_parent>
  <wp:cat_name><![CDATA[BDD]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>25966210</wp:term_id>
  <wp:category_nicename>computing-jokes</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[Computing Jokes]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>169</wp:term_id>
  <wp:category_nicename>css</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[CSS]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>475</wp:term_id>
  <wp:category_nicename>database</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[DATABASE]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>4884</wp:term_id>
  <wp:category_nicename>design-patterns</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[DESIGN PATTERNS]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>11362</wp:term_id>
  <wp:category_nicename>emacs</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[EMACS]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>49647211</wp:term_id>
  <wp:category_nicename>ensime</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[ENSIME]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>5216</wp:term_id>
  <wp:category_nicename>exam</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[EXAM]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>116486</wp:term_id>
  <wp:category_nicename>functional-programming</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[FUNCTIONAL PROGRAMMING]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>209196</wp:term_id>
  <wp:category_nicename>git</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[GIT]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>6023209</wp:term_id>
  <wp:category_nicename>google-app-engine</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[Google App Engine]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1017</wp:term_id>
  <wp:category_nicename>java</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[JAVA]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>307053</wp:term_id>
  <wp:category_nicename>jpa</wp:category_nicename>
  <wp:category_parent>java</wp:category_parent>
  <wp:cat_name><![CDATA[JPA]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>51468</wp:term_id>
  <wp:category_nicename>jsf</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[JSF]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>461295</wp:term_id>
  <wp:category_nicename>jvm</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[JVM]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>47862</wp:term_id>
  <wp:category_nicename>maven</wp:category_nicename>
  <wp:category_parent>java</wp:category_parent>
  <wp:cat_name><![CDATA[MAVEN]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>12962</wp:term_id>
  <wp:category_nicename>netbeans</wp:category_nicename>
  <wp:category_parent>java</wp:category_parent>
  <wp:cat_name><![CDATA[NETBEANS]]></wp:cat_name>
  <wp:category_description><![CDATA[Netbeans IDE for Java, Scala.. and so on. ]]></wp:category_description>
</wp:category>
<wp:category>
  <wp:term_id>25966208</wp:term_id>
  <wp:category_nicename>out-of-the-box-the-very-beginning</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[Out Of The Box (&quot;The Very Beginning&quot;)]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>15989</wp:term_id>
  <wp:category_nicename>postgresql</wp:category_nicename>
  <wp:category_parent>database</wp:category_parent>
  <wp:cat_name><![CDATA[POSTGRESQL]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>16183930</wp:term_id>
  <wp:category_nicename>primefaces</wp:category_nicename>
  <wp:category_parent>jsf</wp:category_parent>
  <wp:cat_name><![CDATA[PRIMEFACES]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>24141</wp:term_id>
  <wp:category_nicename>rdf</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[RDF]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>4872</wp:term_id>
  <wp:category_nicename>ruby</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[RUBY]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>4466480</wp:term_id>
  <wp:category_nicename>rvm</wp:category_nicename>
  <wp:category_parent>ruby</wp:category_parent>
  <wp:cat_name><![CDATA[RVM]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>312256</wp:term_id>
  <wp:category_nicename>scala</wp:category_nicename>
  <wp:category_parent>jvm</wp:category_parent>
  <wp:cat_name><![CDATA[SCALA]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>11271</wp:term_id>
  <wp:category_nicename>soa</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[SOA]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>8791</wp:term_id>
  <wp:category_nicename>soap</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[SOAP]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>26658</wp:term_id>
  <wp:category_nicename>solutions</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[SOLUTIONS]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>9486</wp:term_id>
  <wp:category_nicename>spring</wp:category_nicename>
  <wp:category_parent>java</wp:category_parent>
  <wp:cat_name><![CDATA[SPRING]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>76604</wp:term_id>
  <wp:category_nicename>tdd</wp:category_nicename>
  <wp:category_parent>agile</wp:category_parent>
  <wp:cat_name><![CDATA[TDD]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>7585</wp:term_id>
  <wp:category_nicename>tomcat</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[TOMCAT]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>255</wp:term_id>
  <wp:category_nicename>ubuntu</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[UBUNTU]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1</wp:term_id>
  <wp:category_nicename>uncategorized</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>9203</wp:term_id>
  <wp:category_nicename>unix</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[UNIX]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1593088</wp:term_id>
  <wp:category_nicename>useful-quotes</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[USEFUL QUOTES]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>157300</wp:term_id>
  <wp:category_nicename>virtual-machines</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[VIRTUAL-MACHINES]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>2260</wp:term_id>
  <wp:category_nicename>web-development</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[WEB DEVELOPMENT]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>2358</wp:term_id>
  <wp:category_nicename>web-services</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[WEB SERVICES]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>152581</wp:term_id>
  <wp:category_nicename>wicket</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[WICKET]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>12954</wp:term_id>
  <wp:category_nicename>wsdl</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[WSDL]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>2674</wp:term_id>
  <wp:category_nicename>bash</wp:category_nicename>
  <wp:category_parent>unix</wp:category_parent>
  <wp:cat_name><![CDATA[BASH]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>145840</wp:term_id>
  <wp:category_nicename>capistrano</wp:category_nicename>
  <wp:category_parent>ruby</wp:category_parent>
  <wp:cat_name><![CDATA[CAPISTRANO]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>21155644</wp:term_id>
  <wp:category_nicename>ejb-3-0</wp:category_nicename>
  <wp:category_parent>java</wp:category_parent>
  <wp:cat_name><![CDATA[EJB 3.0]]></wp:cat_name>
  <wp:category_description><![CDATA[EJB 3.0]]></wp:category_description>
</wp:category>
<wp:category>
  <wp:term_id>883</wp:term_id>
  <wp:category_nicename>groovy</wp:category_nicename>
  <wp:category_parent>jvm</wp:category_parent>
  <wp:cat_name><![CDATA[GROOVY]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>12303</wp:term_id>
  <wp:category_nicename>homebrew</wp:category_nicename>
  <wp:category_parent>unix</wp:category_parent>
  <wp:cat_name><![CDATA[HOMEBREW]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>241408</wp:term_id>
  <wp:category_nicename>lift</wp:category_nicename>
  <wp:category_parent>scala</wp:category_parent>
  <wp:cat_name><![CDATA[LIFT]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>808</wp:term_id>
  <wp:category_nicename>mac</wp:category_nicename>
  <wp:category_parent>unix</wp:category_parent>
  <wp:cat_name><![CDATA[MAC]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>697649</wp:term_id>
  <wp:category_nicename>nginx</wp:category_nicename>
  <wp:category_parent>unix</wp:category_parent>
  <wp:cat_name><![CDATA[NGINX]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>93301</wp:term_id>
  <wp:category_nicename>postfix</wp:category_nicename>
  <wp:category_parent>unix</wp:category_parent>
  <wp:cat_name><![CDATA[POSTFIX]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>6652</wp:term_id>
  <wp:category_nicename>rails</wp:category_nicename>
  <wp:category_parent>ruby</wp:category_parent>
  <wp:cat_name><![CDATA[RAILS]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>130460</wp:term_id>
  <wp:category_nicename>sbt</wp:category_nicename>
  <wp:category_parent>scala</wp:category_parent>
  <wp:cat_name><![CDATA[SBT]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>666241</wp:term_id>
  <wp:category_nicename>vagrant</wp:category_nicename>
  <wp:category_parent>virtual-machines</wp:category_parent>
  <wp:cat_name><![CDATA[VAGRANT]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>633122</wp:term_id>
  <wp:category_nicename>virtual-box</wp:category_nicename>
  <wp:category_parent>virtual-machines</wp:category_parent>
  <wp:cat_name><![CDATA[VIRTUAL-BOX]]></wp:cat_name>
</wp:category>
<wp:tag>
  <wp:term_id>1017</wp:term_id>
  <wp:tag_slug>java</wp:tag_slug>
  <wp:tag_name><![CDATA[JAVA]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>808</wp:term_id>
  <wp:tag_slug>mac</wp:tag_slug>
  <wp:tag_name><![CDATA[MAC]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>25</wp:term_id>
  <wp:tag_slug>open-source</wp:tag_slug>
  <wp:tag_name><![CDATA[Open Source]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>233223</wp:term_id>
  <wp:tag_slug>ubun</wp:tag_slug>
  <wp:tag_name><![CDATA[UBUN]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>255</wp:term_id>
  <wp:tag_slug>ubuntu</wp:tag_slug>
  <wp:tag_name><![CDATA[UBUNTU]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>9203</wp:term_id>
  <wp:tag_slug>unix</wp:tag_slug>
  <wp:tag_name><![CDATA[UNIX]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>633122</wp:term_id>
  <wp:tag_slug>virtual-box</wp:tag_slug>
  <wp:tag_name><![CDATA[VIRTUAL-BOX]]></wp:tag_name>
</wp:tag>
<generator>http://wordpress.com/</generator>
<image>
		<url>http://s2.wp.com/i/buttonw-com.png</url>
		<title>Ikenna Okpala&#039;s BlogIkenna Okpala&#039;s Blog</title>
		<link>http://ikennaokpala.wordpress.com</link>
	</image>
	<item>
  <title>About Me</title>
  <link>http://ikennaokpala.wordpress.com/about/</link>
  <pubDate>Sat, 03 Oct 2009 15:45:35 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false"></guid>
  <description></description>
  <content:encoded><![CDATA[Ikenna Okpala is a software engineer excelling in varied development environments, focused on building shippable software applications with adaptive capabilities.

His experience includes Object Oriented Analysis and Design, Ruby, C#/.NET, Functional programming, Database, Java/Scala/JVM technology and Open Source bazaars.

He shares his thoughts via his <a href="http://ikennaokpala.wordpress.com/" target="_blank">blog</a> and on twitter: @<a href="http://twitter.com/kengimel">kengimel</a>.

He is a Certified Scrum Master, Oracle/Sun Certified Professional (<a href="http://education.oracle.com/pls/web_prod-plq-dad/db_pages.getpage?page_id=155" target="_blank">OCP:AD</a>, <a href="http://in.sun.com/training/certification/java/scea.xml" target="_blank">SCEA 5</a>, etc.).

Ikenna is also a member of the Association for Computing Machinery (ACM), British Computer Society (BCS) and other related (developer) communities.

Prior to working as a software developer, he has worked as a banking intern and is a trained Agricultural Economist.

When he is less busy, he enjoys to listen to varying genres of Music or play the keyboard, bass or lead guitar.

Finally,....

ike believes he is nothing without God Almighty ... and everything with God Almighty ...]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2</wp:post_id>
  <wp:post_date>2009-10-03 15:45:35</wp:post_date>
  <wp:post_date_gmt>2009-10-03 15:45:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>about</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>322</wp:comment_id>
    <wp:comment_author><![CDATA[source]]></wp:comment_author>
    <wp:comment_author_email>HuritBinney19838@aol.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.aol.com/bc840564e3cca3272bcc500f78e5eee09d5450e5</wp:comment_author_url>
    <wp:comment_author_IP>69.46.77.215</wp:comment_author_IP>
    <wp:comment_date>2012-06-04 06:35:30</wp:comment_date>
    <wp:comment_date_gmt>2012-06-04 06:35:30</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I feel one of your current advertisements initiated my web browser to resize, you may well need to place that on your blacklist.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1338796789.4835";s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1338796771.4104";s:7:"message";s:49:"kengimel changed the comment status to unapproved";s:5:"event";s:17:"status-unapproved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1338796680</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1338796680.5867";s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1338791731.6405";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>224</wp:comment_id>
    <wp:comment_author><![CDATA[Shjeel Ahmed]]></wp:comment_author>
    <wp:comment_author_email>shjeel@abrs.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.abrs.com</wp:comment_author_url>
    <wp:comment_author_IP>77.107.139.5</wp:comment_author_IP>
    <wp:comment_date>2011-08-17 17:00:05</wp:comment_date>
    <wp:comment_date_gmt>2011-08-17 17:00:05</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Ikenna,

I would like to talk to you about hiring you as a Java/Scala Developer for a huge platform building project.

Of any interest?

Shjeel]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1313602810</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1313602810.797";s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1313600405.6688";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>When is the future?</title>
  <link>http://ikennaokpala.wordpress.com/2006/04/14/when-is-the-future/</link>
  <pubDate>Fri, 14 Apr 2006 13:23:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2006/04/14/when-is-the-future</guid>
  <description></description>
  <content:encoded><![CDATA[In my early years, I conceived the future as a distant state along the dimension of time waiting to happen; but as I grew up I got to learn that such a view of the future is not only naive, but ironically, unrealistic. Even though the literary perception of futuristic concepts suggests the above, it is flayed in the fact that it is practically unreal. The future is now. Today was the future of yesterday. This moment was the future a nanosecond ago. This view has helped me gain some control of my life's direction based on the underlying principle of cause and effect. Since this realization, I have treated every futuristic phenonemon from the perspective of the network of causes, events, reactions and effects.

By Roland Ukor]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>10</wp:post_id>
  <wp:post_date>2006-04-14 13:23:00</wp:post_date>
  <wp:post_date_gmt>2006-04-14 13:23:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>when-is-the-future</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="out-of-the-box-the-very-beginning"><![CDATA[Out Of The Box (&quot;The Very Beginning&quot;)]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[114502149687294663]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Enterprise JavaBeans Technology (EJB 3.0)</title>
  <link>http://ikennaokpala.wordpress.com/2007/05/31/enterprise-javabeans-technology-ejb-3-0/</link>
  <pubDate>Thu, 31 May 2007 17:20:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2007/05/31/enterprise-javabeans-technology-ejb-3-0</guid>
  <description></description>
  <content:encoded><![CDATA[<span style="font-family:arial;"><strong>Enterprise Java Beans</strong> is a component architecture for the development and deployment of object-oriented, distributed, enterprise-level applications. Applications written using the Enterprise JavaBeans architecture are scalable, transactional, multi-user and secure.
<strong>EJB</strong> is designed to support application portability and reusability across any vendor’s enterprise middleware services.</span>

<span style="font-family:arial;"><strong>EJB</strong> is a standard for developing and deploying server-side distributed components in Java. It defines an agreement (contract) between components and application servers that enables any component to run in any compliant application server.</span>

<span style="font-family:arial;">Despite the rich features, the complexity of the <strong>EJB</strong> architecture has hindered its wide adoption. Various component technologies have taken over the <strong>EJB</strong> arena. For example Toplink and the open-source Hibernate framework have overtaken <strong>EJB</strong> as a better and easier choice for developing persistence solutions. </span>

<span style="font-family:arial;"><strong>EJB 3.0</strong> brings us closer to the dream of creating enterprise beans like regular objects. It reduces the number of programming artifacts for developers, eliminates or minimizes callback methods required to be implemented, and reduces the complexity of the entity bean programming model and O/R mapping model. With <strong>EJB 3.0</strong>, J2EE now Java EE seems accessible to a much wider audience.</span>

<span style="font-family:arial;">In this article, we first briefly discuss the pitfalls of <strong>EJB 2.1.</strong> Next, we describe how <strong>EJB 3.0</strong> provides solution to these difficulties by describing the significant changes.</span>

<span style="font-family:arial;"><strong>Pitfalls of EJB 2.1.</strong></span>

<span style="font-family:arial;"><em>EJBs with EJB 2.1 hasn't been the easiest thing to do. The reasons are easy to find:</em></span>
<span style="font-family:arial;"> </span>
<ul>
	<li><em>To create a single EJB you need to create a multitude of XML deployment descriptors. </em></li>
	<li><em>A set of three source files must be created. </em></li>
	<li><em>Multiple callback methods must be implemented that usually are never used.</em></li>
	<li><em>You have to throw and catch several types of unnecessary exceptions. </em></li>
	<li><em>Yet another complaint is that the EJBs are completely untestable outside the context of the container since components like container-managed entity beans are abstract classes.</em></li>
	<li><em>Finally, EJB-QL in its current form is limited in functionality and difficult to use. These limitations force developers to use straight JDBC and SQL, or to use other persistence frameworks such as Toplink and Hibernate. </em></li>
</ul>
<em>The sheer verbosity of the API has been one big annoyance, and EJB 3.0 makes a significant attempt to address most issues. This article covers the important aspects of this specification.</em>

The two most significant changes in the proposed EJB 3.0 specification are the use of the program annotation facility introduced in Java 5 and the new O/R mapping model based on Hibernate's pattern.

Java SE 5 has introduced a new program annotation facility to the language. With this facility, you can define custom annotations and then annotate fields, methods, classes, etc., with these annotations. Annotations do not directly affect program semantics, but tools (compile time or runtime) can inspect these annotations to generate additional constructs (like a deployment descriptor) or enforce desired runtime behavior (like an EJB component's stateful nature).

Annotations can be inspected through source parsing (e.g., compilers or IDE tools) or by using the additional reflection APIs added in Java 5. Annotations can be defined to be available only at the source code level, at the compiled class level, or at runtime. All annotations proposed in the EJB 3.0 early draft have a RetentionPolicy of RUNTIME.

This increases the class's memory footprint marginally, but makes the life of container provider and tool provider much easier.This brings to an end the configuration of XML deployment descriptors was a major bottleneck in the path to simplifying development of EJBs. Therefore one of the primary goals of the EJB 3.0 specification was to shield the developer from having to work with XML files.

This is accomplished by the use of metadata annotations that have been added to JDK 5.0 as part of the JSR 175 JCP specification. Annotations are a kind of attribute-oriented programming and are similar to XDoclet.

However, unlike XDoclet, which requires pre-compilation, annotations are compiled into the classes by the Java compiler at compile-time. From the developer's point of view, annotations are modifiers like public/private and can be used in classes, fields, or methods.

Hibernate is a popular, open source O/R mapping framework for Java environments, meant to shield developers from most common data-persistence-related programming tasks. It also has a specific Hibernate Query Language (HQL), imprints of which can be seen in the new EJB QL. Hibernate offers facilities for data retrieval and update, connection pooling, transaction management, declarative entity relationship management, and declarative and programmatic queries.

The new entity beans are also just POJOs with a few annotations and are not persistent entities by birth. An entity instance becomes persistent once it is associated with an EntityManager and becomes part of a persistence context. A persistence context is loosely synonymous with a transaction context; in strict words, it implicitly coexists with a transaction's scope.

The entity relationships are also defined through annotations। In addition, O/R mapping is also done through annotations, and support for several database-specific operations is provided.

With EJB 2.1, developers used their own design patterns or employed nonportable techniques (for example, auto key generation strategies).

<span style="font-family:Arial;">The main aim of the <strong>EJB 3.0</strong> is to provide an improved <strong>EJB</strong> architecture by reducing its complexity from enterprise application developer's point of view.</span>

<span style="font-family:Arial;"><strong>EJB 3.0</strong> is focused on the following goals:</span>
<ul>
	<li>Definition of the Java language metadata annotations that can be used to annotate EJB applications. These metadata annotations are targeted at simplifying the developer’s task, at reducing the number of program classes and interfaces the developer is required to implement, and at eliminating the need for the developer to provide an EJB deployment descriptor.</li>
	<li>Specification of programmatic defaults, including for metadata, to reduce the need for the
developer to specify common, expected behaviors and requirements on the EJB container. A “configuration by exception” approach is taken whenever possible.</li>
	<li>Encapsulation of environmental dependencies and JNDI access through the use of annotations,
dependency injection mechanisms, and simple lookup mechanisms.</li>
	<li><span style="font-family:arial;">Simplification of the enterprise bean types.</span></li>
	<li><span style="font-family:arial;"><span style="font-family:arial;">Elimination of the requirement for EJB component interfaces for session beans. The required business interface for a session bean can be a plain Java interface rather than an EJBObject, EJBLocalObject, or java.rmi.Remote interface</span>.</span></li>
	<li><span style="font-family:arial;">Elimination of the requirement for home interfaces for session beans.</span></li>
	<li><span style="font-family:arial;">Simplification of entity persistence through the Java Persistence API. Support for light-weight
domain modeling, including inheritance and polymorphism.</span></li>
	<li><span style="font-family:arial;">Elimination of all required interfaces for persistent entities.</span></li>
	<li><span style="font-family:arial;">Specification of Java language metadata annotations and XML deployment descriptor elements for the object/relational mapping of persistent entities.</span></li>
	<li><span style="font-family:arial;">A query language for Java Persistence that is an extension to EJB QL, with addition of projection, explicit inner and outer join operations, bulk update and delete, subqueries, and
group-by. Addition of a dynamic query capability and support for native SQL queries.</span></li>
	<li><span style="font-family:arial;">An interceptor facility for session beans and message-driven beans.</span></li>
	<li><span style="font-family:arial;">Reduction of the requirements for usage of checked exceptions.</span></li>
	<li><span style="font-family:arial;">Elimination of the requirement for the implementation of callback interfaces.</span></li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>11</wp:post_id>
  <wp:post_date>2007-05-31 17:20:00</wp:post_date>
  <wp:post_date_gmt>2007-05-31 17:20:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>enterprise-javabeans-technology-ejb-3-0</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ejb-3-0"><![CDATA[EJB 3.0]]></category>
  <category domain="category" nicename="java"><![CDATA[JAVA]]></category>
  <category domain="category" nicename="jpa"><![CDATA[JPA]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[4810560316528284083]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Which Type Of Woman Is Your Girlfriend?</title>
  <link>http://ikennaokpala.wordpress.com/2007/06/14/which-type-of-woman-is-your-girlfriend/</link>
  <pubDate>Thu, 14 Jun 2007 07:48:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2007/06/14/which-type-of-woman-is-your-girlfriend</guid>
  <description></description>
  <content:encoded><![CDATA[<strong>HARD-DISK WOMAN:</strong> She remembers everything, FOREVER.
<strong>RAM WOMAN:</strong> She forgets about you the moment you turn her off.
<strong>WINDOWS WOMAN:</strong> Everyone knows that she can't do a thing right, but no one can live without her.
<strong>EXCEL WOMAN:</strong> They say she can do a lot of things but you mostly use her for
your four basic needs.
<strong>SCREENSAVER WOMAN:</strong> She is good for nothing but at least she is fun!
<strong>INTERNET WOMAN:</strong> Difficult to access. Everybody will access!!
<strong>SERVER WOMAN:</strong> Always busy when you need her.
<strong>MULTIMEDIA WOMAN:</strong> She makes horrible things look beautiful.
<strong>CD-ROM WOMAN:</strong> She is always faster and faster.
<strong>E-MAIL WOMAN:</strong> Every ten things she says, eight are nonsense.
<strong>VIRUS WOMAN:</strong> Also known as "wife"; when you are not expecting her, she comes, installs herself and uses all your resources. If you try to uninstall her you will lose something, if you don't try to uninstall her you will lose everything
<strong>SHAREWARE WOMAN:</strong> free to install but everytime you want to use it you get nagged for money.
<strong>TROJAN HORSE WOMAN:</strong> Lets you in the back door.

<strong>My Favorite is:</strong>
<strong>
</strong><strong><span style="font-size:0;"><span style="font-size:130%;">JAVA  </span> </span>WOMAN:</strong> write once run anywhere i.e platform independent.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>12</wp:post_id>
  <wp:post_date>2007-06-14 07:48:00</wp:post_date>
  <wp:post_date_gmt>2007-06-14 07:48:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>which-type-of-woman-is-your-girlfriend</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="computing-jokes"><![CDATA[Computing Jokes]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[837099987781689027]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Configuring Postfix on Mac (Local SMTP)</title>
  <link>http://ikennaokpala.wordpress.com/2007/06/15/postfixonmac/</link>
  <pubDate>Fri, 15 Jun 2007 22:06:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2007/06/15/the-nigerian-child</guid>
  <description></description>
  <content:encoded><![CDATA[During one of my hack trips.. i was required to use postfix capability. Alright i am a newbie to the Unix environment but i learnt this Hack from sniffing around with some luck on my side..

Well i decided to share my thoughts:

i tried a lot of things to try make this work, but the follow i think are the relevant steps.

Firstly; I did this:
[sourcecode language="bash"]
sudo mate /System/Library/LaunchDaemons/org.postfix.master.plist
[/sourcecode]
and then added this lines of xml code, add following line before the closing  tag:
[sourcecode language="xml"]
&lt;key&gt;RunAtLoad&lt;/key&gt; &lt;true/&gt; &lt;key&gt;KeepAlive&lt;/key&gt; &lt;true/&gt;

[/sourcecode]

then after start service with
[sourcecode language="bash"]
sudo launchctl
launchd% start org.postfix.master
or simply run
sudo postfix start
[/sourcecode]
Another thing is editing the following files:
[sourcecode language="bash"]
Edit the MAILSERVER=-NO- line in /etc/hostconfig. Change it to read MAILSERVER=-YES-. Save and exit the file.
Open up /etc/postfix/main.cf, and edit these lines to reflect your setup. These are examples from my setup; yours might be different.
LINE 67: myhostname = localhost
LINE 75: mydomain = localhost
LINE 91: myorigin = $mydomain
LINE 105: inet_interfaces = all
LINE 152: mydestination = $myhostname, localhost.$mydomain
LINE 239: mynetworks_style = subnet
LINE 253: mynetworks = 192.168.0.0/23, 127.0.0.0/8
Save your work, and exit the file.
Open up /etc/postfix/master.cf, and uncomment line 77 -- change #smtp inet n - n - - smtpd to smtp inet n - n - - smtpd. Save and exit the file.
[/sourcecode]

Check that postfix SMTP mock is running:
[sourcecode language="bash"]
telnet localhost 25

[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>13</wp:post_id>
  <wp:post_date>2007-06-15 22:06:00</wp:post_date>
  <wp:post_date_gmt>2007-06-15 22:06:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>postfixonmac</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="mac"><![CDATA[MAC]]></category>
  <category domain="category" nicename="postfix"><![CDATA[POSTFIX]]></category>
  <category domain="category" nicename="unix"><![CDATA[UNIX]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[6785466917874934157]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[the-nigerian-child]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>1177</wp:comment_id>
    <wp:comment_author><![CDATA[modern living room chairs]]></wp:comment_author>
    <wp:comment_author_email>jeannegaskin@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.squidoo.com/upholstered-chairs-for-living-room</wp:comment_author_url>
    <wp:comment_author_IP>108.62.215.12</wp:comment_author_IP>
    <wp:comment_date>2013-03-05 00:47:42</wp:comment_date>
    <wp:comment_date_gmt>2013-03-05 00:47:42</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Greetings from Colorado! I'm bored to death at work so I decided to check out your blog on my iphone during lunch break. I really like the information you present here and can't wait to take a look when I 
get home. I'm surprised at how fast your blog loaded on my cell phone .. I'm not even using 
WIFI, just 3G .. Anyhow, amazing site!]]></wp:comment_content>
    <wp:comment_approved>trash</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1362444463.0150909423828125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_wp_trash_meta_time</wp:meta_key>
      <wp:meta_value>1365004183</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_wp_trash_meta_status</wp:meta_key>
      <wp:meta_value>0</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1365004183.5771129131317138671875;s:7:"message";s:44:"kengimel changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>A.C.I.D MODEL</title>
  <link>http://ikennaokpala.wordpress.com/2007/07/03/a-c-i-d-model/</link>
  <pubDate>Tue, 03 Jul 2007 16:57:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2007/07/03/a-c-i-d-model</guid>
  <description></description>
  <content:encoded><![CDATA[The ACID model has been a crucial aspect of database modeling and theory for a very long time.
It  revolves around four  objectives that every database management system must strive to achieve, these are:
<ul><li><strong>Atomicity (A).</strong><strong>
</strong></li><li><strong>Consistency (C).</strong></li><li><strong>Isolation (I).</strong></li><li><strong>Durability (D)</strong>.</li></ul><strong>Atomicity  </strong>stipulates that database transactions must follow an all or nothing rule.Each transaction is said to be atomic.If one part of the transaction fails, the entire transaction fails.This is easy to do because of the singular purpose served by the transaction. This is also referred to as the "all or nothing" approach. It is critical that the database management system maintain the atomic nature of transactions in spite of any DBMS, operating system or hardware failure.

<strong>Consistency </strong>states that only valid data will be written to the database. If, for some reason, a transaction is executed that violates the database’s consistency rules, the entire transaction will be rolled back and the database will be restored to a state consistent with those rules. On the other hand, if a transaction successfully executes, it will take the database from one state that is consistent with the rules to another state that is also consistent with the rules. To help out with this, we use rules, keys, normalization, etc all help to maintain data integrity. All of these things combined helps to ensure our data always exists in a consistent state.

<strong>Isolation</strong>  occurs when transactions to your data must be isolated from other concurrent transactions. No concurrent transaction (Transaction A) should see any data being modified by anotheroncurrent transaction (Transaction B) while it is in an intermediate state. Transaction A should see the data as it existed prior to being modified by Transaction B, or after Transaction B has completed and committed its changes. it requires that multiple transactions occurring at the same time not interrupting each other’s execution. For example, if  Mr. A issues a transaction against a database at the same time that Mr. B  issues a different transaction, both transactions should operate on the database in an isolated manner. The database should either perform Mr. A ’s entire transaction before executingMr. B ’s or vice-versa.This prevents Mr. A ’s transaction from reading intermediate data produced as a side effect of part of Mr. B ’s transaction that will not eventually be committed to the database. Note that the isolation property does not ensure which transaction will execute first, merely that they will not interfere with each other.

<strong>Durability</strong>  after ("all said and done") a transaction has successfully completed and committed it changes, the data is permanently in place in the database, even in the event of hardware or software failures. Durability is ensured through the use of database backups and transaction logs that facilitate the restoration of committed transactions in spite of any subsequent software or hardware failures.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>14</wp:post_id>
  <wp:post_date>2007-07-03 16:57:00</wp:post_date>
  <wp:post_date_gmt>2007-07-03 16:57:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>a-c-i-d-model</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="database"><![CDATA[DATABASE]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[4703040884048661254]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>An Entity</title>
  <link>http://ikennaokpala.wordpress.com/2007/07/17/an-entity/</link>
  <pubDate>Tue, 17 Jul 2007 15:31:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2007/07/17/an-entity</guid>
  <description></description>
  <content:encoded><![CDATA[An <strong>Entity</strong>  defines an abstract type of object, the instances of which can be mapped into a relational table, ie a table containing a header consisting of a set of attributes, and a body consisting of a variable set of tuples (rows with values for the attributes).

Any concrete or abstract thing of interest, including associations among things; for example, a person, object, event, or process that is of interest in the context under consideration, and about which data may be stored in a database.

An <strong>Entity</strong> is something that has a distinct, separate existence, though it need not be a material existence. In particular, abstractions and legal fictions are usually regarded as entities. In general, there is also no presumption that an entity is animate.

it is useful for managing all the information about a client, during the whole lifetime of the client, ie it has to keep this information also between successive shutdowns and reboots of the system. So, it has a persistent state and a persistent identity, which are both visible to its clients.

An <strong>Entity</strong> is a thing of significance, either real or conceptual, about which the business or system being modeled needs to hold information. Sample entities: EMPLOYEE, DEPARTMENT, CAR, etc. Each entity in a ERD (<strong>Entity Relationship Diagrams</strong>) generally correspond to a physical table on database level.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>15</wp:post_id>
  <wp:post_date>2007-07-17 15:31:00</wp:post_date>
  <wp:post_date_gmt>2007-07-17 15:31:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>an-entity</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="jpa"><![CDATA[JPA]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[7726050751162369704]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>DATABASE MODELLING USING NORMALIZATION</title>
  <link>http://ikennaokpala.wordpress.com/2007/07/20/database-modelling-using-normalization/</link>
  <pubDate>Fri, 20 Jul 2007 14:46:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2007/07/20/database-modelling-using-normalization</guid>
  <description></description>
  <content:encoded><![CDATA[<strong>Key purposes of normalization are as follows:</strong>
<strong></strong>
1. Avoid duplication of data in your data structure.

2. Avoid redundancy of data in your data structure.

<strong>A PRACTICAL APPROACH TO NORMALIZATION</strong>
<strong></strong>
1. List all attributes (from forms, files, reports collected during system analysis and design).

2. Group all related attributes to create entities.

3. Introduce primary key to each entity to enforce uniqueness.

4. Relate entities introducing foreign key – introducing data integrity.

Hint: degrees of relationship.Break down many-to-many into 2 one-to-many relationships.

5. Further extract related attributes to create new entities.

6. Repeat 3 to 5 until cannot extract related attributes (you are at the 3rd normal form).

<em><strong>ALWAYS REMEMBER:</strong></em>
Database models are driven by the business process ,the forms, reports and files collected during system analysis.

Watch out for business rules and processes, could lead to new entity creation and/or look-up tables or static data.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>16</wp:post_id>
  <wp:post_date>2007-07-20 14:46:00</wp:post_date>
  <wp:post_date_gmt>2007-07-20 14:46:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>database-modelling-using-normalization</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="database"><![CDATA[DATABASE]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[540660082694444953]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Database Best Practices</title>
  <link>http://ikennaokpala.wordpress.com/2007/09/13/database-best-practices/</link>
  <pubDate>Thu, 13 Sep 2007 14:36:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2007/09/13/database-best-practices</guid>
  <description></description>
  <content:encoded><![CDATA[<strong>These "best practices" for evolutionary/ database development are:</strong>

<strong>Database refactoring.</strong>  A database refactoring is a small change to your database schema which improves its design without changing its semantics (e.g. you don't add anything nor do you break anything).  The process of database refactoring is the evolutionary improvement of your database schema so as to improve your ability to support the new needs of your customers.

<strong>Data modeling</strong>.  With an evolutionary approach to data modeling you model the data aspects of a system iteratively and incrementally.  With an agile approach you do so in a highly collaborative manner.  You will envision the initial requirements and architecture early in the project at a high-level and then model storm the details on a just in time (JIT) basis when and if they're needed -- no more "big up front modeling (BMUF)".
<strong>
Database regression testing.</strong>
You should ensure that your database schema actually meets the requirements for it, and the best way to do that is via testing.  With a test driven development (TDD) approach you write a unit test before you write production database schema code, the end result being that you have a 100% regression test for your database schema.  Testing provides the concrete feedback that you need to ensure data quality.

<strong>Configuration management of database artifacts.</strong>  Your data models, database tests, test data, and so on are important project artifacts which should be configuration managed just like any other artifact.

<strong>Developer sandboxes</strong>.  Developers need their own working environments, called sandboxes, where they can modify the portion of the system which they are building and get it working before they integrate their work with that of their teammates.

<strong>Data normalization.</strong>  Data normalization is a process in which data attributes within a data model are organized to increase the cohesion of entity types.  In other words, the goal of data normalization is to reduce and even eliminate data redundancy, an important consideration for application developers because it is incredibly difficult to stores objects in a relational database that maintains the same information in several places.

<strong>Set a realistic primary key strategy.</strong>  The fact is that sometimes it makes sense to use natural keys and sometimes surrogate keys.  As a professional you need to understand when to apply each strategy, and to be prepared to refactor if you discover that you've made the wrong choice.
<strong>
Database encapsulation.</strong>
A database encapsulation layer hides the implementation details of your database(s), including their physical schemas, from your business code.  In effect it provides your business objects with persistence services – the ability to read data from, write data to, and delete data from – data sources.  Ideally your business objects should know nothing about how they are persisted, it just happens.  Database encapsulation layers aren’t magic and they aren’t academic theories; database encapsulation layers are commonly used practice by both large and small applications as well as in both simple and complex applications.  Database encapsulation layers are an important technique that every agile software developer should be aware of and be prepared to use.

<strong>Train developers in basic data skills.</strong>  This enables developers to both improve their data-oriented work and to interact with data professionals more effectively.  Fundamental skills include: relational database fundamentals, data modeling, mapping objects to RDBs (O/R mapping), working with legacy data, XML, referential integrity and shared business logic, how to retrieve objects from an RDB, how to implement reports, security access control, and transactions and concurrency control.

<strong>Train DBAs in basic development skills.</strong>  Similarly, DBAs need to gain an understanding of application development so that they can play active roles on the team(s) which they support.

<strong>Common development guidelines.</strong>  Having a common, usable set of development standards which are easy to understand and to comply to can greatly improve the quality of the systems that you develop.  These guidelines may include, but not be limited to, programming guidelines, modeling style guidelines, and data naming conventions.

<strong>Lean data governance.</strong>  The goal of data governance is to ensure the quality, availability, integrity, security, and usability within an organization.  The way that you go about this is up to you.  Many traditional approaches to data governance seem to struggle in practice, I suspect in part because of the cultural impedance mismatch but also in part because traditional IT governance struggles in general. The command and control approach typical of traditional governance strategies is a lot like herding cats, you do a lot of work but nothing much gets accomplished in the long run.  Lean governance, on the other hand, is focused on enabling people and motivating them to do the right things.  A lean data governance approach promotes a healthy, collaborative relationship between data professionals and the teams that they're supporting.
<strong>
</strong>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>17</wp:post_id>
  <wp:post_date>2007-09-13 14:36:00</wp:post_date>
  <wp:post_date_gmt>2007-09-13 14:36:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>database-best-practices</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[6676005417191261917]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Persistence and Entity Beans</title>
  <link>http://ikennaokpala.wordpress.com/2007/09/29/persistence-and-entity-beans/</link>
  <pubDate>Sat, 29 Sep 2007 16:12:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2007/09/29/persistence-and-entity-beans</guid>
  <description></description>
  <content:encoded><![CDATA[Persistence is a higher-level abstraction above JDBC. The persistence layer maps objects to database storage so that they can be queried, loaded, updated, or removed without having to go through a verbose API such as JDBC. In older versions of EJB, persistence was part of the EJB platform. Starting with EJB 3.0, persistence has been spun off to its own specification, called the Java Persistence API.

The Java Persistence API defines a way to map regular, plain old Java objects (sometimes referred to as POJOs) to a database. These plain Java objects are called entity beans. Entity beans are like any other Java class, except that they have been mapped, using Java Persistence metadata, to a database. Therefore, they may be inserted and loaded from a database without the developer writing any JDBC connection code or reading from result sets. The Java Persistence API also defines a query language that has features that parallel those in SQL, but is tailored to work with Java objects rather than a raw relational schema.

In the EJB 2.1 specification, entity beans were very "heavyweight" and dependent on the application server and the entire Java EE runtime environment. In Java Persistence, entity beans are regular Java objects that are managed by a persistence service. Unlike their EJB 2.1 counterparts, entities in Java Persistence are not required to implement any special spec-defined interfaces or classes. Another weakness of the older specification was that it left individual vendors to decide how an object should be mapped to a particular database representation. This made EJB 2.1 entity beans mostly nonportable between vendors. The new Java Persistence specification defines a complete object to relational mapping (ORM) so that entity beans can be ported easily from vendor to vendor. Furthermore, because entity beans are now plain Java objects, they are not just portable between application servers; they can be used in regular Java applications outside of an application server and can even be used to transfer data between a client and a server. This makes designs simpler and more compact.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>18</wp:post_id>
  <wp:post_date>2007-09-29 16:12:00</wp:post_date>
  <wp:post_date_gmt>2007-09-29 16:12:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>persistence-and-entity-beans</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ejb-3-0"><![CDATA[EJB 3.0]]></category>
  <category domain="category" nicename="java"><![CDATA[JAVA]]></category>
  <category domain="category" nicename="jpa"><![CDATA[JPA]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[6860556684817567888]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>EJB 3.0's Concurrency Control.</title>
  <link>http://ikennaokpala.wordpress.com/2007/10/23/ejb-3-0s-concurrency-control/</link>
  <pubDate>Tue, 23 Oct 2007 13:16:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2007/10/23/ejb-3-0s-concurrency-control</guid>
  <description></description>
  <content:encoded><![CDATA[Concurrency control is a necessary part of distributed systems  it house's the basics of collisions and type of collisions that can occur.  The EJB Container provides supports for various types of concurrency controls. For now we will concentrate on collision and then techniques to resolve these collisions.

A collision can occur when two or more transactions tries to change the entities within a system of records. There are three causes  which  interfere:
Dirty read
Non Repeatable read
Phantom read

Mainly two mechanism are used to control the concurrency.
Optimistic Locking
Pessimistic Locking]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>19</wp:post_id>
  <wp:post_date>2007-10-23 13:16:00</wp:post_date>
  <wp:post_date_gmt>2007-10-23 13:16:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ejb-3-0s-concurrency-control</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ejb-3-0"><![CDATA[EJB 3.0]]></category>
  <category domain="category" nicename="java"><![CDATA[JAVA]]></category>
  <category domain="category" nicename="jpa"><![CDATA[JPA]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[5089431676243601549]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Dependency injection</title>
  <link>http://ikennaokpala.wordpress.com/2007/10/27/dependency-injection/</link>
  <pubDate>Sat, 27 Oct 2007 13:37:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2007/10/27/dependency-injection</guid>
  <description></description>
  <content:encoded><![CDATA[Dependency injection is the mechanism through which the container injects the requested environmental entry to make available to the bean instance before any bean instance is invoked on that particular instance. Then the container injects these entries into bean variables or methods.

It is a form of push configuration; the container "pushes" dependencies into application objects at runtime. This is the opposite of traditional pull configuration, in which the application object "pulls" dependencies from its environment. Thus, Dependency Injection objects never load custom properties or go to a database to load configuration — the framework is wholly responsible for actually reading configuration.

Dependency Injection is based on Java language constructs, rather than the use of framework-specific interfaces. Instead of application code using framework APIs to resolve dependencies such as configuration parameters and collaborating objects, application classes expose their dependencies through methods or constructorsthat the framework can call with the appropriate values at runtime, based on configuration.<a name="44"></a><a name="beginpage."></a>

It is bean provider's duty to tell the container that which method or variables should be injected at runtime. The bean provider can do this by using the deployment descriptor or annotations. Bean methods used for dependency injection should follow the java naming convention(JavaBeans) for properties in that they should follow the setXYZ() convention.

Consider the situations like dependency injection fails due to some reasons, the container can not make available the environmental entries due to which the bean is functioning properly, in such situations the container discards the bean instances and creates new instances.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>20</wp:post_id>
  <wp:post_date>2007-10-27 13:37:00</wp:post_date>
  <wp:post_date_gmt>2007-10-27 13:37:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>dependency-injection</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="jpa"><![CDATA[JPA]]></category>
  <category domain="category" nicename="spring"><![CDATA[SPRING]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[6105712012454160447]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Annotations</title>
  <link>http://ikennaokpala.wordpress.com/2007/10/29/annotations/</link>
  <pubDate>Mon, 29 Oct 2007 20:31:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2007/10/29/annotations</guid>
  <description></description>
  <content:encoded><![CDATA[Annotation is the method of associating the program elements with the meta tags so that the compiler can extract program behavior to support the annotated elements to generate interdependent code when necessary.

The  objective behind annotations is to make the development ("i.e. coding")  process easier.

Annotations behaves like the meta. The literal meaning of meta data is data about data. Java also signifies this meaning. Annotations are like meta data, means you are free to add your code and can also apply them to variables, parameters, fields type declarations, methods and constructors.

Metadata is also used to create the documentation to perform rudimentary compile time checking and even for tracking down the dependencies in code.

XDoclet contains all these features and is widely used.

Annotations provide a means of indicating about methods, classes, dependencies, incompleteness and also about the references on other methods and classes respectively. Quoting from Sun's official site, "It (annotation-based development) lets us avoid writing boilerplate code under many circumstances by enabling tools to generate it from annotations in the source code. This leads to a declarative programming style where the programmer says what should be done and tools emit the code to do it."]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>21</wp:post_id>
  <wp:post_date>2007-10-29 20:31:00</wp:post_date>
  <wp:post_date_gmt>2007-10-29 20:31:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>annotations</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="jpa"><![CDATA[JPA]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[3908478896951482433]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>My SCBCD 5.0 Experience</title>
  <link>http://ikennaokpala.wordpress.com/2007/11/15/my-scbcd-5-0-experience/</link>
  <pubDate>Thu, 15 Nov 2007 14:26:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2007/11/15/my-scbcd-5-0-experience</guid>
  <description></description>
  <content:encoded><![CDATA[Hi everyone ,

i passed SCBCD 5.0 with 96 %

I used basically the following materials:

O'reilly Enterprise Java Beans 3.0 (extensively used it).

Mastering EJB 3.0 (Partially).

EJB 3.0 Specs (Partially).

SCBCD 5.0 Study Guide by Mikalai Zaikin (extensively used it)As for experience,i would say have got much of the thoery type in EJB 3.0, so found it quite hard in the exam proper.

I even think i failed the drag and drop questions " Well may be ".

Feel free to use the MOCK QUESTIONS on this Blog they were package by me during my prepararion for the exam. (CHECK BLOG ARCHIVE TO NAVIGATE TO THE MOCK QUESTIONS)

i Strongly recommend you using the Mock Question with the EJB 3.0 Specs final release follow it question by question with critism in mind please.

i would love and appreciate your comments, views and other suggests.

&lt;&gt;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>24</wp:post_id>
  <wp:post_date>2007-11-15 14:26:00</wp:post_date>
  <wp:post_date_gmt>2007-11-15 14:26:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>my-scbcd-5-0-experience</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="exam"><![CDATA[EXAM]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[4782912265964720751]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>4</wp:comment_id>
    <wp:comment_author><![CDATA[Krishna]]></wp:comment_author>
    <wp:comment_author_email></wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP></wp:comment_author_IP>
    <wp:comment_date>2009-09-08 05:00:55</wp:comment_date>
    <wp:comment_date_gmt>2009-09-08 05:00:55</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thank you for sharing the info. Can you provide me the details about this <a href="http://www.javabeat.net/products/cert/scbcd-5-0.php" rel="nofollow">SCBCD 5.0 questions</a>. I am planning to buy this one.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Features and Advantages of JPA:</title>
  <link>http://ikennaokpala.wordpress.com/2007/11/15/features-and-advantages-of-jpa/</link>
  <pubDate>Thu, 15 Nov 2007 14:43:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2007/11/15/features-and-advantages-of-jpa</guid>
  <description></description>
  <content:encoded><![CDATA[Java Persistence API is the standard API used for the management of the persistent data and object/relational mapping.

Java Persistence API were added in Java EE 5 platform.

Every application server compatible with Java EE 5 supports the Java Persistent APIs.
Java Persistence API ensures the management of persistence and object/relational mapping.

These are helpful while using the JPA in the development of applications using the platform for Java EE 5. It provides O-R mapping facility to manage relational data in java application.

The Java Persistence API contains the following areas:

Java Persistence API
O-R mapping metadata
The query language

Java Persistence API is a lightweight framework based on POJO for object-relational mapping. Java language metadata annotations and/or XML deployment descriptor is used for the mapping between Java objects and a relational database. It allows the SQL-like query language that works for both static as well as dynamic queries. It also allows the use of the pluggable persistence API. Java Persistence APIs are mainly depends on metadata annotations.

API includes:

Java Persistence API
Metadata annotations
Java Persistence query language


The Java Persistence API is build upon the best ideas from the persistence technologies like TopLink, JDO and Hibernate. Java Persistence API is compatible with Java SE environment as well as Java EE and allows developers to take advantages of the standard persistence API.

Persistence of data is not so easy for most of the enterprise applications because for this they require access to the relational database like Oracle 10g. It is your responsibility to update and retrieve the database by writing the code using SQL and JDBC.

While several object-relational (O-R) frameworks such as JBoss Hibernate and OracleTopLink make persistence challenges simpler and became popular. They let the java developer free from writing JDBC code and to concentrate only on the business logic.

In EJB 2.x, container manage persistence (CMP) try to solve the persistence challenges but not successful completely.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>25</wp:post_id>
  <wp:post_date>2007-11-15 14:43:00</wp:post_date>
  <wp:post_date_gmt>2007-11-15 14:43:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>features-and-advantages-of-jpa</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="jpa"><![CDATA[JPA]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[8803942178233367042]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>"Code Errors" Drive Statement ....</title>
  <link>http://ikennaokpala.wordpress.com/2007/11/17/code-errors-drive-statement/</link>
  <pubDate>Sat, 17 Nov 2007 11:08:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2007/11/17/code-errors-drive-statement</guid>
  <description></description>
  <content:encoded><![CDATA[Code Errors are necessary for success in software development process because in software engineering, as in all careers of importance, victory comes only after many struggles and countless defeats.

Yet each struggle, each defeat, sharpens your skills and strengths, your courage and your endurance, your ability and your confidence and thus each or multiple code errors is a comrade-in-arms forcing you to become better.... or quit.

Each rebuff is an opportunity to move forward; turn away from them, avoid them, and you throw away your future.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>26</wp:post_id>
  <wp:post_date>2007-11-17 11:08:00</wp:post_date>
  <wp:post_date_gmt>2007-11-17 11:08:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>code-errors-drive-statement</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="useful-quotes"><![CDATA[USEFUL QUOTES]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[5145093332565832013]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>SCBCD 5.0 (CX-310-091) Exam Made Easy by Ucertify.</title>
  <link>http://ikennaokpala.wordpress.com/2007/12/11/scbcd-5-0-cx-310-091-exam-made-easy-by-ucertify/</link>
  <pubDate>Tue, 11 Dec 2007 14:34:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2007/12/11/scbcd-5-0-cx-310-091-exam-made-easy-by-ucertify</guid>
  <description></description>
  <content:encoded><![CDATA[The <a href="http://www.ucertify.com/exams/SUN/CX310-091.html">Ucertify SCBCD 5 Exam</a> product is a quality tool that can help you prepare to earn the valuable SCBCD 5.0 (CX 310-091) certification.

The exam questions were detailed and comprehensive. It is a quite unique quality certification training product, I believe that being able to pass these practice exams will virtually assure that you can pass the real exam.

The ability to go through the practice tests and generate detailed reports to illustrate which domain areas / objectives you are weak in is a very helpful feature to aid in utilizing your time wisely. There is no point in continuing to study material you have mastered while running out of time to study the information you are weak in.

Whether you answer the question right, or get it wrong, the Ucertify SCBCD 5 Exam software provides a complete explanation. This sort of detailed feedback is very helpful for cementing the information in your mind. 

I have had a chance to evaluate it, and it is a very good tool for passing the SCBCD 5 exam.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>28</wp:post_id>
  <wp:post_date>2007-12-11 14:34:00</wp:post_date>
  <wp:post_date_gmt>2007-12-11 14:34:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>scbcd-5-0-cx-310-091-exam-made-easy-by-ucertify</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="useful-quotes"><![CDATA[USEFUL QUOTES]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[4916227276532692109]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>The Seven Relationship Types.</title>
  <link>http://ikennaokpala.wordpress.com/2007/12/24/the-seven-relationship-types/</link>
  <pubDate>Mon, 24 Dec 2007 14:34:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2007/12/24/the-seven-relationship-types</guid>
  <description></description>
  <content:encoded><![CDATA[Seven types of relationships can exist between entity beans. There are four types of cardinality: one-to-one, one-to-many, many-to-one, and many-to-many. In addition, each relationship can be either unidirectional or bidirectional. These options seem to yield eight possibilities, but if you think about it, you'll realize that one-to-many and many-to-one bidirectional relationships are actually the same thing. Thus, there are only seven distinct relationship types.

To understand relationships, it helps to think about some simple examples:

One-to-one unidirectional

One-to-one bidirectional

One-to-many unidirectional

One-to-many bidirectional

Many-to-one unidirectional

Many-to-many unidirectional

Many-to-many bidirectional

Note that these relations represent the navigability of your domain model.

Once again, the associations defined in the metadata represent the domain object navigation only.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>29</wp:post_id>
  <wp:post_date>2007-12-24 14:34:00</wp:post_date>
  <wp:post_date_gmt>2007-12-24 14:34:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>the-seven-relationship-types</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="database"><![CDATA[DATABASE]]></category>
  <category domain="category" nicename="jpa"><![CDATA[JPA]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[5447006007207197296]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>OBJECT ORIENTED DESIGN PATTERNS.</title>
  <link>http://ikennaokpala.wordpress.com/2007/12/26/object-oriented-design-patterns/</link>
  <pubDate>Wed, 26 Dec 2007 07:53:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2007/12/26/object-oriented-design-patterns</guid>
  <description></description>
  <content:encoded><![CDATA[When I first encountered the term “DESIGN PATTERNS” it seamed a little strange to me. But, in actuality, design patterns are expedient ways of reusing object-oriented code between developers. The concept of design patterns is basic collection of common interactions between objects that software developers over time found useful.

Design patterns dates back to the early 1980s. Then, languages like Smalltalk were the most common OO language and C++ was still in its burgeoning stage and structured programming was the lead concept and OO programming was not yet as widely supported. The idea of programming frameworks was acknowledged however, and as frameworks developed, some of what we now called design patterns began to materialize.

The Model-View-Controller framework for Smalltalk which separated and provided three interface parts. The parts were referred to as a data model which contain the primary domain parts of the program, the view, which presented the user interface, and the controller, which interacted between the user and the view.

Every one of these segments is a separate object and each has its own convention for managing its data. Communication between the user, the GUI and the data should be carefully controlled and this separation of functions accomplished that very nicely. Three objects talking to each other using this restrained set of connections is an example of a powerful design pattern.

Design patterns portray how objects communicate without being entangled in each other’s data models and methods. Maintaining this partition has at all times been an objective of good OO programming, and if you have been trying to make objects mind their own business, you are probably using some of the common design patterns already. Captivatingly enough, the MVC pattern has reappeared now and we find it used in Java EE 5.0 and Ruby etc.

Design patterns began to be renowned more formally in the early 1990s as a result of discussions, a number of technical meetings and the publishing of the book Design Patterns Elements of Reusable Software, by Gamma, Helm, Johnson and Vlissides. This book, commonly referred to as the Gang of Four or “GoF” book, has had an influential impact on those seeking to understand how to use design patterns and has become an all time best seller.

Design patterns can be at many levels from very low level specific solutions to broadly generalized system issues. Hundreds of patterns exist today  in the literature. They have been discussed in articles, blog and at conferences of all levels of granularity. 

 The process of looking for these patterns is termed “pattern mining,” and can be said to be another research study.

The design patterns selected for inclusion in the GoF Design Patterns book were ones which had several known applications and which were on the focal point level of generality, where they could easily cross
application areas and encompass several objects.

Design Patterns are divided into three types creational, structural and behavioral.

•Creational patterns construct objects, than having the developer instantiate objects directly. This gives the developer’s program more flexibility in deciding which objects need to be created for a given situation.

•Structural patterns makes up groups of objects into larger structures, such as multifaceted user interfaces or financial data.

•Behavioral patterns define the communication between objects in the system and how the flow is controlled in a composite program.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>30</wp:post_id>
  <wp:post_date>2007-12-26 07:53:00</wp:post_date>
  <wp:post_date_gmt>2007-12-26 07:53:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>object-oriented-design-patterns</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="design-patterns"><![CDATA[DESIGN PATTERNS]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[7494029364650782361]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Configuring IIS For NetBeans PHP Plugin</title>
  <link>http://ikennaokpala.wordpress.com/2008/01/16/configuring-iis-for-netbeans-php-plugin/</link>
  <pubDate>Wed, 16 Jan 2008 20:17:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2008/01/16/configuring-iis-for-netbeans-php-plugin</guid>
  <description></description>
  <content:encoded><![CDATA[To install the PHP plugin and create an IIS web server profile:

   1. Check if the PHP plugin is already installed: choose Tools &gt; Plugins and switch to the Installed tab.
   2. If PHP is not on the list of installed plugins, switch to the Available Plugins tab, select the PHP option in the list, and click the Install button.
   3. In the NetBeans IDE main screen, switch to the Services tab, which shows a tree of available databases and web server profiles.
   4. Position the cursor on the Web Servers node and from the context menu choose Add Web Server. The Add New Web Server Record dialog box opens.
   5. In the Connection Name text field, enter the name of the web server profile(in this case enter "IIS ADMIN") and from the Server Type drop-down list, choose one of the connection types:
          * Local Web Server with file access. This option assumes that you have a web server installed on your local computer. Every time you run your PHP project, the IDE copies your source files to a specified directory under the web server document root.
          * Remote Web Server with FTP access. This option allows you to deploy your PHP files to a remote web server via FTP.
            Note: In the development environment using a local web server is recommended. Find how to configure FTP access here.
   6. Click Next and choose the Manual Configuration option.
   7. In the Apache config file Location text box, Leave it Blank.
   8. Click Next.
   9. In the Base Directory text field, enter the subfolder of the Document Root where your PHP files will be copied(for IIS 'C:\Inetpub\wwwroot' is the path to IIS root, now create a folder there and use that folder name only in the Base Directory text field with no path pointing to it just the name of the wwwroot subfolder you just created.). 
  10. Click Next.
  11. For the Document Root Browse to 'C:\Inetpub\wwwroot' or any sub folders as you wish.
  12. Click Finish.
 

  
For More information.. On the Netbeans PHP Plugin <a href="http://php.netbeans.org/">Click here</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>31</wp:post_id>
  <wp:post_date>2008-01-16 20:17:00</wp:post_date>
  <wp:post_date_gmt>2008-01-16 20:17:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>configuring-iis-for-netbeans-php-plugin</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="netbeans"><![CDATA[NETBEANS]]></category>
  <category domain="category" nicename="solutions"><![CDATA[SOLUTIONS]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[5380884180172593189]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>undefined method ‘scaffold’ for blogcontroller:class</title>
  <link>http://ikennaokpala.wordpress.com/2008/01/27/undefined-method-scaffold-for-blogcontrollerclass/</link>
  <pubDate>Sun, 27 Jan 2008 04:12:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2008/01/27/undefined-method-scaffold-for-blogcontrollerclass</guid>
  <description></description>
  <content:encoded><![CDATA[If you get this "undefined method 'scaffold' for blogcontroller:class" in your rails application, when you run your application on your browser most likely you were trying out the <a href="http://www.netbeans.org/kb/60/ruby/rapid-ruby-weblog.html">Netbeans RubyWeblog Example </a>to solve, follow the steps below:

1. Delete the rubyweblog project from the netbeans project Window. (Also check and make sure you delete "rubyweblog project" from it's  physical location on your hard drive and drop any database previously created in relation to the Netbeans RubyWeblog Example).

2. Create a rubyweblog_development database, as described below i.e if already have skip to 3.
Open a command window. 
If it has not already been started, start the MySQL database server. 
Type the following command to create the development database and press Enter. 
mysqladmin -u root -p create rubyweblog_development
Note: If the root user does not have a required password, omit the -p argument

3. In the NetBeans IDE, choose File &gt; New Project. Select Ruby in the Categories field and Ruby on Rails Application in the Projects field. Click Next. Type rubyweblog in the Project Name field. Accept all the other default settings. Click Finish to create the new project. The IDE creates the project directory with the same name as your project.

4. In the editing area, edit the database.yml by providing the password in the development configuration. Save and close the database.yml file.

5. Next For rails 2.0 aplications you generate the model, controller, migrate version and views with the following: 

<em>a.</em> Navigate to your rubyweblog application via commandline Start &gt; Run then type cmd and press enter. i assume your rubyweblog is located at C:\apps\rubyweblog.

<em>b.</em>Within blog project, right click on your Model folder, click "Generate" and select "Resource" from the menu.You can then place your attributes in the parameters field or alternatively type the following "ruby script\generate scaffold post title:string" in the command line and hit enter, This action generates the model, controller, migrate version and views for you.

6.In the Projects window, right-click the rubyweblog node and choose Migrate Database &gt; To Current Version.This action updates the the database to include the posts table. The Output window indicates when the migration is complete. 

7. Under the Configuration node, open routes.rb. Find the line:

# map.connect '', :controller =&gt; "welcome"
 
Edit the line by removing the comment sign (#) using crtl+/ and changing welcome to posts. Expand the Public node, right-click index.html and choose Delete.

Choose File &gt; Save All. 
Click the Run Main Project button in the toolbar.

This action starts the WEBrick server, which is part of the Ruby on Rails framework, and launches the web browser. Following is the first page of the application.

Finally continue the <a href="http://www.netbeans.org/kb/60/ruby/rapid-ruby-weblog.html#08">Netbeans RubyWeblog Example "Doing More: Adding Another Field".</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>32</wp:post_id>
  <wp:post_date>2008-01-27 04:12:00</wp:post_date>
  <wp:post_date_gmt>2008-01-27 04:12:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>undefined-method-scaffold-for-blogcontrollerclass</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="netbeans"><![CDATA[NETBEANS]]></category>
  <category domain="category" nicename="solutions"><![CDATA[SOLUTIONS]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[7920597606344880861]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>SCRIBE’S HIERARCHY – ORDER OF THE SCRIBES</title>
  <link>http://ikennaokpala.wordpress.com/2008/02/15/scribe%e2%80%99s-hierarchy-%e2%80%93-order-of-the-scribes/</link>
  <pubDate>Fri, 15 Feb 2008 14:02:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2008/02/15/scribe%e2%80%99s-hierarchy-%e2%80%93-order-of-the-scribes</guid>
  <description></description>
  <content:encoded><![CDATA[LEVEL 1 - SCRIBBLER
The scribbler is the person who shows evident interest and aptitude for computer related hardware or software. It is their desired of concentration.

LEVEL 2 - SCRIBE-TECH
The Scribe Tech is actively working in the field and has an evident appetite for knowledge, through being a perpetual student. They tend to me more comfortable with computer software and hardware than people. The Scribe Tech is learning fast (but not learned) and does not have much to teach. They are however on their way to becoming an authority in the field.

LEVEL 3 - JUNIOR SCRIBE
The Junior Scribe is an authority in either software or hardware, but has not gone beyond a limited number of skills. In other words, they might be a C++ expert, but uncomfortable in assembly language. They might be a renowned networking architect but know nothing about VoIP. The Junior Scribe needs only release their self imposed boundaries of knowledge and realize the infiniteness of their gift. The Junior Scribe has almost become a god (lowercase god), in their own right.

LEVEL 4 - SCRIBE (FULL-BIRD)
The Scribe has become manifested in the field of computer related technologies or their discipline (such as chemistry, physics, math, etc). When referring to someone outside of the computer related technology field as a Scribe, it is meant as a gesture of honoring the person though they are not directly in the Order of the Scribes. There is no limit to what they can accomplish in software or hardware. Their knowledge is achieved in no less than ten years in the discipline, but often longer. They don’t care much about anything other than other Scribes and their discipline. Though the Scribe may have never used a certain technology, they are already experts on it. These are the hacker’s hacker, the one’s slicing the bleeding edge. They are always ready to teach those READY to learn!

LEVEL 5 - SENIOR SCRIBE
The primary trait of the Senior Scribe is the ability to see the Scribe potential in others and the ability to train them to become Full Birds. They also often have attained purity, adaptivity, and maturity in methodological processes. These are the leaders of the Order of the Scribes.

LEVEL 6 - CHIEF SCRIBE
The Protector and Keeper of the Order of the Scribes. This position is similar to the Pope in that it is usually only passed on to another at death.

By

Barney A Taylor (Chief Scribe), PhD, founder of <a href="http://www.thirteenscribes.com/">Thirteen Scribes Inc.</a>,]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>33</wp:post_id>
  <wp:post_date>2008-02-15 14:02:00</wp:post_date>
  <wp:post_date_gmt>2008-02-15 14:02:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>scribe%e2%80%99s-hierarchy-%e2%80%93-order-of-the-scribes</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="out-of-the-box-the-very-beginning"><![CDATA[Out Of The Box (&quot;The Very Beginning&quot;)]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[7057298276831139822]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Plain Old Java Object (POJO)</title>
  <link>http://ikennaokpala.wordpress.com/2008/03/06/plain-old-java-object-pojo/</link>
  <pubDate>Thu, 06 Mar 2008 08:02:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2008/03/06/plain-old-java-object-pojo</guid>
  <description></description>
  <content:encoded><![CDATA[POJO is YAA (yet another acronym) for Plain Old Java Object, and is favoured by advocates of the idea that the simpler the design, the better. Nowadays POJO’s are everywhere. The name was coined by Martin Fowler, Rebecca Parsons and Josh MacKenzie in September 2000. Most of our development today is done using POJOs.

In Chris Richardson’s (author) words -

The simplicity of POJOs is attractive, especially to those working with the older Enterprise Java Beans (EJB) specification. The topic assumes a simple axiom: The simpler a framework’s design, the more extensible it is to programmers. For example, in an open letter to the Java community, Linda DeMichiel and Craig Russell talk briefly about adopting POJOs for both Java Data Objects (JDO) API 2.0 and the new EJB 3.0 specification, pronouncing the need for a single, simple persistence model. As the FAQ notes, this API “is an evolution of the work started in the JSR 220 Expert Group, which has been expanded to include several members of the JSR 243 (JDO 2.0) Expert Group.” JSR 220 covers the creation of the EJB 3.0 specification, with a stated mandate “to improve the EJB architecture by reducing its complexity from the developer’s point of view.”

The term continues the pattern of older terms for technologies that do not use fancy new features, such as POTS (Plain Old Telephone Service) in telephony, and PODS (Plain Old Data Structures) that are defined in C++ but use only C language features.

The term has most likely gained widespread acceptance because of the need for a common and easily understood term that contrasts with complicated object frameworks. A JavaBean is a POJO that is serializable, has a no-argument constructor, and allows access to properties using getter and setter methods. An Enterprise JavaBean is not a single class but an entire component model (again, EJB 3 reduces the complexity of Enterprise JavaBeans).

The concept of a POJO predates the term POJO as it simply refers to the natural condition of an object class. The term serves as a reminder that simpler designs can be better, rather than incorporating a complicated framework in the architecture of a system without sufficient reason. As designs using POJOs have become more commonly-used, systems have arisen that give POJOs some of the functionality used in frameworks and more choice about which areas of functionality are actually needed. Hibernate and Spring are examples.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>35</wp:post_id>
  <wp:post_date>2008-03-06 08:02:00</wp:post_date>
  <wp:post_date_gmt>2008-03-06 08:02:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>plain-old-java-object-pojo</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[JAVA]]></category>
  <category domain="category" nicename="jpa"><![CDATA[JPA]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[5993300979706835574]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>PROS/CONS OF USING DESIGN PATTERNS.</title>
  <link>http://ikennaokpala.wordpress.com/2008/04/14/proscons-of-using-design-patterns/</link>
  <pubDate>Mon, 14 Apr 2008 10:51:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2008/04/14/proscons-of-using-design-patterns</guid>
  <description></description>
  <content:encoded><![CDATA[Pros.
• Quality, Flexibility and Re-Use
Design Patterns capture solutions to common computing problems and represent the time, effort and experience gained from applying these solutions over numerous domains/iterations. Generally systems that use Design Patterns are elegant, flexible and have more potential for reuse.
• Provide a common frame of reference for discussion of designs
• Patterns can be combined to solve one or more common computing problems
• Provide a common format for pattern specification Intent, Motivation, Applicability, Structure, Participants, Collaborations, Consequences

Cons.
• Complexity.
Design Patterns require a reasonable degree of study and can be difficult for some designers to grasp. Junior designers/developers may not have encountered Design Patterns and have to learn them before they can be productive on a project.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>36</wp:post_id>
  <wp:post_date>2008-04-14 10:51:00</wp:post_date>
  <wp:post_date_gmt>2008-04-14 10:51:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>proscons-of-using-design-patterns</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="design-patterns"><![CDATA[DESIGN PATTERNS]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[3360341124484872087]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>3</wp:comment_id>
    <wp:comment_author><![CDATA[ROBERT]]></wp:comment_author>
    <wp:comment_author_email></wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP></wp:comment_author_IP>
    <wp:comment_date>2008-04-20 19:37:00</wp:comment_date>
    <wp:comment_date_gmt>2008-04-20 19:37:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Good Day,</>I,ve search for those who read RICHDAD books, I saw that you already did and I Thank you for that. </>I would like invite you to read some of my posts about my current views..</>Thank you.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>The Ideal Architect......</title>
  <link>http://ikennaokpala.wordpress.com/2008/05/24/the-ideal-architect/</link>
  <pubDate>Sat, 24 May 2008 11:24:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2008/05/24/the-ideal-architect</guid>
  <description></description>
  <content:encoded><![CDATA[“The ideal architect should be a person of letters, a mathematician, familiar with historical studies, a diligent student of philosophy, acquainted with music, not ignorant of medicine, learned in the responses of jurisconsults, familiar with astronomy and astronomical calculations.”
—<span style="font-weight:bold;">Vitruvius, circa 25 BC</span>

Vitruvius was not referring to a software architect, but the basic idea is that the architect should have the following characteristics. An architect should be a person who is well-rounded, mature, experienced, educated, learns quickly, a leader, communicates well and can make the difficult decision when necessary. For architects to be well-rounded, they must have a working knowledge of the business or problem domain. They can gain this knowledge through experience or education. In addition, architects must have a broad knowledge of technology. An architect might have first-hand experience with a particular technology, but they must have at least a general understanding of competing technologies to make informed decisions about which technology can work best. A good architect evaluates all possible solutions to a problem regardless of the technology being used.

- Sun Certified Enterprise Architect for J2EE™ Technology Study Guide, First Edition.
Mark Cade and Simon Roberts. Prentice Hall PTR.2002. ISBN:0-13-044916-4.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>37</wp:post_id>
  <wp:post_date>2008-05-24 11:24:00</wp:post_date>
  <wp:post_date_gmt>2008-05-24 11:24:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>the-ideal-architect</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="design-patterns"><![CDATA[DESIGN PATTERNS]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[8969194652936930073]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>The Strategy Design Pattern</title>
  <link>http://ikennaokpala.wordpress.com/2008/10/01/the-strategy-design-pattern/</link>
  <pubDate>Wed, 01 Oct 2008 07:13:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2008/10/01/the-strategy-design-pattern</guid>
  <description></description>
  <content:encoded><![CDATA[<a href="http://exciton.cs.rice.edu/javaresources/DesignPatterns/Strategy.jpg"><img src="http://exciton.cs.rice.edu/javaresources/DesignPatterns/Strategy.jpg" alt="" border="0" /></a>

<span class="Apple-style-span" style="color:rgb(102,51,0);font-family:Arial;"><p><span class="Apple-style-span" style="color:rgb(0,0,0);"><span class="Apple-style-span" style="font-family:verdana;"><span class="Apple-style-span" style="font-size:small;">The <span class="Apple-style-span" style="font-weight:bold;">Strategy Design Pattern </span><span class="Apple-style-span" style="line-height:19px;font-family:0;">(also refered to as the <b>policy pattern</b>) <span class="Apple-style-span" style="line-height:normal;font-family:verdana;">basically consists of decoupling an algorithm from its parent, and encapsulating the algorithm into a separate class. Simply put, an object and its behaviour are separated and put into two different classes. This allows you to switch the algorithm that you are using at any time.</span></span></span></span></span></p><p><span class="Apple-style-span" style="color:rgb(0,0,0);"><span class="Apple-style-span" style="font-family:verdana;"><span class="Apple-style-span" style="font-size:small;">There are several advantages to doing this. First, if you have several different behaviours that you want an object to perform, it is much simpler to keep track of them if each behaviour is a separate class, and not buried in the body of some method. Should you ever want to add, remove, or change any of the behaviours, it is a much simpler task, since each one is its own class. Each such behaviour or algorithm encapsulated into its own class is called a Strategy.</span></span></span></p><p><span class="Apple-style-span" style="color:rgb(0,0,0);"><span class="Apple-style-span" style="font-family:verdana;"><span class="Apple-style-span" style="font-size:small;">When you have several objects that are basically the same, and differ only in their behaviour, it is a good idea to make use of the Strategy Pattern.. Using Strategies, you can reduce these several objects to one class that uses several Strategies. The use of strategies also provides a nice alternative to subclassing an object to achieve different behaviours. When you subclass an object to change its behaviour, that behaviour that it executes is static. If you wanted to change what it does, you'd have to create a new instance of a different subclass and replace that object with it. With Strategies, however, all you need to do is switch the object's strategy, and it will immediately change how it behaves. Using Strategies also eliminates the need for many conditional statements. When you have several behaviours together in one class, it is difficult to choose among them without resorting to conditional statements. If you use Strategies you won't need to check for anything, since whatever the current strategy is just executes without asking questions.</span></span></span></p><p><span class="Apple-style-span" style="color:rgb(0,0,0);font-family:verdana;font-size:13px;">
</span></p><p>Reference Antonio García</p></span>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>38</wp:post_id>
  <wp:post_date>2008-10-01 07:13:00</wp:post_date>
  <wp:post_date_gmt>2008-10-01 07:13:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>the-strategy-design-pattern</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="design-patterns"><![CDATA[DESIGN PATTERNS]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[256883200226501742]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Why i like Apache Wicket... ?</title>
  <link>http://ikennaokpala.wordpress.com/2009/06/23/why-i-like-apache-wicket/</link>
  <pubDate>Tue, 23 Jun 2009 15:29:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2009/06/23/why-i-like-apache-wicket</guid>
  <description></description>
  <content:encoded><![CDATA[<span class="Apple-style-span" style="font-family:arial;font-size:100%;"><div><span><span class="Apple-style-span" style="font-size:small;">"Apache Wicket" is the simplest to use java front end framework available on the web.</span></span></div><div><span class="Apple-style-span" style="font-size:small;">
</span></div><div><span class="Apple-style-span" style="font-size:small;">For the following reasons:</span></div><div class="im"><div><span><span class="Apple-style-span" style="font-size:small;">
</span></span></div><div><span><span class="Apple-style-span" style="font-size:small;">- Wicket encourages total separation between plain Java code and  HTML, with the help of meaningful abstractions.  (i.e. allows the java code to handle all the logic)</span></span></div><div><span><span class="Apple-style-span" style="font-size:small;">
</span></span></div><div><span><span class="Apple-style-span" style="font-size:small;">- Wicket provides excellent support and management of server side state transparently.</span></span></div><div><span><span class="Apple-style-span" style="font-size:small;">
</span></span></div><div><span><span class="Apple-style-span" style="font-size:small;">- Very little XML </span><span class="Apple-style-span" style="font-size:small;">configuration is required to get your web application going. this is not the case when compared to </span><span class="Apple-style-span" style="font-size:small;">some other frameworks that are largely dependent on XML config kind of files.</span></span></div><div><span><span class="Apple-style-span" style="font-size:small;">
</span></span></div></div><div><span><span class="Apple-style-span" style="font-size:small;">- And finally, it does not have any special mark up that you would have to learn </span><span class="Apple-style-span" style="font-size:small;">afresh (i.e. just</span></span><span style="line-height:21px;"><span><span class="Apple-style-span" style="font-size:small;"> HTML tags are marked with a simple  and very unnoticeable “wicket:id” tag, and you are done).</span></span></span></div></span>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>39</wp:post_id>
  <wp:post_date>2009-06-23 15:29:00</wp:post_date>
  <wp:post_date_gmt>2009-06-23 15:29:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>why-i-like-apache-wicket</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="wicket"><![CDATA[WICKET]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[6300503994818536363]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java Joke</title>
  <link>http://ikennaokpala.wordpress.com/2009/06/24/java-joke/</link>
  <pubDate>Wed, 24 Jun 2009 04:48:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2009/06/24/java-joke</guid>
  <description></description>
  <content:encoded><![CDATA[<span class="Apple-style-span" style="line-height:14px;"><span class="Apple-style-span" style="font-family:arial;"><span class="Apple-style-span" style="font-size:small;">A group of 4 Microsoft .NET programmers and a group of 4 Java programmers are going on a train to an expo. The MS programmers buy a ticket each, and then watch the Java programmers proceed to buy one ticket between them.

The MS programmers are intrigued and when they get on the train, they watch the Java programmers to see what they do when the guard comes to check the tickets. It turns out that, before the guard comes, they all cram into the toilet. The guard knocks on the door, and asks for the ticket. The guard takes it from under the door, and slides it back.

The MS programmers are all impressed, so on the way back, they buy only one ticket. Only to watch the Java folks get on the train without buying a ticket at all.

When they get on the train, the MS people cram into the toilet, as they saw the Java folks on the earlier journey. The Java programmers then knock on the door, and say "Ticket please". The MS programmers slide the ticket under the door, as they saw the Java programmers do earlier.

"Thank you", they say. "You steal our methods, but you don't understand them."</span></span></span>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>40</wp:post_id>
  <wp:post_date>2009-06-24 04:48:00</wp:post_date>
  <wp:post_date_gmt>2009-06-24 04:48:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-joke</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="computing-jokes"><![CDATA[Computing Jokes]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[3140054553875689431]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Web Development Principles</title>
  <link>http://ikennaokpala.wordpress.com/2009/07/10/web-development-principles/</link>
  <pubDate>Fri, 10 Jul 2009 13:16:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2009/07/10/web-development-principles</guid>
  <description></description>
  <content:encoded><![CDATA[<span class="Apple-style-span" style="font-family:'times new roman';"><span class="Apple-style-span" style="font-size:medium;">Recently, i came across my lecture note which covered rules that make a web site design excellent, this was a lecture given by Mr. Denver Reynolds.

It states clearly that &gt;&gt;&gt;&gt;&gt;
</span></span><ul style="font-family:georgia;"><li><span><span class="Apple-style-span" style="font-family:'times new roman';"><span class="Apple-style-span" style="font-size:medium;">Content is king: Users would visit a site for information. Without information the raison d’etre of the site is non-existent.</span></span></span></li><li><span><span class="Apple-style-span" style="font-family:'times new roman';"><span class="Apple-style-span" style="font-size:medium;"><span></span>User orientated design: If the site design is not focused around the user and facilitating their ease of use the site can appear cumbersome and awkward to use.</span></span></span></li><li><span><span class="Apple-style-span" style="font-family:'times new roman';"><span class="Apple-style-span" style="font-size:medium;"><span></span>Low click depth: Every part of the site should be accessible in just a few clicks of the mouse (ideally 3 or less). This makes the site easy to navigate and find information for the users.</span></span></span></li><li><span><span class="Apple-style-span" style="font-family:'times new roman';"><span class="Apple-style-span" style="font-size:medium;"><span></span>6 second rule: The web page should have loaded into the browser within 6 seconds. This is generally the maximum amount of time a visitor would invest in the site without receiving any return in the form of information.</span></span></span></li><li><span><span class="Apple-style-span" style="font-family:'times new roman';"><span class="Apple-style-span" style="font-size:medium;"><span></span>Page consistency: The page design should appear consistent and coherent, thus signifying the site as a unified whole     </span></span><span><span class="Apple-style-span" style="font-family:'times new roman';"><span class="Apple-style-span" style="font-size:medium;"> </span></span></span><span class="Apple-style-span" style="font-family:'times new roman';"><span class="Apple-style-span" style="font-size:medium;">etc.</span></span></span></li></ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>41</wp:post_id>
  <wp:post_date>2009-07-10 13:16:00</wp:post_date>
  <wp:post_date_gmt>2009-07-10 13:16:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>web-development-principles</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="web-development"><![CDATA[WEB DEVELOPMENT]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[7915783962207789434]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Wicket Diagrams and the Java Duke...</title>
  <link>http://ikennaokpala.wordpress.com/2009/07/18/wicket-diagrams-and-the-java-duke/</link>
  <pubDate>Sat, 18 Jul 2009 06:42:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2009/07/18/wicket-diagrams-and-the-java-duke</guid>
  <description></description>
  <content:encoded><![CDATA[<a href="http://ikennaokpala.files.wordpress.com/2009/07/wicketsm.jpg"><img src="http://ikennaokpala.files.wordpress.com/2009/07/wicketsm.jpg?w=300" border="0" alt="" /></a><span class="Apple-style-span" style="white-space:pre;"><span class="Apple-style-span" style="font-size:large;"></span></span>

<span class="Apple-style-span" style="white-space:pre;"><span class="Apple-style-span" style="font-size:large;"><span class="Apple-style-span" style="font-family:'times new roman';">Wicket Diagrams and the Java Duke...</span></span></span>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>42</wp:post_id>
  <wp:post_date>2009-07-18 06:42:00</wp:post_date>
  <wp:post_date_gmt>2009-07-18 06:42:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>wicket-diagrams-and-the-java-duke</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[JAVA]]></category>
  <category domain="category" nicename="wicket"><![CDATA[WICKET]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[7040525192051891619]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>2002 – Can’t connect to local MySQL server through socket ‘/var/mysql/mysql.sock’</title>
  <link>http://ikennaokpala.wordpress.com/2009/08/11/2002-cant-connect-to-local-mysql-server-through-socket-varmysqlmysql-sock/</link>
  <pubDate>Tue, 11 Aug 2009 00:18:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2009/08/11/2002-cant-connect-to-local-mysql-server-through-socket-varmysqlmysql-sock</guid>
  <description></description>
  <content:encoded><![CDATA[<span style="font-family:'times new roman';"><span style="font-size:medium;">Today, i stopped being a fan of MAMP for integrating PHP Apache and MYSQL, and i decided to setup Apache, MYSQL and PHP stack on my MAC OS X 10.5.7 (leopard) the good old way...</span></span>
<div><span style="font-size:medium;"> </span><span style="font-family:'times new roman', fantasy;">
</span>
<div><span style="font-family:'times new roman';"><span style="font-size:medium;">But, i encountered this error: </span></span><span style="border-collapse:collapse;white-space:pre;"><span style="color:#ff0000;"><span style="font-family:'times new roman';"><span style="font-size:medium;">2002 - Can't connect to local MySQL server through socket '/var/mysql/mysql.sock' (2).</span></span></span></span></div>
<div><span style="border-collapse:collapse;white-space:pre;"><span style="font-family:'times new roman';"><span style="font-size:medium;">
</span></span></span></div>
<div><span style="border-collapse:collapse;white-space:pre;"><span style="font-family:'times new roman';"><span style="font-size:medium;">Wow... i then discovered funny enough, that MYSQL instance was running perfectly and i was able to connect MYSQL </span></span></span></div>
<div><span style="border-collapse:collapse;white-space:pre;"><span style="font-family:'times new roman';"><span style="font-size:medium;">via the MYSQL Admin GUI tool. </span></span></span></div>
<div><span style="border-collapse:collapse;white-space:pre;"><span style="font-family:'times new roman';"><span style="font-size:medium;">
</span></span></span></div>
<div><span style="border-collapse:collapse;white-space:pre;"><span style="font-family:'times new roman';"><span style="font-size:medium;">I made a lucky guess asserting, that the PHP config file may be missing some info, Hmmm... </span></span></span></div>
<div><span style="font-family:'times new roman', fantasy;"><span style="border-collapse:collapse;white-space:pre;">
</span></span></div>
<div><span style="border-collapse:collapse;white-space:pre;"><span style="font-family:'times new roman';"><span style="font-size:medium;">Well the solution goes as follows:</span></span></span></div>
<div><span style="border-collapse:collapse;white-space:pre;"><span style="font-family:'times new roman';"><span style="font-size:medium;">
</span></span></span></div>
<div><span style="border-collapse:collapse;white-space:pre;"><span style="font-family:'times new roman';"><span style="font-size:medium;">I searched for "<span style="white-space:normal;color:#333333;line-height:16px;font-family:'times new roman', 0;">mysql.lock<span style="color:#000000;line-height:normal;white-space:pre;font-family:Georgia, fantasy;"><span style="font-family:'times new roman';"><span style="font-size:medium;">" and i discovered that </span></span><span style="white-space:normal;color:#333333;line-height:16px;"><span style="font-family:'times new roman';"><span style="font-size:medium;">the MYSQL Socket file was located in "/tmp/mysql.lock.</span></span></span></span></span></span></span></span></div>
<div><span style="font-family:'times new roman', 0;color:#333333;"><span style="border-collapse:collapse;line-height:16px;">
</span></span></div>
<div><span style="border-collapse:collapse;white-space:pre;"><span style="font-family:'times new roman';"><span style="font-size:medium;"><span style="white-space:normal;color:#333333;line-height:16px;font-family:'times new roman', 0;"><span style="color:#000000;line-height:normal;white-space:pre;font-family:Georgia, fantasy;"><span style="white-space:normal;color:#333333;line-height:16px;"><span style="font-family:'times new roman';"><span style="font-size:medium;">Also, in the my PHP.ini file the value for</span></span></span><span style="font-family:'times new roman';"><span style="font-size:medium;"> "</span></span><span style="white-space:normal;line-height:16px;"><span style="font-family:'times new roman';"><span style="font-size:medium;">mysql.default_socket" was entirely empty "".</span></span></span></span></span></span></span></span></div>
<div><span style="border-collapse:collapse;line-height:16px;"><span style="font-family:'times new roman';"><span style="font-size:medium;">
</span></span></span></div>
<div><span style="border-collapse:collapse;line-height:16px;"><span style="font-family:'times new roman';"><span style="font-size:medium;">ehhhh... R</span></span></span><span style="border-collapse:collapse;line-height:16px;"><span style="font-family:'times new roman';"><span style="font-size:medium;">un this command in Terminal to view hidden files "d</span></span><span style="border-collapse:separate;line-height:normal;"><span style="font-family:'times new roman';"><span style="font-size:medium;">efaults write com.apple.finder AppleShowAllFiles TRUE" and then followed by "</span></span><span style="font-family:'times new roman';"><span style="font-size:medium;">killall Finder".</span></span></span></span></div>
<div><span style="font-family:'times new roman';"><span style="font-size:medium;">
</span></span></div>
<div><span style="font-family:'times new roman';"><span style="font-size:medium;">Then Go to "private/etc/PHP.ini". (note: private is a hidden folder).</span></span></div>
<div><span style="font-family:'times new roman';"><span style="font-size:medium;">
</span></span></div>
<div><span style="border-collapse:collapse;line-height:16px;"><span style="font-family:'times new roman';"><span style="font-size:medium;">If prior to this, in "private/etc/ "folder, the PHP.ini file does not exist copy and paste it there first.</span></span></span></div>
<div><span style="border-collapse:collapse;line-height:16px;"><span style="font-family:'times new roman';"><span style="font-size:medium;">
</span></span></span></div>
<div><span style="border-collapse:collapse;line-height:16px;"><span style="font-family:'times new roman';"><span style="font-size:medium;">Now open the PHP.ini file with say BBedit or TextWrangler. </span></span></span></div>
<div><span style="border-collapse:collapse;line-height:16px;"><span style="font-family:'times new roman';"><span style="font-size:medium;">
</span></span></span></div>
<div><span style="border-collapse:collapse;line-height:16px;"><span style="font-family:'times new roman';"><span style="font-size:medium;">Use command + F to find "mysql.default_socket" and paste "/tmp/mysql.sock" as it's new value. </span></span></span></div>
<div><span style="border-collapse:collapse;line-height:16px;"><span style="font-family:'times new roman';"><span style="font-size:medium;">
</span></span></span></div>
<div><span style="border-collapse:collapse;line-height:16px;"><span style="font-family:'times new roman';"><span style="font-size:medium;">Finally restart your Apache web server with Terminal using "sudo apachectl graceful".</span></span></span></div>
<div><span style="border-collapse:collapse;line-height:16px;"><span style="font-family:'times new roman';"><span style="font-size:medium;">
</span></span></span></div>
<div><span style="border-collapse:collapse;line-height:16px;"><span style="font-family:'times new roman';"><span style="font-size:medium;">After restart, PHP will be able to make connection calls to MYSQL with no further a do or hassle.</span></span></span></div>
</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>44</wp:post_id>
  <wp:post_date>2009-08-11 00:18:00</wp:post_date>
  <wp:post_date_gmt>2009-08-11 00:18:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2002-cant-connect-to-local-mysql-server-through-socket-varmysqlmysql-sock</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="database"><![CDATA[DATABASE]]></category>
  <category domain="category" nicename="mac"><![CDATA[MAC]]></category>
  <category domain="category" nicename="netbeans"><![CDATA[NETBEANS]]></category>
  <category domain="category" nicename="unix"><![CDATA[UNIX]]></category>
  <category domain="category" nicename="web-development"><![CDATA[WEB DEVELOPMENT]]></category>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[2489156160924080806]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>18</wp:comment_id>
    <wp:comment_author><![CDATA[RoxyTrorrocky]]></wp:comment_author>
    <wp:comment_author_email>RoxyTrorrocky@web.de</wp:comment_author_email>
    <wp:comment_author_url>http://georgesblog.thegeneration.ch/</wp:comment_author_url>
    <wp:comment_author_IP>212.138.113.4</wp:comment_author_IP>
    <wp:comment_date>2010-01-01 23:50:07</wp:comment_date>
    <wp:comment_date_gmt>2010-01-01 23:50:07</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Awesome post, I didn't thought reading it would be so stunning when I looked at your url!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>"gem mysql install" problem on Mac OS X (Leopard)</title>
  <link>http://ikennaokpala.wordpress.com/2009/08/15/gem-mysql-install-problem-on-mac-os-x-leopard/</link>
  <pubDate>Sat, 15 Aug 2009 18:45:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2009/08/15/gem-mysql-install-problem-on-mac-os-x-leopard</guid>
  <description></description>
  <content:encoded><![CDATA[<div><span style="font-family:'times new roman',fantasy;">
<!--StartFragment--><p>&nbsp;</p>

<p class="MsoNormal" style="margin-bottom:.0001pt;"><span style="font-family:&amp;" lang="EN-US">
<span style="font-size:medium;">I executed the db:migrate via netbeans GUI and it threw this error:</span>
</span>
<span style="font-family:Georgia;" lang="EN-US"><span style="font-size:medium;"> </span></span></p>
<p class="MsoNormal" style="margin-bottom:.0001pt;line-height:18pt;"><span style="font-family:'times new roman';"><span style="font-size:medium;"><span style="color:#ff0000;">*******************************************************************</span></span></span></p>
<p class="MsoNormal" style="margin-bottom:.0001pt;line-height:18pt;"><span style="font-family:'times new roman';"><span style="font-size:medium;"><span style="color:#ff0000;">* config.breakpoint_server has been deprecated and has no effect. ********************************************************************</span></span></span></p>
<p class="MsoNormal" style="margin-bottom:.0001pt;line-height:18pt;"><span style="font-family:'times new roman';"><span style="font-size:medium;"><span style="color:#ff0000;">!!! The bundled mysql.rb driver has been removed from Rails 2.2. Please install the mysql gem and try again: gem install mysql.</span></span></span></p>
<p class="MsoNormal" style="margin-bottom:.0001pt;line-height:18pt;"><span style="font-family:'times new roman';"><span style="font-size:medium;"><span style="color:#ff0000;">rake aborted!</span></span></span><span style="font-family:'times new roman';">
<span style="font-size:medium;"><span style="color:#ff0000;"> </span></span></span></p>
<p class="MsoNormal" style="margin-bottom:.0001pt;line-height:18pt;"><span style="font-family:'times new roman';"><span style="font-size:medium;"><span style="color:#ff0000;">no such file to load -- mysql</span></span></span></p>
<p class="MsoNormal" style="margin-bottom:.0001pt;"><span style="font-family:'times new roman';"><span style="font-size:medium;">And obviously, I went ahead to install the mysql gem<span style="font-family:'trebuchet ms',-webkit-fantasy;"> </span></span></span><span style="white-space:pre;"><span style="font-family:georgia;">
<span style="font-size:x-small;">"gem mysql install"</span></span></span><span style="white-space:pre;"><span style="white-space:normal;"><span style="font-family:'times new roman';"><span style="font-size:medium;"> and returned this error:</span></span></span></span></p>
<p class="MsoNormal" style="margin-bottom:.0001pt;line-height:18pt;"><span style="line-height:18px;font-family:Verdana,Helvetica,Arial,sans-serif;font-size:13px;"> </span></p>
WARNING:  Installing to ~/.gem since /Library/Ruby/Gems/1.8 and
/usr/bin aren't both writable.
WARNING:  You don't have /Users/ikenna/.gem/ruby/1.8/bin in your PATH,
gem executables will not run.
Building native extensions.  This could take a while...
ERROR:  Error installing mysql:
ERROR: Failed to build gem native extension.

/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/bin/ruby extconf.rb
checking for mysql_query() in -lmysqlclient... no
checking for main() in -lm... yes
checking for mysql_query() in -lmysqlclient... no
checking for main() in -lz... yes
checking for mysql_query() in -lmysqlclient... no
checking for main() in -lsocket... no
checking for mysql_query() in -lmysqlclient... no
checking for main() in -lnsl... no
checking for mysql_query() in -lmysqlclient... no

Gem files will remain installed in /Users/ikenna/.gem/ruby/1.8/gems/mysql-2.7 for inspection.
Results logged to /Users/ikenna/.gem/ruby/1.8/gems/mysql-2.7/gem_make.out
<div><span style="line-height:24px;"><span style="font-family:'times new roman';"><span style="font-size:medium;">But after googling and trying out so many versions of bash commands, Finally the solution that worked for me came.... thanks to this guy "</span></span><a href="http://railsforum.com/profile.php?id=26809"><strong><span style="text-decoration:none;"><span style="font-family:'times new roman';"><span style="font-size:medium;"><span style="color:#000000;">kevin.sylvestre</span></span></span></span></strong></a><span style="font-family:'times new roman';"><span style="font-size:medium;">" via the </span></span><a href="http://railsforum.com/viewtopic.php?id=33752"><span style="text-decoration:none;"><span style="font-family:'times new roman';"><span style="font-size:medium;"><span style="color:#000000;">Railsforum</span></span></span></span></a><span style="font-family:'times new roman';"><span style="font-size:medium;">.</span></span></span></div>
<p class="MsoNormal" style="margin-bottom:.0001pt;line-height:18pt;"><span style="font-family:'times new roman';"><span style="font-size:medium;">He stated and i quote:</span></span><span style="font-family:'times new roman';"><span style="font-size:medium;"> </span></span></p>
<p class="MsoNormal" style="margin-bottom:.0001pt;line-height:18pt;"><span style="font-family:'times new roman';"><span style="font-size:medium;">Before installing the gem you first need the MySQL binaries (</span></span><span style="text-decoration:none;"><span style="font-family:'times new roman';"><span style="font-size:medium;"><span style="color:#000000;"><a href="http://dev.mysql.com/downloads/mysql/5.1.html">http://dev.mysql.com/downloads/mysql/5.1.html</a></span></span></span></span><span style="font-family:'times new roman';"><span style="font-size:medium;">). For Mac OS X use the Mac OS X 10.5 (package format) (x86). Then:</span></span><span style="font-family:'times new roman';"><span style="font-size:medium;"> </span></span></p>
<p class="MsoNormal" style="margin-bottom:.0001pt;line-height:18pt;"></p>
&gt;

sudo env ARCHFLAGS="-arch i386" gem install mysql -- \ --with-mysql-dir=/usr/local/mysql --with-mysql-lib=/usr/local/mysql/lib \ --with-mysql-include=/usr/local/mysql/include&gt;

<span style="font-size:medium;"> </span>

<p>&nbsp;</p>

<p class="MsoNormal" style="margin-bottom:.0001pt;line-height:18pt;"><span style="font-family:Verdana;" lang="EN-US"><span style="font-size:medium;"> </span></span></p>
<p class="MsoNormal" style="margin-bottom:.0001pt;line-height:18pt;"><span style="font-family:&amp;" lang="EN-US"><span style="font-size:medium;">This solution worked very well for me and i hope this could help someone else... hopefully...</span></span><span style="font-family:Verdana;" lang="EN-US"><span style="font-size:medium;"> </span></span></p>
<p class="MsoNormal"><span style="font-family:&amp;" lang="EN-US"><span style="font-size:medium;">Cheers.</span></span></p>
<!--EndFragment-->

</span></div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>45</wp:post_id>
  <wp:post_date>2009-08-15 18:45:00</wp:post_date>
  <wp:post_date_gmt>2009-08-15 18:45:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>gem-mysql-install-problem-on-mac-os-x-leopard</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="mac"><![CDATA[MAC]]></category>
  <category domain="category" nicename="ruby"><![CDATA[RUBY]]></category>
  <category domain="category" nicename="unix"><![CDATA[UNIX]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[6072897557138805582]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Google App Engine Support for Netbeans 6.7.1 &amp; 6.8 Now Available..</title>
  <link>http://ikennaokpala.wordpress.com/2009/08/23/google-app-engine-support-for-netbeans-6-7-1-6-8-now-available/</link>
  <pubDate>Sun, 23 Aug 2009 17:56:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2009/08/23/google-app-engine-support-for-netbeans-6-7-1-6-8-now-available</guid>
  <description></description>
  <content:encoded><![CDATA[<div><div><span class="Apple-style-span" style="font-size:medium;"> <!--StartFragment-->  <p class="MsoNormal" style="margin-bottom:.0001pt;"><span lang="EN-US"><span class="Apple-style-span" style="font-size:medium;"><span class="Apple-style-span" style="font-family:'times new roman';">This </span></span><span style="text-decoration:none;"><span class="Apple-style-span" style="font-size:medium;"><span class="Apple-style-span" style="font-family:'times new roman';"><a href="http://kenai.com/projects/nbappengine/pages/NBInstall">link</a> has it all,</span></span></span><span class="Apple-style-span" style="font-size:medium;"><span class="Apple-style-span" style="font-family:'times new roman';"> for the "Google App Engine" Netbeans Plugin for 6.7.1 and 6.8</span></span><span class="Apple-style-span" style="font-size:medium;"><span class="Apple-style-span" style="font-family:'times new roman';"></span></span></span></p>  <p class="MsoNormal" style="margin-bottom:.0001pt;"><span lang="EN-US"><span class="Apple-style-span" style="font-size:medium;"><span class="Apple-style-span" style="font-family:'times new roman';">or you could.... just do the following quickly:</span></span><span class="Apple-style-span" style="font-size:medium;"><span class="Apple-style-span" style="font-family:'times new roman';"></span></span></span></p>  <p class="MsoNormal" style="text-indent:-36pt;margin:0 0 .0001pt 36pt;"></p><ul><li><span class="Apple-style-span" style="font-size:medium;"><span class="Apple-style-span" style="font-family:'times new roman';">            Click Tools on your Netbeans menu, then click Plugins and then select Settings tab</span></span></li><li><span class="Apple-style-span" style="font-size:medium;"><span class="Apple-style-span" style="font-family:'times new roman';">           Click Add button and type 'Google App Engine' as tag for this Update center and any URL below into URL text field. Click to OK button.</span></span></li><li><span class="Apple-style-span" style="font-size:medium;"><span class="Apple-style-span" style="font-family:'times new roman';">           For NetBeans 6.7.1:  http://kenai.com/downloads/nbappengine/1.0_NetBeans671/updates.xml </span></span></li><li><span class="Apple-style-span" style="font-size:medium;"><span class="Apple-style-span" style="font-family:'times new roman';">           For NetBeans 6.8 : http://kenai.com/downloads/nbappengine/Latest_NetBeans68/updates.xml</span></span></li><li><span class="Apple-style-span" style="font-size:medium;"><span class="Apple-style-span" style="font-family:'times new roman';">Move to Available Plugins tab and select Google App Engine modules (server, configuration, deployment, editor hints)</span></span></li><li><span class="Apple-style-span" style="font-size:medium;"><span class="Apple-style-span" style="font-family:'times new roman';">Finally, Click the Install button</span></span></li></ul><p></p>            <p class="MsoNormal"><span lang="EN-US" style="font-family:&quot;"> </span></p>  <p class="MsoNormal"><span lang="EN-US" style="font-family:&quot;"> </span></p>  <!--EndFragment-->   </span></div></div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>46</wp:post_id>
  <wp:post_date>2009-08-23 17:56:00</wp:post_date>
  <wp:post_date_gmt>2009-08-23 17:56:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>google-app-engine-support-for-netbeans-6-7-1-6-8-now-available</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="google-app-engine"><![CDATA[Google App Engine]]></category>
  <category domain="category" nicename="java"><![CDATA[JAVA]]></category>
  <category domain="category" nicename="netbeans"><![CDATA[NETBEANS]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[3141645842546106439]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Using the Wicket Framework to Update style tag.</title>
  <link>http://ikennaokpala.wordpress.com/2009/09/08/using-the-wicket-framework-to-update-html-style-tag/</link>
  <pubDate>Tue, 08 Sep 2009 14:18:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2009/09/08/using-the-wicket-framework-to-update-html-style-tag</guid>
  <description></description>
  <content:encoded><![CDATA[In this post,  <a href="http://wicket.apache.org/">Wicket</a> Framework is used to update the embedded style tag.

An already working sample can be found <a href="http://wicket1.ikennaokpala.staxapps.net/">here</a>.

Let's begin by configuring the web application (i.e. web.xml)

[sourcecode language="xml"]

&lt;web-app xmlns=&quot;http://java.sun.com/xml/ns/j2ee&quot; xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; schemalocation=&quot;http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd&quot; version=&quot;2.4&quot;&gt;

&lt;display-name&gt;CSS and Wicket&lt;/display-name&gt;
&lt;filter&gt;
&lt;filter-name&gt;css_wicket&lt;/filter-name&gt;
&lt;filter-class&gt;org.apache.wicket.protocol.http.WicketFilter&lt;/filter-class&gt;
&lt;init-param&gt;
&lt;param-name&gt;applicationClassName&lt;/param-name&gt;
&lt;param-value&gt;com.jw.ike.pages.CssApplication&lt;/param-value&gt;
&lt;/init-param&gt;
&lt;/filter&gt;

&lt;filter-mapping&gt;
&lt;filter-name&gt;css_wicket&lt;/filter-name&gt;
&lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;

&lt;/web-app&gt;

 [/sourcecode]

The wicket  application class go as follows:

[sourcecode language="java"]

public class CssApplication extends WebApplication {

public CssApplication() {
}

public Class getHomePage() {
return CssDemo.class;
}

}

[/sourcecode]

The getHomePage() method returns this Page:

[sourcecode language="java"]
public class CssDemo extends WebPage implements Serializable {
	private String uStyle;

	public CssDemo() {
		add(new Label(&quot;style&quot;));
		add(new CssForm(&quot;addform&quot;));

	}

	public CssDemo(String userStyle) {
		this.uStyle = userStyle;
		this.add(new Label(&quot;style&quot;, new PropertyModel(this, &quot;uStyle&quot;)));
add(new CssForm(&quot;addform&quot;));

	}

}
[/sourcecode]

And the accompanying HTML web page is:

[sourcecode language="html"]
&lt;html&gt;

&lt;head&gt;
&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;../css/style/style.css&quot;&gt;
&lt;title&gt;Wicket Updating Style Sheet&lt;/title&gt;
&lt;style type=&quot;text/css&quot; wicket:id=&quot;style&quot;&gt;&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;div id=&quot;bmain&quot;&gt;
&lt;form wicket:id=&quot;addform&quot;&gt;
&lt;h2&gt;Update Style Sheet...&lt;/h2&gt;

&lt;span&gt;Select Pre-Defined CSS Rules &lt;/span&gt;

&lt;select wicket:id=&quot;combo&quot;&gt;

&lt;/select&gt;

&lt;textarea id=&quot;ta&quot; wicket:id=&quot;txta&quot; rows=&quot;20&quot; cols=&quot;60&quot;&gt; rich text &lt;/textarea&gt;

&lt;input id=&quot;btn&quot; type=&quot;submit&quot; value=&quot;::Post Style Sheet::&quot;&gt;&lt;/form&gt;
&lt;a href=&quot;http://wicket.apache.org/&quot; &gt;
&lt;img id=&quot;logo&quot; alt=&quot;Wicket&quot; src=&quot;../images/wicket-logo.png&quot; border=&quot;0&quot; width='111' height=&quot;155&quot;/&gt;&lt;/a&gt;

&lt;/div&gt;

&lt;div id=&quot;side&quot;&gt;

&lt;h1&gt;Change Me @!#%.&lt;/h1&gt;

 &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;

[/sourcecode]

And then the Form Class:

[sourcecode language="java"]

public class CssForm extends Form {

private String style1 = &quot;Choose a style&quot;;
private String style2 = &quot;h1{ font-size: 4.0em; font-family: Mistral; color: #dc512b; border:10px solid #bb342d; background-color: #098762;text-align: center;}&quot;;
private String style3 = &quot;h1{ font-size: 5.0em; font-family: Comic Sans MS; color: #0066CC; border:10px solid #330066; background-color: green;text-align: center;}&quot;;
private String style4 = &quot;h1{ font-size: 6.0em; font-family: Curlz MT; color: #CCFFFF; border:10px solid #445698; background-color: #6666CC;text-align: center;}&quot;;

private static String css;
private List cssList;
private String selectedCss = style1;
private DropDownChoice dropDownMenu;
private TextArea textArea;

public CssForm(String componentid) {
super(componentid);

cssList = Arrays.asList(new String[]{style1, style2, style3, style4});

dropDownMenu = new DropDownChoice(&quot;combo&quot;, new PropertyModel(this, &quot;selectedCss&quot;),
     cssList) {

 @Override
 protected void onSelectionChanged(Object newSelection) {

     textArea.setModelObject(newSelection);

 }

 @Override
 protected boolean wantOnSelectionChangedNotifications() {

     return true;
 }

};
add(dropDownMenu);

textArea = new TextArea(&quot;txta&quot;, new PropertyModel(this, &quot;css&quot;));

add(textArea);

}

@Override
protected void onSubmit() {
String definedCssRule =  textArea.getModelObject().toString();
definedCssRule = &quot;\n\n\n&quot; + definedCssRule + &quot;\n\n\n&quot;;
setResponsePage(new CssDemo(definedCssRule));
textArea.setModelObject(null);
}
}

[/sourcecode]

The External Style Sheet :

[sourcecode language="css"]

body {
	background-image: url(&quot;../images/cl.jpg&quot;);
	background-repeat: no-repeat;
}

h1 {
	font-size: 4.5em;
	color: #4088b8;
	margin: -300px 0 0 0;
	position: relative;
	left: -20px;
	top: 10px;
	position: relative
}

h2 {
	color: #4088b8;
}

span {
	font-size: 1.0em;
	color: #4088b8;
	padding:0 33px 0 2px;
}

#logo {
	position: relative;
	left: 0px;
	top: 50px;
	z-index: 1;
}
select {

	position: relative;
	left: 0px;
	bottom: 2px;
	width: 230px;
}

#jw {
	position: relative;
	left: 900px;
	top: -50px;
	z-index: 1;
}

#bmain {
	width: 510px;
	margin: 10px 0 0 0;
	position: inherit;
}

#side {
	float: right;
	width: 600px;
	margin: -150px 0 0 0;
	padding: 1px 0 0 0;
}

#ta {
	padding: 0 20px 0 0;
}

#btn {
	background-color: #4088b8;
	border-color: 4088b8;
	color: white;
	position: relative;
	left: 180px;
	top: 50px;
}

 [/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>47</wp:post_id>
  <wp:post_date>2009-09-08 14:18:00</wp:post_date>
  <wp:post_date_gmt>2009-09-08 14:18:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>using-the-wicket-framework-to-update-html-style-tag</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="css"><![CDATA[CSS]]></category>
  <category domain="category" nicename="java"><![CDATA[JAVA]]></category>
  <category domain="category" nicename="netbeans"><![CDATA[NETBEANS]]></category>
  <category domain="category" nicename="web-development"><![CDATA[WEB DEVELOPMENT]]></category>
  <category domain="category" nicename="wicket"><![CDATA[WICKET]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.datascribes.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ikenna Okpala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_083ef6fc9c9a309fac8ec81224b5b5a1_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[5484877844563743946]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Wicket Diagrams and the Java Duke...</title>
  <link>http://ikennaokpala.wordpress.com/2009/07/18/wicket-diagrams-and-the-java-duke/wicket-diagrams-and-the-java-duke-2/#main</link>
  <pubDate>Sat, 03 Oct 2009 16:18:34 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.files.wordpress.com/2009/07/wicketsm.jpg</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>48</wp:post_id>
  <wp:post_date>2009-10-03 16:18:34</wp:post_date>
  <wp:post_date_gmt>2009-10-03 16:18:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>wicket-diagrams-and-the-java-duke-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>42</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://ikennaokpala.files.wordpress.com/2009/07/wicketsm.jpg</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>blogger_attachment</wp:meta_key>
    <wp:meta_value><![CDATA[http://3.bp.blogspot.com/_C6koW5XOybE/SmFu8jn59sI/AAAAAAAAAFM/BRtbbOA3tNY/wicketsm.jpg]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>London Wicket User Group Next meet-up on the 21st of November 2009.</title>
  <link>http://ikennaokpala.wordpress.com/2009/11/09/london-wicket-user-group-next-meet-up-on-the-21st-of-november/</link>
  <pubDate>Mon, 09 Nov 2009 22:16:07 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=71</guid>
  <description></description>
  <content:encoded><![CDATA[Hi Everyone,

The London Wicket User Group has scheduled her next meet-up for 21st of November 2009 at "The Gallery, Foyles Bookshop, 113-119 Charing Cross Road, London, WC2H 0EB". it is billed to start at 15:00.

Featuring talks from:
<ul>
	<li><a href="http://www.wickettraining.com/" target="_blank">Jeremy Thomerson</a>(USA): <strong>Custom JavaScript Integrations with Wicket + Auto Resolvers</strong></li>
	<li><a href="http://code.google.com/p/wiquery/" target="_blank">Lionel Amrmanet</a>(FR): <strong>WiQuery - Announcing 1.0, Introduction + Demo</strong></li>
	<li><a href="http://www.inMethod.com/" target="_blank">Matej Knopp</a>(SK): <strong>BRIX CMS + Wicket 1.5 Developments Q&amp;A</strong></li>
	<li><a href="http://www.herebebeasties.com/" target="_blank">Alastair Maw</a>(UK): <strong>The Al Talk</strong></li>
	<li><strong>And a trip to the Pub... for more talks and refreshments.</strong></li>
</ul>
JWeekend are the organizers of this event and require you to <a href="http://jweekend.com/dev/LWUGReg" target="_self">sign-up here</a>.

Cheers and hope to meet U there. Ciao for now.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>71</wp:post_id>
  <wp:post_date>2009-11-09 22:16:07</wp:post_date>
  <wp:post_date_gmt>2009-11-09 22:16:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>london-wicket-user-group-next-meet-up-on-the-21st-of-november</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="wicket"><![CDATA[WICKET]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Unix "PS" command </title>
  <link>http://ikennaokpala.wordpress.com/2009/11/18/unix-ps-command/</link>
  <pubDate>Wed, 18 Nov 2009 00:45:19 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=75</guid>
  <description></description>
  <content:encoded><![CDATA[Today, i meet a senior colleague in the field of software named <a href="http://joewalnes.com/">JOE WALNES</a>.

While i was showing Joe what i had done earlier today with <a href="http://wicket.apache.org/">WICKET</a>.

I was unable to run the my small <a href="http://wicket.apache.org/">WICKET</a> app, because tomcat was still running, and i was unable to  shutdown the tomcat instance that i had earlier on started on my MAC Book.

He simply opened my eyes to the PS command on unix systems.

The PS command showes the unique id and related information of the currently running processes on the computer.

Since tomcat is java based and uses a bootstrap to run, he also exposed me to the "JPS" command.

This performs a similar function like the PS command, only selects processes that are java based.

This blog post i hope would be useful to someone out there and also serve as a reminder in case i need to come back to this in the future.

By issuing the PS command it generates a unique id for the system alone, so take note that the ID for processes vary from system to system, so when you apply the "kill" command remember to append the immediate ID of the process you want to shutdown.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>75</wp:post_id>
  <wp:post_date>2009-11-18 00:45:19</wp:post_date>
  <wp:post_date_gmt>2009-11-18 00:45:19</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>unix-ps-command</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="mac"><![CDATA[MAC]]></category>
  <category domain="category" nicename="unix"><![CDATA[UNIX]]></category>
  <category domain="category" nicename="wicket"><![CDATA[WICKET]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>26</wp:comment_id>
    <wp:comment_author><![CDATA[IKENNA OKPALA]]></wp:comment_author>
    <wp:comment_author_email>ikennaokpala@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://ikennaokpala.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>94.195.113.183</wp:comment_author_IP>
    <wp:comment_date>2010-01-14 23:00:16</wp:comment_date>
    <wp:comment_date_gmt>2010-01-14 23:00:16</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[@jr0cket THANKS FOR THAT... CHEERS.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>9228897</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>25</wp:comment_id>
    <wp:comment_author><![CDATA[JRocket]]></wp:comment_author>
    <wp:comment_author_email>john@jr0cket.com</wp:comment_author_email>
    <wp:comment_author_url>http://jr0cket.com</wp:comment_author_url>
    <wp:comment_author_IP>213.208.100.103</wp:comment_author_IP>
    <wp:comment_date>2010-01-14 18:45:39</wp:comment_date>
    <wp:comment_date_gmt>2010-01-14 18:45:39</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I find ps a great tool on the rare occasion something goes wrong.  I usually use:

ps ax | less - list all processes and pipe them to less so I can scroll through them
ps ax | grep string - which will show all processes that match "string"]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>32</wp:comment_id>
    <wp:comment_author><![CDATA[Benni Katchy]]></wp:comment_author>
    <wp:comment_author_email>benni.jiffy@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>41.219.205.239</wp:comment_author_IP>
    <wp:comment_date>2010-02-12 14:54:00</wp:comment_date>
    <wp:comment_date_gmt>2010-02-12 14:54:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I use that daily.My favorite command is the "Kill" command, dont know what I'll do without it.
Bros I hail o!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>34</wp:comment_id>
    <wp:comment_author><![CDATA[IKENNA OKPALA]]></wp:comment_author>
    <wp:comment_author_email>ikennaokpala@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://ikennaokpala.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>94.195.113.183</wp:comment_author_IP>
    <wp:comment_date>2010-02-14 17:21:24</wp:comment_date>
    <wp:comment_date_gmt>2010-02-14 17:21:24</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[@benni Long time... how is it going with you man... take care]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>9228897</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>35</wp:comment_id>
    <wp:comment_author><![CDATA[Helen Neely]]></wp:comment_author>
    <wp:comment_author_email>helen@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://fiveholiday55.blogspot.com</wp:comment_author_url>
    <wp:comment_author_IP>193.195.197.254</wp:comment_author_IP>
    <wp:comment_date>2010-03-02 16:20:07</wp:comment_date>
    <wp:comment_date_gmt>2010-03-02 16:20:07</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[One of my favourites is the grep and ps commands. They help you manage your processes very easily and qiickly - unlike on Windows. It's worth learning the common Unix commands; and add them to your tool box]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Installing Scala on Mac OS X via Darwinports</title>
  <link>http://ikennaokpala.wordpress.com/2010/01/05/installing-scala-on-mac-os-x-via-darwinports/</link>
  <pubDate>Tue, 05 Jan 2010 22:20:56 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=92</guid>
  <description></description>
  <content:encoded><![CDATA[Following the brilliant talks and much encouragement i received about the <a href="http://www.scala-lang.org/">Scala Language</a>, i finally woke up with this objective of delving into <a href="http://www.scala-lang.org/">Scala</a>.

The installation steps i found on the internet were quite trivial and straight forward, but did not work on my MAC OS X laptop.

The one way that worked for me finally after several attempts was via the following steps (<a href="http://scala.darwinports.com/">found here also</a>).

1. Firstly i downloaded and installed the <a href="http://www.darwinports.com/">Darwinports installer</a> and also type this command to update Darwin:

[sourcecode language="bash"]
 sudo port -d selfupdate
[/sourcecode]

2. After step one is completed, check if this directory path exist " /opt/local/bin/portslocation/dports/scala " on your system.

[sourcecode language="bash"]

cd /opt/local/bin/portslocation/dports/scala

[/sourcecode]

if the above directory path already exist on your system, skip step 3.

3. if  the above path is not in existence, type the following one line after another and hit return to create the folders:

[sourcecode language="bash"]
sudo mkdir portslocation
cd portslocation
sudo mkdir dports
cd dports
sudo mkdir scala
cd scala
[/sourcecode]

4.  Type the following and hit return:

[sourcecode language="bash"]
sudo port install scala
[/sourcecode]

this will officially install <a href="http://www.scala-lang.org/">Scala</a> for you.

5. Finally you might want to verify your <a href="http://www.scala-lang.org/">Scala</a> installation via the following commands:

[sourcecode language="bash"]
sudo port location scala
man scala
apropos scala
which scala
locate scala
[/sourcecode]


6. Hopefully Scala 2.8.0 will be out sometime in April 2010. Upgrading can be achieved with:

[sourcecode language="bash"]
sudo port upgrade scala
[/sourcecode]

Cheers.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>92</wp:post_id>
  <wp:post_date>2010-01-05 22:20:56</wp:post_date>
  <wp:post_date_gmt>2010-01-05 22:20:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>installing-scala-on-mac-os-x-via-darwinports</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="mac"><![CDATA[MAC]]></category>
  <category domain="category" nicename="scala"><![CDATA[SCALA]]></category>
  <category domain="category" nicename="unix"><![CDATA[UNIX]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>91</wp:comment_id>
    <wp:comment_author><![CDATA[IKENNA OKPALA]]></wp:comment_author>
    <wp:comment_author_email>ikennaokpala@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://ikennaokpala.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>213.208.100.16</wp:comment_author_IP>
    <wp:comment_date>2010-07-27 16:09:58</wp:comment_date>
    <wp:comment_date_gmt>2010-07-27 16:09:58</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[@jiri: thanks for for the correction/update..  this is most welcomed. Cheers.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>9228897</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1280246999</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>90</wp:comment_id>
    <wp:comment_author><![CDATA[jiri]]></wp:comment_author>
    <wp:comment_author_email>jiri@dump.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>80.149.209.211</wp:comment_author_IP>
    <wp:comment_date>2010-07-27 13:35:56</wp:comment_date>
    <wp:comment_date_gmt>2010-07-27 13:35:56</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I had some problems installing scala. I was getting  the following error when performing step 5. The solution is to type this:
port search scala

it will output [scala27 .. scala28..]

sudo port install scala28

will then install properly.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1280246851</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Scala and Lift Web Framework.. My 2 Cents.</title>
  <link>http://ikennaokpala.wordpress.com/?p=126</link>
  <pubDate>Tue, 31 Aug 2010 07:24:12 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=126</guid>
  <description></description>
  <content:encoded><![CDATA[This blog post will most likely appeal to <a href="http://www.scala-lang.org/">Scala</a> headed and <a href="http://liftweb.net/">Lift</a> handed programmers, so if you don't fall into this category... You have been warned ! :)

<a href="http://www.scala-lang.org/">Scala</a> is an acronym that stands for SCAlable LAnguage. It is a statically typed functional and object oriented programming language that runs on the Java Virtual machine (JVM) and the .NET common language runtime (CLR). It has this feel of a truly dynamically typed language but really it is not dynamically typed.

<a href="http://www.scala-lang.org/">Scala</a> on its functional side is a branch of the ML languages (example: <a href="http://www.haskell.org/">Haskell</a>), they are known to be strongly typed unlike their homoiconic and dynamically typed functional language counterpart like <a href="http://en.wikipedia.org/wiki/Lisp_(programming_language)">LISP</a> or <a href="http://double.co.nz/dylan/">Dylan</a>.

The main principle of <a href="http://www.scala-lang.org/">Scala</a> is that functional programming complements object oriented programming, despite the surface contradictions. Functional programming places her emphasis on immutable values and side effect free functions as opposed to object oriented programming which is all about state that is mutated in objects and methods that can modify state that are out of their scope. But combining these two paradigms in <a href="http://www.scala-lang.org/">Scala</a> has proven to be worthwhile. <a href="http://www.scala-lang.org/">Scala</a> makes it possible to create immutable objects and also apply OO goodness. In Scala, every value is an object and every function an object. (Wampler, D., 2008)

The core advantages of <a href="http://www.scala-lang.org/">Scala</a> are:
• <a href="http://www.scala-lang.org/">Scala</a> is functional which helps to write lesser and more concise code making it easier to test and maintain.
• Because <a href="http://www.scala-lang.org/">Scala</a> is functional in nature it embraces a lot of mathematical concepts, which emphasise correctness from a logical point of view. This is very important and infact can help reduce bugs in the software system.
• <a href="http://www.scala-lang.org/">Scala</a> introduces better ways of doing object oriented programming, in terms of composability (using mixins and traits) and scalable design.
• <a href="http://www.scala-lang.org/">Scala</a> provides a better model and much more principled approached for dealing with concurrency issues. <a href="http://www.scala-lang.org/">Scala</a> provides an Actors library that is similar to the one in Erlang. Actors are nothing more than concurrent process actions that communicate by exchanging messages. Actors can also view as active objects, based on this a method call corresponds to sending a message. The <a href="http://www.scala-lang.org/">Scala</a> Actors can also do asynchronous and synchronous messaging.

<a href="http://liftweb.net/">Lift</a> is a non-mvc web framework written in <a href="http://www.scala-lang.org/">Scala</a>. <a href="http://liftweb.net/">Lift</a>'s approach to web development, is coined "<a href="http://wiki.liftweb.net/index.php?title=Lift_View_First">view first</a>". With this approach a component of web page is an instance of a <a href="http://www.scala-lang.org/">Scala</a> object, these are called snippets in <a href="http://liftweb.net/">Lift</a>.

Snippets basically are bindings between the view and a function that could contain some business logic and primarily transforms input XML to output XML or put in another way renders dynamic or interactive feedback to the View Template. In the view any tag with the Lift namespace is a snippet(Pollak, 2010).

[sourcecode language="xml"]
&amp;amp;lt;lift:someclass.function/&amp;amp;gt; #binding to a function
or
&amp;amp;lt;lift:someclass/&amp;amp;gt;  #binding to a render function... if defined will be displayed on page load by default.
[/sourcecode]

They could be easily mistaken to be controllers (like i did :(), but they are not.

So far it appears that <a href="http://liftweb.net/">Lift</a> is elegant and has a productive sensation. I appreciate the fact that it does a lot of the plumbing for me, especially with regards to form rendering and security etc....

This is a web framework that i feel possesses elements of rhythm, tempo, melody, harmony, timbre, articulation, and dynamics. It leverages the power of <a href="http://www.scala-lang.org/">Scala</a>'s <a href="http://www.scala-lang.org/api/current/scala/xml/package.html">xml</a> and <a href="http://www.scala-lang.org/node/242">actors</a> libraries also.

And because <a href="http://liftweb.net/">Lift</a> is based on <a href="http://www.scala-lang.org/">Scala</a>, it is possible to play with legacy java code seamlessly and combine both functional and OO features like pattern matching, closures and high order functions etc.

<a href="http://liftweb.net/">Lift</a> is one of the reasons why <a href="http://www.scala-lang.org/">Scala</a> is here to stay !

Almost all web applications i have been involved with have had varying numbers of web forms. Usually the state of these web forms are required to be maintained across instances.

This provides valuable information on the status quo and offers varying forms of feedback to users, hence it be referred to as a user friendly application.

Alright, enough chit chat, let’s look at some code. I have previously used this same use case while introducing my self to other web frameworks, but found it to be more intriguing with <a href="http://liftweb.net/">Lift</a>.

In the following example, I use a simple video rental form application to highlight some of <a href="http://liftweb.net/">Lift</a>’s features. Hopefully you got maven and Git installed, You can find the full source for this example <a href="http://github.com/kengimel/Lift_forms">here</a> on Github and also a working example <a href="http://liftforms.ikennaokpala.staxapps.net/">here</a>.

The Web.xml has got very little mark up in it that points to the LiftFilter class and defines the URL pattern.

[sourcecode language="xml"]

&amp;amp;lt;?xml version=&amp;amp;quot;1.0&amp;amp;quot; encoding=&amp;amp;quot;ISO-8859-1&amp;amp;quot;?&amp;amp;gt;

&amp;amp;lt;!DOCTYPE web-app
PUBLIC &amp;amp;quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&amp;amp;quot;
&amp;amp;quot;http://java.sun.com/dtd/web-app_2_3.dtd&amp;amp;quot;&amp;amp;gt;

&amp;amp;lt;web-app&amp;amp;gt;
&amp;amp;lt;filter&amp;amp;gt;
  &amp;amp;lt;filter-name&amp;amp;gt;LiftFilter&amp;amp;lt;/filter-name&amp;amp;gt;
  &amp;amp;lt;display-name&amp;amp;gt;Lift Filter&amp;amp;lt;/display-name&amp;amp;gt;
  &amp;amp;lt;description&amp;amp;gt;The Filter that intercepts lift calls&amp;amp;lt;/description&amp;amp;gt;
  &amp;amp;lt;filter-class&amp;amp;gt;net.liftweb.http.LiftFilter&amp;amp;lt;/filter-class&amp;amp;gt;
&amp;amp;lt;/filter&amp;amp;gt;
 &amp;amp;lt;!--  &amp;amp;lt;init-param&amp;amp;gt;
&amp;amp;lt;param-name&amp;amp;gt;bootloader&amp;amp;lt;/param-name&amp;amp;gt;
&amp;amp;lt;param-value&amp;amp;gt;path to my custom Boot class&amp;amp;lt;/param-value&amp;amp;gt;
&amp;amp;lt;/init-param&amp;amp;gt;  --&amp;amp;gt;

&amp;amp;lt;filter-mapping&amp;amp;gt;
  &amp;amp;lt;filter-name&amp;amp;gt;LiftFilter&amp;amp;lt;/filter-name&amp;amp;gt;
  &amp;amp;lt;url-pattern&amp;amp;gt;/*&amp;amp;lt;/url-pattern&amp;amp;gt;
&amp;amp;lt;/filter-mapping&amp;amp;gt;

&amp;amp;lt;/web-app&amp;amp;gt;

[/sourcecode]

All lift application must have a Boot class. This is basically an expressive configuration class where lift allows you to define Rules that modify lift's environment. Lift also allows defining a custom Boot instance using the init param tag, this custom Boot class must extend Bootable class and provide implementation for the boot method. The boot method can run only once.

[sourcecode language="scala"]
class Boot {
  def boot {

    // where to search snippet
    LiftRules.addToPackages(&amp;amp;quot;com.liftforms&amp;amp;quot;)

    // Build SiteMap
    val entries = Menu(Loc(&amp;amp;quot;Home&amp;amp;quot;, List(&amp;amp;quot;index&amp;amp;quot;), &amp;amp;quot;Home&amp;amp;quot;, Hidden)) ::
		  Menu(Loc(&amp;amp;quot;View&amp;amp;quot;, List(&amp;amp;quot;view&amp;amp;quot;), &amp;amp;quot;View&amp;amp;quot;, Hidden)) :: Nil

    // Setting the sitemap
    LiftRules.setSiteMap(SiteMap(entries: _*))

  }
}
[/sourcecode]

The LiftRules.addToPackages methods tells lift where to find snippets. By default you will get this code for free with the maven <a href="http://liftweb.net/">Lift</a> archetype. URLs in <a href="http://liftweb.net/">Lift</a> are pretty, the Menu/setSiteMap methods allows your to define meaningful urls for web pages and more.

The snippet class below extends the StatefulSnippet trait. This trait is used to maintain state of the form variables. <a href="http://liftweb.net/">Lift</a> does not require using HTML tags for form elements directly, instead <a href="http://liftweb.net/">Lift</a> provides generator functions on net.liftweb.http.SHtml. This allows <a href="http://liftweb.net/">Lift</a> to set up all of the internal plumbing which kept my code relatively simple to read and separate from the view.

Below is example code for the forms class "RentingForm.scala". Notice that is extends StatefulSnippet to help it manage state and the "class" -&gt; "required" is used to meet the criteria for the jquery client side validation library. For more on this click <a href="http://github.com/kengimel/Lift_forms">here</a>.

[sourcecode language="scala"]
class RentingForm extends StatefulSnippet { // RentingForm snippet extending StatefulSnippet
  var dispatch: DispatchIt = {
    case &amp;amp;quot;rent&amp;amp;quot; =&amp;amp;gt; rentForm _ // call rentForm function
  }
  var (name, address, email, movieType, dateOfHire, numberOfDays, discount) = (&amp;amp;quot;&amp;amp;quot;, &amp;amp;quot;&amp;amp;quot;, &amp;amp;quot;&amp;amp;quot;, &amp;amp;quot;&amp;amp;quot;, &amp;amp;quot;&amp;amp;quot;, &amp;amp;quot;&amp;amp;quot;, &amp;amp;quot;&amp;amp;quot;) // Tuple of form variables
  val movieSeq = Seq(&amp;amp;quot;&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;Select Movie Type&amp;amp;quot;, &amp;amp;quot;Sci-fi&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;Sci-fi&amp;amp;quot;, &amp;amp;quot;Horror&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;Horror&amp;amp;quot;, &amp;amp;quot;Comedy&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;Comedy&amp;amp;quot;, &amp;amp;quot;Suspense&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;Suspense&amp;amp;quot;, &amp;amp;quot;Romance&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;Romance&amp;amp;quot;) // Sequence of movie types
  val discountMap = Map(&amp;amp;quot;Regular Customer&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;Regular Customer&amp;amp;quot;, &amp;amp;quot;New Customer&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;New Customer&amp;amp;quot;) // Map of customer types

// definition for rentForm
  def rentForm(xhtml: NodeSeq): NodeSeq = {
    dispatch = {
      case name if name != &amp;amp;quot;&amp;amp;quot; =&amp;amp;gt; showDetails _                  // call show details function if name is not equal to &amp;amp;quot;&amp;amp;quot;
    }

    val discounts = SHtml.radio(discountMap.keys.toList, Full(&amp;amp;quot;New Customer&amp;amp;quot;), discount = _, &amp;amp;quot;class&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;required&amp;amp;quot;) // radio button

    val submitLabel = &amp;amp;quot;Confirm&amp;amp;quot;
// Binding Form fields and components to template
    bind(&amp;amp;quot;v&amp;amp;quot;, xhtml,
      &amp;amp;quot;name&amp;amp;quot; -&amp;amp;gt; SHtml.text(name, name = _, &amp;amp;quot;class&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;required&amp;amp;quot;), // text field
      &amp;amp;quot;address&amp;amp;quot; -&amp;amp;gt; SHtml.textarea(address, address = _, &amp;amp;quot;rows&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;5&amp;amp;quot;, &amp;amp;quot;class&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;required&amp;amp;quot;), // text area
      &amp;amp;quot;email&amp;amp;quot; -&amp;amp;gt; SHtml.text(email, email = _, &amp;amp;quot;class&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;required email&amp;amp;quot;), // text field
      &amp;amp;quot;movie&amp;amp;quot; -&amp;amp;gt; SHtml.select(movieSeq, Empty, movieType = _, &amp;amp;quot;class&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;required&amp;amp;quot;), //  select options combo box
      &amp;amp;quot;date&amp;amp;quot; -&amp;amp;gt; SHtml.text(dateOfHire, dateOfHire = _, &amp;amp;quot;class&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;required date&amp;amp;quot;, &amp;amp;quot;id&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;datePicker&amp;amp;quot;), // text field
      &amp;amp;quot;numberOfDays&amp;amp;quot; -&amp;amp;gt; SHtml.text(numberOfDays, numberOfDays = _, &amp;amp;quot;class&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;required&amp;amp;quot;), // text field
      &amp;amp;quot;regular&amp;amp;quot; -&amp;amp;gt; discounts(0), // radio buttons 0
      &amp;amp;quot;new&amp;amp;quot; -&amp;amp;gt; discounts(1), // radio button 1
      &amp;amp;quot;rtxt1&amp;amp;quot; -&amp;amp;gt; (discountMap.head.key), //radio button label 0
      &amp;amp;quot;rtxt2&amp;amp;quot; -&amp;amp;gt; (discountMap.last.key), // radio button label 1
      &amp;amp;quot;submit&amp;amp;quot; -&amp;amp;gt; SHtml.submit(submitLabel, () =&amp;amp;gt; {}, &amp;amp;quot;id&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;submit&amp;amp;quot;)) // submit button

  }
// definition for showDetails
  def showDetails(xhtml: NodeSeq): NodeSeq = {

    val submitLabel = &amp;amp;quot;Edit&amp;amp;quot;
// Binding Form fields and components to template
    bind(&amp;amp;quot;v&amp;amp;quot;, xhtml,
      &amp;amp;quot;name&amp;amp;quot; -&amp;amp;gt; Text(name), // plain text rendering form variable to template
      &amp;amp;quot;address&amp;amp;quot; -&amp;amp;gt; Text(address), // plain text rendering form variable to template
      &amp;amp;quot;email&amp;amp;quot; -&amp;amp;gt; Text(email), // plain text rendering form variable to template
      &amp;amp;quot;movie&amp;amp;quot; -&amp;amp;gt; Text(movieType), // plain text rendering form variable to template
      &amp;amp;quot;date&amp;amp;quot; -&amp;amp;gt; Text(dateOfHire), // plain text rendering form variable to template
      &amp;amp;quot;numberOfDays&amp;amp;quot; -&amp;amp;gt; Text(numberOfDays), // plain text rendering form variable to template
      &amp;amp;quot;regular&amp;amp;quot; -&amp;amp;gt; Text(discount), // plain text rendering form variable to template
      &amp;amp;quot;new&amp;amp;quot; -&amp;amp;gt; Text(&amp;amp;quot;&amp;amp;quot;), // plain text rendering &amp;amp;quot;&amp;amp;quot; to template
      &amp;amp;quot;rtxt1&amp;amp;quot; -&amp;amp;gt; Text(&amp;amp;quot;&amp;amp;quot;), // plain text rendering &amp;amp;quot;&amp;amp;quot; to template
      &amp;amp;quot;rtxt2&amp;amp;quot; -&amp;amp;gt; Text(&amp;amp;quot;&amp;amp;quot;), // plain text rendering &amp;amp;quot;&amp;amp;quot; to template
      &amp;amp;quot;submit&amp;amp;quot; -&amp;amp;gt; SHtml.submit(submitLabel, () =&amp;amp;gt; S.mapSnippet(&amp;amp;quot;RentingForm.rent&amp;amp;quot;, editDetails _), &amp;amp;quot;id&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;submit&amp;amp;quot;)) // submit button

  }

// definition for editDetails
  def editDetails(xhtml: NodeSeq): NodeSeq = {
    val discounts = SHtml.radio(discountMap.keys.toList, Full(discount), discount = _, &amp;amp;quot;class&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;required&amp;amp;quot;) // radio button
// Binding Form fields and components to template
    bind(&amp;amp;quot;v&amp;amp;quot;, xhtml,
      &amp;amp;quot;name&amp;amp;quot; -&amp;amp;gt; SHtml.text(name, name = _, &amp;amp;quot;class&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;required&amp;amp;quot;), // text field
      &amp;amp;quot;address&amp;amp;quot; -&amp;amp;gt; SHtml.textarea(address, address = _, &amp;amp;quot;rows&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;5&amp;amp;quot;, &amp;amp;quot;class&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;required&amp;amp;quot;), // text area
      &amp;amp;quot;email&amp;amp;quot; -&amp;amp;gt; SHtml.text(email, email = _, &amp;amp;quot;class&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;required email&amp;amp;quot;), // text field
      &amp;amp;quot;movie&amp;amp;quot; -&amp;amp;gt; SHtml.select(movieSeq, Full(movieType), movieType = _, &amp;amp;quot;class&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;required&amp;amp;quot;), // select option combo box
      &amp;amp;quot;date&amp;amp;quot; -&amp;amp;gt; SHtml.text(dateOfHire, dateOfHire = _, &amp;amp;quot;class&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;required date&amp;amp;quot;, &amp;amp;quot;id&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;datePicker&amp;amp;quot;), // text field
      &amp;amp;quot;numberOfDays&amp;amp;quot; -&amp;amp;gt; SHtml.text(numberOfDays, numberOfDays = _, &amp;amp;quot;class&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;required&amp;amp;quot;), // text field
      &amp;amp;quot;regular&amp;amp;quot; -&amp;amp;gt; discounts(0), // radio button 0
      &amp;amp;quot;new&amp;amp;quot; -&amp;amp;gt; discounts(1), // radio button 1
      &amp;amp;quot;rtxt1&amp;amp;quot; -&amp;amp;gt; (discountMap.head.key),  // radio button label 0
      &amp;amp;quot;rtxt2&amp;amp;quot; -&amp;amp;gt; (discountMap.last.key), // radio button label 1
      &amp;amp;quot;submit&amp;amp;quot; -&amp;amp;gt; SHtml.submit(&amp;amp;quot;Save&amp;amp;quot;, () =&amp;amp;gt; S.redirectTo(&amp;amp;quot;/view&amp;amp;quot;, () =&amp;amp;gt; S.mapSnippet(&amp;amp;quot;RentingForm.rent&amp;amp;quot;, thankYou _)), &amp;amp;quot;id&amp;amp;quot; -&amp;amp;gt; &amp;amp;quot;submit&amp;amp;quot;)) // submit button

  }

// definition for thankYou
  def thankYou(xhtml: NodeSeq): NodeSeq = {
    Log.info(name, address, email, movieType, dateOfHire, numberOfDays, discount) // logging the form variables
// Binding Form fields and components to template
    bind(&amp;amp;quot;v&amp;amp;quot;, xhtml,
      &amp;amp;quot;name&amp;amp;quot; -&amp;amp;gt; (name))
  }

}

[/sourcecode]

Finally, the corresponding web page for the above snippet, also notice that is wrapped around the with the which points to the template file in the "templates-hidden" folder. For more on this click <a href="http://github.com/kengimel/Lift_forms">here</a>.

[sourcecode language="xml"]
&amp;amp;lt;lift:surround with=&amp;amp;quot;default&amp;amp;quot; at=&amp;amp;quot;content&amp;amp;quot;&amp;amp;gt;

    &amp;amp;lt;lift:RentingForm.rent form=&amp;amp;quot;POST&amp;amp;quot; id=&amp;amp;quot;confirmform&amp;amp;quot; class=&amp;amp;quot;cmxform&amp;amp;quot;&amp;amp;gt;

            &amp;amp;lt;fieldset&amp;amp;gt;
                &amp;amp;lt;legend&amp;amp;gt;Video Hire Details&amp;amp;lt;/legend&amp;amp;gt;

                &amp;amp;lt;div&amp;amp;gt;

                    &amp;amp;lt;label for=&amp;amp;quot;name&amp;amp;quot;&amp;amp;gt;Name:&amp;amp;lt;span&amp;amp;gt;*&amp;amp;lt;/span&amp;amp;gt;&amp;amp;lt;/label&amp;amp;gt;

                    &amp;amp;lt;v:name/&amp;amp;gt;

                &amp;amp;lt;/div&amp;amp;gt;
                &amp;amp;lt;div&amp;amp;gt;
                    &amp;amp;lt;label for=&amp;amp;quot;address&amp;amp;quot;&amp;amp;gt;Address:&amp;amp;lt;span&amp;amp;gt;*&amp;amp;lt;/span&amp;amp;gt;&amp;amp;lt;/label&amp;amp;gt;

                    &amp;amp;lt;v:address/&amp;amp;gt;

                &amp;amp;lt;/div&amp;amp;gt;
                &amp;amp;lt;div&amp;amp;gt;
                    &amp;amp;lt;label for=&amp;amp;quot;email&amp;amp;quot;&amp;amp;gt;Email:&amp;amp;lt;span&amp;amp;gt;*&amp;amp;lt;/span&amp;amp;gt;&amp;amp;lt;/label&amp;amp;gt;
                    &amp;amp;lt;v:email/&amp;amp;gt;

                &amp;amp;lt;/div&amp;amp;gt;
                &amp;amp;lt;div&amp;amp;gt;
                    &amp;amp;lt;label for=&amp;amp;quot;movietype&amp;amp;quot;&amp;amp;gt;Movie Type:&amp;amp;lt;span&amp;amp;gt;*&amp;amp;lt;/span&amp;amp;gt;&amp;amp;lt;/label&amp;amp;gt;
                    &amp;amp;lt;v:movie/&amp;amp;gt;

                &amp;amp;lt;/div&amp;amp;gt;
                &amp;amp;lt;div&amp;amp;gt;
                    &amp;amp;lt;label for=&amp;amp;quot;dateOfHire&amp;amp;quot;&amp;amp;gt;Date of Hire:&amp;amp;lt;span&amp;amp;gt;*&amp;amp;lt;/span&amp;amp;gt;&amp;amp;lt;/label&amp;amp;gt;
                    &amp;amp;lt;v:date/&amp;amp;gt;
                    &amp;amp;lt;span id=&amp;amp;quot;notify&amp;amp;quot;&amp;amp;gt; DD/MM/YYYY &amp;amp;lt;/span&amp;amp;gt;
                &amp;amp;lt;/div&amp;amp;gt;
                &amp;amp;lt;div&amp;amp;gt;
                    &amp;amp;lt;label for=&amp;amp;quot;numberOfDays&amp;amp;quot;&amp;amp;gt;Number Of Days:&amp;amp;lt;span&amp;amp;gt;*&amp;amp;lt;/span&amp;amp;gt;&amp;amp;lt;/label&amp;amp;gt;
                    &amp;amp;lt;v:numberOfDays/&amp;amp;gt;
                &amp;amp;lt;/div&amp;amp;gt;
                &amp;amp;lt;div class=&amp;amp;quot;radio&amp;amp;quot;&amp;amp;gt;
                    &amp;amp;lt;fieldset&amp;amp;gt;
                        &amp;amp;lt;legend&amp;amp;gt;&amp;amp;lt;span&amp;amp;gt; Discount Rate:&amp;amp;lt;span&amp;amp;gt;*&amp;amp;lt;/span&amp;amp;gt; &amp;amp;lt;/span&amp;amp;gt;&amp;amp;lt;/legend&amp;amp;gt;

                        &amp;amp;lt;div&amp;amp;gt;
                              &amp;amp;lt;v:regular/&amp;amp;gt;&amp;amp;lt;label&amp;amp;gt; &amp;amp;lt;v:rtxt1/&amp;amp;gt; &amp;amp;lt;/label&amp;amp;gt;
                             &amp;amp;lt;v:new/&amp;amp;gt; &amp;amp;lt;label&amp;amp;gt; &amp;amp;lt;v:rtxt2/&amp;amp;gt; &amp;amp;lt;/label&amp;amp;gt;

                            &amp;amp;lt;/div&amp;amp;gt;

                    &amp;amp;lt;/fieldset&amp;amp;gt;
                &amp;amp;lt;/div&amp;amp;gt;
                &amp;amp;lt;div id=&amp;amp;quot;btn&amp;amp;quot;&amp;amp;gt;

                      &amp;amp;lt;v:submit/&amp;amp;gt;

                &amp;amp;lt;/div&amp;amp;gt;
            &amp;amp;lt;/fieldset&amp;amp;gt;
    &amp;amp;lt;/lift:RentingForm.rent&amp;amp;gt;
&amp;amp;lt;/lift:surround&amp;amp;gt;

[/sourcecode]

For the full source code on this example:

[sourcecode language="bash"] git clone git@github.com:kengimel/Lift_forms.git [/sourcecode]

and also a working example <a href="http://liftforms.ikennaokpala.staxapps.net/">here</a>.

REFERENCE:
Odersky M. et al, 2008. <em>Programming in Scala First Edition</em>, Artima.
Pollak D, 2010 Scala Lift Off London, Q&amp;A, Available at: http://skillsmatter.com/podcast/scala/scala-lift-off-david-pollak [Accessed November 2010.]
Wampler, D., 2008. Available at: http://blog.objectmentor.com/articles/2008/08/03/the-seductions-of-scala-part-i [Accessed January 2010.]

[slideshare id=5660615&amp;doc=lift-101103182651-phpapp02]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>126</wp:post_id>
  <wp:post_date>2010-08-31 07:24:12</wp:post_date>
  <wp:post_date_gmt>2010-08-31 07:24:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>scala-and-lift-web-framework</wp:post_name>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="jvm"><![CDATA[JVM]]></category>
  <category domain="category" nicename="lift"><![CDATA[LIFT]]></category>
  <category domain="category" nicename="maven"><![CDATA[MAVEN]]></category>
  <category domain="category" nicename="sbt"><![CDATA[SBT]]></category>
  <category domain="category" nicename="scala"><![CDATA[SCALA]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1283239455]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[processing-forms-and-state-with-the-scala-lift-web-framework]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1283239454]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>250</wp:comment_id>
    <wp:comment_author><![CDATA[mansa]]></wp:comment_author>
    <wp:comment_author_email>manasaprasad@me.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>74.60.213.37</wp:comment_author_IP>
    <wp:comment_date>2011-12-02 14:44:19</wp:comment_date>
    <wp:comment_date_gmt>2011-12-02 14:44:19</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I am not able to download the source files from git repository (git clone git@github.com:kengimel/Lift_forms.git). Permission denied error message is coming. Can you please help me ?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1322837059.6551";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1322837487</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1322837487.8974";s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>285</wp:comment_id>
    <wp:comment_author><![CDATA[Jay]]></wp:comment_author>
    <wp:comment_author_email>jpkakkassery@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>76.97.178.2</wp:comment_author_IP>
    <wp:comment_date>2012-02-13 04:58:46</wp:comment_date>
    <wp:comment_date_gmt>2012-02-13 04:58:46</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Not able to download the source code:
$ git clone git@github.com:kengimel/Lift_forms.git
Cloning into Lift_forms...
Permission denied (publickey).
fatal: The remote end hung up unexpectedly]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1329132058.4079";s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1329132058</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:13:"1329109126.99";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>286</wp:comment_id>
    <wp:comment_author><![CDATA[IKENNA OKPALA]]></wp:comment_author>
    <wp:comment_author_email>ikennaokpala@googlemail.com</wp:comment_author_email>
    <wp:comment_author_url>http://ikennaokpala.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>64.14.166.4</wp:comment_author_IP>
    <wp:comment_date>2012-02-13 11:21:52</wp:comment_date>
    <wp:comment_date_gmt>2012-02-13 11:21:52</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[have you got a github account with your ssh pub key uploaded.. you this in order to download those files..]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>285</wp:comment_parent>
    <wp:comment_user_id>9228897</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1329132114</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1329132114.3356";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>130</wp:comment_id>
    <wp:comment_author><![CDATA[Sohbet]]></wp:comment_author>
    <wp:comment_author_email>taner@cicisohbet.net</wp:comment_author_email>
    <wp:comment_author_url>http://www.cicisohbet.net</wp:comment_author_url>
    <wp:comment_author_IP>72.9.245.163</wp:comment_author_IP>
    <wp:comment_date>2010-10-08 14:46:16</wp:comment_date>
    <wp:comment_date_gmt>2010-10-08 14:46:16</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[teşekkürler]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1286549712</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>217</wp:comment_id>
    <wp:comment_author><![CDATA[Coach Factory Outlet Online]]></wp:comment_author>
    <wp:comment_author_email>kylelg999@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.coach-factory-outlet-online.com/</wp:comment_author_url>
    <wp:comment_author_IP>175.44.9.244</wp:comment_author_IP>
    <wp:comment_date>2011-04-27 09:32:41</wp:comment_date>
    <wp:comment_date_gmt>2011-04-27 09:32:41</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[just like before, i know, i will gain more knowledge when i entry into you website.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1303897297</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1303897297.8279";s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1303896761.2148";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>The Higher Order Style.. (Functions)</title>
  <link>http://ikennaokpala.wordpress.com/2010/05/03/the-higher-order-style-functions/</link>
  <pubDate>Mon, 03 May 2010 23:47:31 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=131</guid>
  <description></description>
  <content:encoded><![CDATA[These past days have been a revealing period, as i wondered into <a href="http://scala-lang.org">Scala</a> land to behold it's features that have made it such a hot topic....

My background in programming is largely imperative.. until earlier this year when i started  trying out some functional programming languages (Haskell, F#, Scala.. etc).

One feature of functional languages that i found very interesting were Higher Order Functions.

Higher order functions are notably a vital part, if not the most important part of functional languages.

A higher order function  accepts a function as a parameter or can return  a function back.

An example:

In an imperative language like JAVA looping through characters to find a lowercase value could be:

[sourcecode language="java"]

private boolean hasLowerCase = false;
for(int i = 0; i = title.length(); i++){
if (Character.isLowerCase(title.charAt(i))){
hasLowerCase = true;
break;
}
}
[/sourcecode]

In <a href="http://scala-lang.org">Scala</a> this can be achieve thus:

[sourcecode language="scala"]
val hasLowerCase = title.exists(_.isLowerCase)
or
val hasLowerCase = title.exists(title =&gt; title.isLowerCase)
[/sourcecode]

In <a href="http://scala-lang.org">Scala</a> this is possible because <a href="http://scala-lang.org">Scala</a> functions are values, this means you can take a function and explicitly set it to a variable.

[sourcecode language="scala"]
val areaOfTriangle = (l:Int, b:Int) =&gt; l * b / 2
areaOfTriangle(2,3) = 3

[/sourcecode]

T<span style="font-family:Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;line-height:19px;white-space:normal;font-size:13px;">his qualifies it to be passed as a parameter to another function.</span>

<a href="http://scala-lang.org">Scala</a> allows it's users to define and use Higher order functions, this as shown makes code concise, putting to good use higher levels of abstractions, which to me is awesome:

In <a href="http://scala-lang.org">Scala</a> playing or looping through Lists appears to be trivial as shown below:

[sourcecode language="scala"]

List(3.5, 2.5, 1.5).map((a:Double) =&gt; a * 2)
or
List(3.5, 2.5, 1.5).map(a =&gt; a * 2)
or
List(3.5, 2.5, 1.5).map(_* 2)
[/sourcecode]

Above the code multiplies the members of the List by 2.. The last two functions rely on the implicit typing capability of the <a href="http://scala-lang.org">Scala</a> language. This makes the code even less noisy, gives us little to type and gives a similar feel of regular dynamic scripting language as the compiler does all the hard work of type inferencing.

Programming with higher order functions, like the <code><span style="font-family:Consolas, Monaco, 'Courier New', Courier, monospace;line-height:18px;font-size:12px;white-space:pre;"><span style="font-family:Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;line-height:19px;white-space:normal;font-size:13px;">map or exists function makes it;</span></span></code>
<ul>
	<li>Expressively clear, ease to grasp what the program does and the intention of the programmer.</li>
	<li>Functions that accept Functions as arguments are more reusable than other functions.</li>
	<li>Higher order function gives us the needed syntactic sugar to build big functionalites out of tiny bits of code.</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>131</wp:post_id>
  <wp:post_date>2010-05-03 23:47:31</wp:post_date>
  <wp:post_date_gmt>2010-05-03 23:47:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>the-higher-order-style-functions</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[JAVA]]></category>
  <category domain="category" nicename="jvm"><![CDATA[JVM]]></category>
  <category domain="category" nicename="scala"><![CDATA[SCALA]]></category>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1272930452]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>41</wp:comment_id>
    <wp:comment_author><![CDATA[Seun Osewa]]></wp:comment_author>
    <wp:comment_author_email>seun.osewa@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.seunosewa.com/</wp:comment_author_url>
    <wp:comment_author_IP>41.155.66.87</wp:comment_author_IP>
    <wp:comment_date>2010-05-07 00:54:09</wp:comment_date>
    <wp:comment_date_gmt>2010-05-07 00:54:09</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Yes, Scala is great.  Wish it had more momentum.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>42</wp:comment_id>
    <wp:comment_author><![CDATA[IKENNA OKPALA]]></wp:comment_author>
    <wp:comment_author_email>ikennaokpala@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://ikennaokpala.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>82.5.93.10</wp:comment_author_IP>
    <wp:comment_date>2010-05-07 00:57:42</wp:comment_date>
    <wp:comment_date_gmt>2010-05-07 00:57:42</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[@seun: i am of the opinion that scala is the future for the enterprise and could go main stream soon all things being equal...]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>9228897</wp:comment_user_id>
  </wp:comment>
</item>
<item>
  <title>Configuring Spring Security..</title>
  <link>http://ikennaokpala.wordpress.com/2010/05/21/configuring-spring-security/</link>
  <pubDate>Fri, 21 May 2010 15:57:47 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=196</guid>
  <description></description>
  <content:encoded><![CDATA[<!-- 		@page { margin: 2cm } 		P { margin-bottom: 0.21cm } 		PRE.cjk { font-family: "DejaVu Sans", monospace } 		A:link { so-language: zxx } -->Over the years web application security has continued to be a critical issue. This area of concern is a major source of worry for most enterprise application developers. We as software developers, are faced with the task of securing valuable data that exist within our applications. This data could vary from  email account secured with a username / password pair or a brokerage account secured with a trading PIN, protecting an application is a important aspect of most applications, if not all.  (Walls C., 2007).

According to <a href="http://www.jroller.com/habuma/">Craig Walls</a> (2007, pg 248), Security is a concern that transcends an application’s functionality. For the most part, an application should play no part in securing itself. Although you could write security functionality directly into your application’s code (and that’s not uncommon), it is better to keep security concerns separate from application concerns.

One of the popular options for the enterprise java world is spring's security framework (formerly Acegi).

<a href="http://www.jroller.com/habuma/">Craigs Walls</a> in his spring in action book defined spring security as  <em>"a security framework that provides declarative security for your Spring-based applications."</em>

In this blog post, I intend to share my personal experience configuring spring security.

Firstly there are a few requirements (jars). you will need to define the following in your maven pom.xml file.

[sourcecode language="xml"]
&lt;dependency&gt;
 &lt;groupId&gt;org.springframework.security&lt;/groupId&gt;
 &lt;artifactId&gt;spring-security-core&lt;/artifactId&gt;
 &lt;version&gt;2.0.4&lt;/version&gt;
 &lt;/dependency&gt;
 &lt;dependency&gt;
 &lt;groupId&gt;org.springframework.security&lt;/groupId&gt;
 &lt;artifactId&gt;spring-security-core-tiger&lt;/artifactId&gt;
 &lt;version&gt;2.0.4&lt;/version&gt;
 &lt;/dependency&gt;
 &lt;dependency&gt;
 &lt;groupId&gt;org.springframework.security&lt;/groupId&gt;
 &lt;artifactId&gt;spring-security-taglibs&lt;/artifactId&gt;
 &lt;version&gt;2.0.4&lt;/version&gt;
 &lt;/dependency&gt;
 &lt;dependency&gt;
 &lt;groupId&gt;org.springframework.security&lt;/groupId&gt;
 &lt;artifactId&gt;spring-security-acl&lt;/artifactId&gt;
 &lt;version&gt;2.0.4&lt;/version&gt;
 &lt;/dependency&gt;
&lt;dependency&gt;
 &lt;groupId&gt;org.aspectj&lt;/groupId&gt;
 &lt;artifactId&gt;aspectjrt&lt;/artifactId&gt;
 &lt;version&gt;1.5.4&lt;/version&gt;
 &lt;/dependency&gt;
[/sourcecode]

Next task is configuring the Web.xml file:

[sourcecode language="xml"]

 &lt;context-param&gt;
 &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;
 &lt;param-value&gt;
 classpath:applicationContext.xml
 &lt;/param-value&gt;
 &lt;/context-param&gt;

 &lt;listener&gt;
 &lt;listener-class&gt; org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;

 &lt;/listener&gt;

 &lt;filter&gt;
 &lt;filter-name&gt;springSecurityFilterChain&lt;/filter-name&gt;
 &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;
 &lt;/filter&gt;

 &lt;filter-mapping&gt;
 &lt;filter-name&gt;springSecurityFilterChain&lt;/filter-name&gt;
 &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
 &lt;/filter-mapping&gt;
[/sourcecode]

Every Spring application requires an applications context, this is a primary requirement of all spring based applications, this is a trimmed down version focusing on the topic of this blog post.

[sourcecode language="xml"]
&lt;?xml version=&quot;1.0&quot; encoding=&quot;MacRoman&quot;?&gt;
&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;
xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
xmlns:context=&quot;http://www.springframework.org/schema/context&quot;
xmlns:tx=&quot;http://www.springframework.org/schema/tx&quot;
xmlns:security=&quot;http://www.springframework.org/schema/security&quot;
xmlns:lang=&quot;http://www.springframework.org/schema/lang&quot;
xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-2.5.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-2.0.xsd
http://www.springframework.org/schema/lang
http://www.springframework.org/schema/lang/spring-lang-2.5.xsd&quot;&gt;
&lt;context:component-scan base-package=&quot;com.example&quot; /&gt;
&lt;security:http auto-config='false'&gt;
&lt;security:intercept-url pattern=&quot;/includes/**&quot; access=&quot;IS_AUTHENTICATED_ANONYMOUSLY&quot; filters=&quot;none&quot; /&gt;
&lt;security:intercept-url pattern=&quot;/favicon.ico&quot; access=&quot;IS_AUTHENTICATED_ANONYMOUSLY&quot; filters=&quot;none&quot; /&gt;
&lt;security:intercept-url pattern=&quot;/login.jsp&quot; filters=&quot;none&quot;/&gt;
&lt;security:intercept-url pattern=&quot;/**&quot; access=&quot;ROLE_USER&quot; filters=&quot;none&quot; /&gt;
&lt;security:form-login login-page=&quot;/login.jsp&quot; authentication-failure-url=&quot;/login.jsp?login_error=1&quot; /&gt;
&lt;security:concurrent-session-control max-sessions=&quot;1&quot;/&gt;
&lt;security:logout logout-url=&quot;/logout&quot; logout-success-url=&quot;/&quot;/&gt;
&lt;/security:http&gt;
&lt;security:authentication-provider&gt;
&lt;security:password-encoder hash=&quot;md5&quot; /&gt;
&lt;security:user-service&gt;
&lt;security:user name=&quot;ikenna&quot; password=&quot;3d801aa532c1cec3ee82d87a99fdf63f&quot; authorities=&quot;ROLE_USER&quot; /&gt;
&lt;security:user name=&quot;admin&quot; password=&quot;21232f297a57a5a743894a0e4a801fc3&quot; authorities=&quot;ROLE_USER&quot; /&gt;
&lt;security:user name=&quot;test&quot; password=&quot;098f6bcd4621d373cade4e832627b4f6&quot; authorities=&quot;ROLE_USER&quot; /&gt;
&lt;/security:user-service&gt;
&lt;/security:authentication-provider&gt;
&lt;/beans&gt;
[/sourcecode]

Finally the login.jsp page. This page hold the form tags and should be placed in the root of the webapps foilder.

[sourcecode language="html"]
&lt;%@page contentType=&quot;text/html&quot; pageEncoding=&quot;MacRoman&quot;%&gt;
&lt;%@ taglib prefix='c' uri='http://java.sun.com/jstl/core_rt' %&gt;
&lt;%@ page import=&quot;org.springframework.security.ui.AbstractProcessingFilter&quot; %&gt;
&lt;%@ page import=&quot;org.springframework.security.ui.webapp.AuthenticationProcessingFilter&quot; %&gt;
&lt;%@ page import=&quot;org.springframework.security.AuthenticationException&quot; %&gt;
&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;
 &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;
&lt;html&gt;
 &lt;head&gt;
 &lt;title&gt; Login Page&lt;/title&gt;
 &lt;link href=&quot;&lt;c:url value=&quot;includes/stylesheets/main.css&quot; /&gt;&quot; media=&quot;screen&quot;  rel=&quot;Stylesheet&quot; type=&quot;text/css&quot; /&gt;
 &lt;link href=&quot;&lt;c:url value=&quot;includes/stylesheets/calendar.css&quot; /&gt;&quot; media=&quot;screen&quot; rel=&quot;Stylesheet&quot; type=&quot;text/css&quot; /&gt;
 &lt;link href=&quot;&lt;c:url value=&quot;includes/stylesheets/forms.css&quot; /&gt;&quot; media=&quot;screen&quot; rel=&quot;Stylesheet&quot; type=&quot;text/css&quot; /&gt;
 &lt;/head&gt;
 &lt;body&gt;
 &lt;h1&gt;Login &lt;/h1&gt;
&lt;c:if test=&quot;${not empty param.login_error}&quot;&gt;
 &lt;font color=&quot;red&quot;&gt;
 Your login attempt was not successful, try again.&lt;br/&gt;&lt;br/&gt;
 Reason: &lt;c:out value=&quot;${SPRING_SECURITY_LAST_EXCEPTION.message}&quot;/&gt;.
 &lt;/font&gt;
 &lt;/c:if&gt;&lt;br&gt;&lt;br&gt;
 &lt;form name=&quot;f&quot; action=&quot;&lt;c:url value='j_spring_security_check'/&gt;&quot; method=&quot;POST&quot;&gt;
 &lt;fieldset&gt;
 &lt;legend&gt;Log In Form&lt;/legend&gt; &lt;hr&gt;
 &lt;ol&gt;
 &lt;li&gt;&lt;label for=&quot;login&quot;&gt;Username:&lt;/label&gt;
 &lt;input type='text' name='j_username' value='&lt;c:if test=&quot;${not empty param.login_error}&quot;&gt;&lt;c:out value=&quot;${SPRING_SECURITY_LAST_USERNAME}&quot;/&gt;&lt;/c:if&gt;'/&gt;
 &lt;/li&gt;
 &lt;li&gt;
 &lt;label for=&quot;password&quot;&gt;Password:&lt;/label&gt;
 &lt;input type='password' name='j_password'/&gt;
 &lt;/li&gt;
 &lt;li&gt;
 &lt;label for=&quot;remember_me&quot;&gt;Remember me:&lt;/label&gt;
 &lt;input type=&quot;checkbox&quot; name=&quot;_spring_security_remember_me&quot;&gt;
 &lt;/li&gt;
 &lt;/ol&gt;
 &lt;div&gt;
 &lt;input name=&quot;reset&quot; type=&quot;reset&quot; value=&quot;Reset&quot;  onclick=&quot;return confirm('Are you sure you want to Clear or Reset this form');&quot;&gt;
 &lt;input name=&quot;submit&quot; type=&quot;submit&quot; value=&quot;Log In&quot;&gt;
 &lt;/div&gt;
 &lt;/fieldset&gt;
 &lt;/form
 &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;

[/sourcecode]

One thing though, I struggled with is spring security not by passing the resources (*.js, *.css, and images etc..) declared the head section of my login.jsp file.

I noticed Spring security takes into account all the resources that are declared in the *.jsp pages and will atempt to display the last resource it remembered (declared in the login.jsp page).Also modern browsers request for the favicon.ico file from the web pages, I notice spring security required me to let it know that the resources should not be a priority to it.

I would suggest copying all your *.js, *.css, and images etc.. in to one folder (includes) and then declare the folder as IS_AUTHENTICATED_ANONYMOUSLY also setting the filters off.

[sourcecode language="xml"]
&lt;security:intercept-url pattern=&quot;/includes/**&quot; access=&quot;IS_AUTHENTICATED_ANONYMOUSLY&quot; filters=&quot;none&quot; /&gt;
&lt;security:intercept-url pattern=&quot;/favicon.ico&quot; access=&quot;IS_AUTHENTICATED_ANONYMOUSLY&quot; filters=&quot;none&quot; /&gt;
[/sourcecode]

REFERENCE:
Walls C., Breidenbach R. 2007. Spring in Action Second Edition, Manning Publishers.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>196</wp:post_id>
  <wp:post_date>2010-05-21 15:57:47</wp:post_date>
  <wp:post_date_gmt>2010-05-21 15:57:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>configuring-spring-security</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[JAVA]]></category>
  <category domain="category" nicename="maven"><![CDATA[MAVEN]]></category>
  <category domain="category" nicename="spring"><![CDATA[SPRING]]></category>
  <category domain="category" nicename="web-development"><![CDATA[WEB DEVELOPMENT]]></category>
  <wp:postmeta>
    <wp:meta_key>_oembed_9a5eb9f737ab688557279742e13b9d8c</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1274457475]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_1d81263664c908490e9a05d74dfe0366</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_72dfd9203d571accffb3847313683ae9</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_fddc3fd34f1e468e6c52b2a60fe04161</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c897aea266c99d707ebafebca8e46d37</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_ec75c198ca557997fdda15806e71d749</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_8b54a084d2a27a7ae00675620f3a5f99</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_6e23f255dc1b3c674d986a14f8f1bb0d</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_629edf7d7017d6b1f6e3f35035d8cc1f</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_3680d6bfff08587fd00a2f90f6afaf71</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_9c4c15b627f92c9812877a9504f7e68d</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b21a648d39c3d2d17a4b8074aaab6d84</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_8920ac5bf5f8a5ef5251d7c506c8a19f</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_1629302e98af99f78ec6d74f74f602bb</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_cede9c9661161498dbd4398a191615f7</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_d7f735ec3cf47e55a8d69cd6c63494aa</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_487cc14003713c6be6725f6572a94631</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_243e1ad819c79797314ecc1c99a8cb53</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_f73387dc78a3275295d08afdc0b212ab</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_e90d9522ec5495fc0eea521032522b32</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_3e178aff6fe1864452d3cc4d01edcbd6</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_13cca0438b3a484d903954c35dd12bb1</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_5d9c94571e4a7e0e8341b166fab0f415</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_e042caaa114b04d0689fcb257a6b9a09</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_201719eb9049974fc00769728f176221</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_17671f6fe3d3a29d00e834b4016368e2</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_fe16037695a10f50e6eeaa1304653fbd</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_60bdc1787ee848b38a734af338353c5d</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_edd66d1a97c1491c01cf674a130e3939</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_6f9004cfc5063a03e105afa3492de0a2</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_398817a371d0e88e33cee8ecd2546f7c</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_9ba5dd14bea1e91b0d3598d22f30aaf2</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_77c2a773ddbd55807b77d74f8e3cb7fe</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_2cd432f1688ab5e0fa3bbada6954856d</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_4d474a819f3e08cd2624875d01ae0684</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b17b26c2745e3bd9a629d73d68d0c83d</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_4203412904c0273e491e1636211dc1c3</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_cc448bfb4d470e247dc2655f4d1bf2b4</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c280baa5c6eb8059614d9b1e45f3a6e4</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_3b8285509dbf75ffad61e8bb54c545b1</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b8e277fb0fd2bd307185ee28328546f8</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_3fc83ce799a891a098898f1fe1d6f213</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_0ba419dd24d5688a284ec9e2ba6f3baf</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_e835e2222db24c1a74615eff0a5dc1b2</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_4c3a187c9e29f12480cb0fa3e02e09cd</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_64a78a7215efbe7ea4d4635418423055</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_9d025d79f24f3d1bb6f059545d350fdb</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_5985e307f71b4bc057ced3caeae12cba</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b19194f9b1a79c14af6f1fd5b89c72df</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_daa9e0cddcc40322df746b113a3a2790</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_ee9c46f5ae5c954cded3a6298467b9ba</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_03d4e69ef606c17f04c63dbb53cb2826</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_ebf3dc9a0abe81a3604ab97947543138</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_350375a5505961832882d7bc2f8ea504</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_2b4b8fd9f4af33e7c4ba1a52a0fd716a</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_a818dcc05140b2663339df04e1c4f7db</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>180</wp:comment_id>
    <wp:comment_author><![CDATA[David Andrade]]></wp:comment_author>
    <wp:comment_author_email>banner316@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>189.26.136.66</wp:comment_author_IP>
    <wp:comment_date>2010-12-13 12:19:15</wp:comment_date>
    <wp:comment_date_gmt>2010-12-13 12:19:15</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Dude, you´re a lifesavior... thanks a lot.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1292242755.6263";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1292245099</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1292245099.5007";s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>181</wp:comment_id>
    <wp:comment_author><![CDATA[IKENNA OKPALA]]></wp:comment_author>
    <wp:comment_author_email>ikennaokpala@googlemail.com</wp:comment_author_email>
    <wp:comment_author_url>http://ikennaokpala.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>213.208.100.16</wp:comment_author_IP>
    <wp:comment_date>2010-12-13 16:40:45</wp:comment_date>
    <wp:comment_date_gmt>2010-12-13 16:40:45</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks David, Glad to hear that this post is useful to you.. Cheers]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>9228897</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1292258446</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1292258446.8453";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>193</wp:comment_id>
    <wp:comment_author><![CDATA[Purple Fox]]></wp:comment_author>
    <wp:comment_author_email>purplefox@dnapl.co.uk</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>81.6.232.36</wp:comment_author_IP>
    <wp:comment_date>2011-02-08 12:23:56</wp:comment_date>
    <wp:comment_date_gmt>2011-02-08 12:23:56</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks a lot for the information, I'm struggling with this stuff at the moment and my IT help isn't...well...helping! I think I'll send this his way and see what he can do about it, so thank you a lot for sharing it. Personally, I'd rather still be in the world of paper and <a href="http://www.labellock.com/tamper-proof-security-sealing-tape.php" rel="nofollow"> Tamper Evident Tape</a> so I knew what I was doing but I suppose i'll have to move on one day!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:13:"1297167836.28";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1297170573</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1297170573.4722";s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>194</wp:comment_id>
    <wp:comment_author><![CDATA[IKENNA OKPALA]]></wp:comment_author>
    <wp:comment_author_email>ikennaokpala@googlemail.com</wp:comment_author_email>
    <wp:comment_author_url>http://ikennaokpala.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>62.133.3.83</wp:comment_author_IP>
    <wp:comment_date>2011-02-08 13:23:00</wp:comment_date>
    <wp:comment_date_gmt>2011-02-08 13:23:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks.. i hope it helps.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>193</wp:comment_parent>
    <wp:comment_user_id>9228897</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1297171383</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1297171383.9634";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>220</wp:comment_id>
    <wp:comment_author><![CDATA[siliev]]></wp:comment_author>
    <wp:comment_author_email>iliev.simeon@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>212.72.211.210</wp:comment_author_IP>
    <wp:comment_date>2011-06-08 13:23:30</wp:comment_date>
    <wp:comment_date_gmt>2011-06-08 13:23:30</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I'd just want to mention that when using filters="none" the access attribute is redundant, because the filter that processes the access expressions is turned off :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>21193020</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1307542552</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1307542553.4697";s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1307539411.6373";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"siliev";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Populating JSF Combo Box with Database values. (or drop down list)...</title>
  <link>http://ikennaokpala.wordpress.com/2010/05/30/populating-jsf-combo-box-with-database-values/</link>
  <pubDate>Sun, 30 May 2010 01:19:45 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=242</guid>
  <description></description>
  <content:encoded><![CDATA[I am presently working on my AISD project, and i am using jsf(<a href="http://www.primefaces.org">primefaces</a>) spring and jpa to build the system. i would like to commend the efforts of the brains behind <a href="http://www.javaserverfaces.org/specification/expert-group">jsf</a> 2.0 and <a href="http://www.primefaces.org">primefaces</a> (1.* and 2.*) :) in particular for making the life of java web devs much easier. I remember back in the days the first versions of <a href="http://www.javaserverfaces.org/specification/expert-group">jsf</a> were simply nightmares, which lead my cohorts and i  to move to frameworks like <a href="http://wicket.apache.org/">wicket</a> :).

This blog post seeks to show how to populate a <a href="http://www.javaserverfaces.org/specification/expert-group">jsf</a> Combo box with values from a database table and also you would notice that the implementation for this case includes both jsf 1.* and jsf 2.*. I assume some familiarity with spring jpa and <a href="http://www.javaserverfaces.org/specification/expert-group">jsf</a>.

Most relational database records have a primary key to uniquely identify it. This key appears on other tables as foreign keys. In my application i needed to display one or more of the attributes of a record from a table on a form and persist its unique identifier .

Below i provide some sample code that gives some hint on how this can be achieved using plain old java objects..

First lets paint the screen.. For JSF 1.*:

[sourcecode language="xml"]

&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;
xmlns:h=&quot;http://java.sun.com/jsf/html&quot;
xmlns:f=&quot;http://java.sun.com/jsf/core&quot;
xmlns:p=&quot;http://primefaces.prime.com.tr/ui&quot;&gt;
&lt;head&gt;
&lt;p:resources /&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h:form prependId=&quot;false&quot; styleClass=&quot;cmxform&quot;&gt;
&lt;fieldset&gt;
  &lt;legend&gt; &lt;/legend&gt;
&lt;p:panel id=&quot;panel&quot; header=&quot;Combo Box Example&quot;&gt;
&lt;h:panelGrid columns=&quot;2&quot;  columnClasses=&quot;label,value&quot; styleClass=&quot;grid&quot;&gt;
&lt;h:outputLabel for=&quot;cb&quot; value=&quot;comboItem&quot; /&gt;
&lt;h:selectOneMenu id=&quot;selectOneCb&quot; value=&quot;#{pageBean.model.modelid}&quot;&gt;
&lt;f:selectItem itemLabel=&quot;Select Model&quot; itemValue=&quot;&quot; /&gt;
&lt;f:selectItems value=&quot;#{pageBean.myModelValues}&quot; /&gt;
&lt;/h:selectOneMenu&gt;
&lt;/h:panelGrid&gt;
&lt;/p:panel&gt;
&lt;/fieldset&gt;
&lt;/h:form&gt;
&lt;/body&gt;
&lt;/html&gt;
[/sourcecode]

For JSF 2.* this is even easier (thanks to <a href="http://cagataycivici.wordpress.com/">Çağatay Çivici</a> the <a href="http://www.primefaces.org">primefaces</a> lead for pointing this out to me :)):

[sourcecode language="xml"]

&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;
xmlns:h=&quot;http://java.sun.com/jsf/html&quot;
xmlns:f=&quot;http://java.sun.com/jsf/core&quot;
xmlns:p=&quot;http://primefaces.prime.com.tr/ui&quot;&gt;
&lt;head&gt;
&lt;p:resources /&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h:form prependId=&quot;false&quot; styleClass=&quot;cmxform&quot;&gt;
&lt;fieldset&gt;
  &lt;legend&gt; &lt;/legend&gt;
&lt;p:panel id=&quot;panel&quot; header=&quot;Combo Box Example&quot;&gt;
&lt;h:panelGrid columns=&quot;2&quot;  columnClasses=&quot;label,value&quot; styleClass=&quot;grid&quot;&gt;
&lt;h:outputLabel for=&quot;cb&quot; value=&quot;comboItem&quot; /&gt;
&lt;h:selectOneMenu id=&quot;selectOneCb&quot; value=&quot;#{pageBean.model.modelid}&quot;&gt;
&lt;f:selectItem itemLabel=&quot;Select Model&quot; itemValue=&quot;&quot; /&gt;
&lt;f:selectItems value=&quot;#{pageBean.mlist}&quot; var=&quot;model&quot; itemLabel=&quot;#{model.modelvalue}&quot; itemValue=&quot;#{model.modelId}&quot;/&gt;
&lt;/h:selectOneMenu&gt;
&lt;/h:panelGrid&gt;
&lt;/p:panel&gt;
&lt;/fieldset&gt;
&lt;/h:form&gt;
&lt;/body&gt;
&lt;/html&gt;
[/sourcecode]

<span style="font-family:Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;line-height:19px;white-space:normal;font-size:13px;">Next lets define the backing page bean... For JSF 1.* this is ok :</span>

[sourcecode language="java"]
@Component(&quot;pageBean&quot;)
@Scope(&quot;request&quot;)
public class PageBean implements Serializable {
private model = new Model();
private ModelService modelService;
private Map&lt;String, String&gt; myModelValues = new HashMap&lt;String, String&gt;();
private List&lt;Model&gt; mList;
public PageBean(){
}

 @Autowired
public PageBean(ModelService modelService){
this. modelService = modelService;
        mList = modelService.findAll();
        for (Model m : mList) {
            myModelValues.put(m.getmyModelValue(), m.getmyModelId());
     }
}
public Map&lt;String, String&gt; getMyModelValues() {
return myModelValues;
    }
public void setMyModelValues(Map&lt;String, String&gt; myModelValues) {
this.myModelValues= myModelValues;
 }
public Model getModel() {
return model;
}
public void setModel(Model model) {
this.model = model;
}
}
[/sourcecode]

For JSF 2.* it is even better =&gt; You don't need  use a Map or Hash Map as the case may be above (thanks to <a href="http://cagataycivici.wordpress.com/">Çağatay Çivici</a> the <a href="http://www.primefaces.org">primefaces</a> lead for pointing this out ):

[sourcecode language="java"]
@Component(&quot;pageBean&quot;)
@Scope(&quot;request&quot;)
public class PageBean implements Serializable {
private model = new Model();
private ModelService modelService;
private List&lt;Model&gt; list;
public PageBean(){
}

@Autowired
public PageBean(ModelService modelService){
        this. modelService = modelService;
        list = modelService.findAll();
}

public List&lt;Model&gt; getList() {
	return list;
}
public Model getModel() {
return model;
}
public void setModel(Model model) {
this.model = model;
}
}

[/sourcecode]

Below is a service interface to define the the findAll method:

[sourcecode language="java"]
public interface ModelService {

public List&lt; Model&gt; findAll();
}
[/sourcecode]

Next the implementation for the Model Service Interface:

[sourcecode language="java"]

@Service(&quot;modelService&quot;)
public ModelServiceImpl implements ModelService  {
private ModelDAO modeldao;
@Autowired
public ModelServiceImpl(ModelDAO modeldao) {
        this. modeldao = modeldao;
    }
    @Transactional(readOnly = true)
    public List&lt;Model&gt; findAll() {
        return modeldao.findAll();
    }
}
[/sourcecode]

The Data Access object interface:

[sourcecode language="java"]
public interface ModelDAO {

public List&lt; Model&gt; findAll();
}
[/sourcecode]

The Data Access object implementation proper:

[sourcecode language="java"]
@Repository
public class ModelDAOImpl implements ModelDAO {

    @PersistenceContext
    protected EntityManager entityMgr;

    public EntityManager getEntityMgr() {
        return entityMgr;
    }

    public void setEntityMgr(EntityManager entityMgr) {
        this.entityMgr = entityMgr;
    }

    public List&lt;Model&gt; findAll() {
        Query query = entityMgr.createNamedQuery(&quot;Model.findAll&quot;);
        return query.getResultList();
    }
}
[/sourcecode]

Finally lets define the jpa model object:

[sourcecode language="java"]
@Entity
@Table(name = &quot;MODEL&quot;)
@NamedQuery(name = &quot;Model.findAll&quot;, query = &quot;SELECT m FROM Model m&quot;) // this query returns distinct values from the database.
public class Model implements Serializable {

    @Id
    @Basic(optional = false)
    @Column(name = &quot;MODEL_ID&quot;)
    private String modelId;
    @Basic(optional = false)
    @Column(name = &quot;MODEL_VALUE&quot;)
private String modelValue;
 public Model() {
    }
 public Model(String modelId, String modelValue) {
this.modelId = modelId;
this.model = modelValue;
}
 public String getModelId() {
        return modelId;
    }

    public void setModelId(String modelId) {
        this.modelId = modelId;
    }

    public String getModelValue() {
        return modelValue;
    }

    public void setModelValue(String modelValue) {
        this. modelValue = modelValue;
    }
    }
[/sourcecode]

The code above steps through it all... Ciao for now..]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>242</wp:post_id>
  <wp:post_date>2010-05-30 01:19:45</wp:post_date>
  <wp:post_date_gmt>2010-05-30 01:19:45</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>populating-jsf-combo-box-with-database-values</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[JAVA]]></category>
  <category domain="category" nicename="jsf"><![CDATA[JSF]]></category>
  <category domain="category" nicename="netbeans"><![CDATA[NETBEANS]]></category>
  <category domain="category" nicename="primefaces"><![CDATA[PRIMEFACES]]></category>
  <category domain="category" nicename="spring"><![CDATA[SPRING]]></category>
  <category domain="category" nicename="web-development"><![CDATA[WEB DEVELOPMENT]]></category>
  <category domain="category" nicename="wicket"><![CDATA[WICKET]]></category>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1275182386]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>70</wp:comment_id>
    <wp:comment_author><![CDATA[IKENNA OKPALA]]></wp:comment_author>
    <wp:comment_author_email>ikennaokpala@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://ikennaokpala.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>82.5.93.10</wp:comment_author_IP>
    <wp:comment_date>2010-06-24 09:48:04</wp:comment_date>
    <wp:comment_date_gmt>2010-06-24 09:48:04</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[@Miguel: this example is based on spring (annotations) and JPA...]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>69</wp:comment_parent>
    <wp:comment_user_id>9228897</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1277372887</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>65</wp:comment_id>
    <wp:comment_author><![CDATA[IKENNA OKPALA]]></wp:comment_author>
    <wp:comment_author_email>ikennaokpala@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://ikennaokpala.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>82.5.93.10</wp:comment_author_IP>
    <wp:comment_date>2010-06-21 07:52:33</wp:comment_date>
    <wp:comment_date_gmt>2010-06-21 07:52:33</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[@Miguel: there is already a JSF 2.0 facelets example within.. this blog post includes examples for JSF 1.0 and 2.0... @Autowired is simply  supplying the service and the DAO object @ runtime..]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>64</wp:comment_parent>
    <wp:comment_user_id>9228897</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1277106754</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>66</wp:comment_id>
    <wp:comment_author><![CDATA[Miguel]]></wp:comment_author>
    <wp:comment_author_email>miguel.nolasco@usmp.pe</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>201.240.131.146</wp:comment_author_IP>
    <wp:comment_date>2010-06-22 04:00:25</wp:comment_date>
    <wp:comment_date_gmt>2010-06-22 04:00:25</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I explain more you about what I want: In my first page that is my login I have a combo box, it has to be populated with data from database.
I copy all the code above, but my combo box is empty and i think it is because the method: findAll() from the PageBean class it is not being called.
I,as an example, create a variable: String name, and then in the default constructor put: name="Miguel". When i start my page, it paint the name, but when i put it in the second constructor: PageBean(ModelService ms), it doesn't.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1277179225</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>67</wp:comment_id>
    <wp:comment_author><![CDATA[IKENNA OKPALA]]></wp:comment_author>
    <wp:comment_author_email>ikennaokpala@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://ikennaokpala.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>82.5.93.10</wp:comment_author_IP>
    <wp:comment_date>2010-06-22 08:10:06</wp:comment_date>
    <wp:comment_date_gmt>2010-06-22 08:10:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[@miguel: Have you defined your spring application context and JPA persistence unit ?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>66</wp:comment_parent>
    <wp:comment_user_id>9228897</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1277194209</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>64</wp:comment_id>
    <wp:comment_author><![CDATA[Miguel]]></wp:comment_author>
    <wp:comment_author_email>miguel.nolasco@usmp.pe</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>190.43.82.123</wp:comment_author_IP>
    <wp:comment_date>2010-06-21 05:49:40</wp:comment_date>
    <wp:comment_date_gmt>2010-06-21 05:49:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi i saw this tutorial but i can't populate my combo box that `s in my index page. You are using spring anotations in the case of @Autowired, in the xhtml you are calling automatically this method i supposed, but how do i do it with just jsf 2?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1277106300</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>69</wp:comment_id>
    <wp:comment_author><![CDATA[Miguel]]></wp:comment_author>
    <wp:comment_author_email>miguel.nolasco@usmp.pe</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>201.240.60.6</wp:comment_author_IP>
    <wp:comment_date>2010-06-24 04:34:41</wp:comment_date>
    <wp:comment_date_gmt>2010-06-24 04:34:41</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I m using just jsf not spring and my Persistence unit is defined.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1277354082</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>152</wp:comment_id>
    <wp:comment_author><![CDATA[Resh]]></wp:comment_author>
    <wp:comment_author_email>reshma.puthusseri@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>122.181.131.76</wp:comment_author_IP>
    <wp:comment_date>2010-11-15 13:07:37</wp:comment_date>
    <wp:comment_date_gmt>2010-11-15 13:07:37</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hey pls cud anyone explain de code....]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1289826625</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>195</wp:comment_id>
    <wp:comment_author><![CDATA[matt]]></wp:comment_author>
    <wp:comment_author_email>matt@vt.edu</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>204.111.165.17</wp:comment_author_IP>
    <wp:comment_date>2011-02-21 04:38:52</wp:comment_date>
    <wp:comment_date_gmt>2011-02-21 04:38:52</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[This was excellent. Thank you.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1298263133.0297";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1298273844</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1298273844.4274";s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>196</wp:comment_id>
    <wp:comment_author><![CDATA[Arun]]></wp:comment_author>
    <wp:comment_author_email>arun@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>203.99.41.226</wp:comment_author_IP>
    <wp:comment_date>2011-02-22 09:55:28</wp:comment_date>
    <wp:comment_date_gmt>2011-02-22 09:55:28</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[This code wont work]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1298368636</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1298368636.8986";s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1298368528.8211";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>197</wp:comment_id>
    <wp:comment_author><![CDATA[IKENNA OKPALA]]></wp:comment_author>
    <wp:comment_author_email>ikennaokpala@googlemail.com</wp:comment_author_email>
    <wp:comment_author_url>http://ikennaokpala.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>62.133.3.83</wp:comment_author_IP>
    <wp:comment_date>2011-02-22 09:58:11</wp:comment_date>
    <wp:comment_date_gmt>2011-02-22 09:58:11</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[can you state what error or problem you face..]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>196</wp:comment_parent>
    <wp:comment_user_id>9228897</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1298368694</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1298368694.924";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>214</wp:comment_id>
    <wp:comment_author><![CDATA[Carlos]]></wp:comment_author>
    <wp:comment_author_email>carlospenate24@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>189.236.212.184</wp:comment_author_IP>
    <wp:comment_date>2011-04-26 18:38:39</wp:comment_date>
    <wp:comment_date_gmt>2011-04-26 18:38:39</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[excuse me. do you have this example with Jpa? thanks]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1303843119.883";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1304797936</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1304797936.7849";s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>215</wp:comment_id>
    <wp:comment_author><![CDATA[Carlos]]></wp:comment_author>
    <wp:comment_author_email>carlospenate24@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>189.236.212.184</wp:comment_author_IP>
    <wp:comment_date>2011-04-26 18:42:00</wp:comment_date>
    <wp:comment_date_gmt>2011-04-26 18:42:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[excuseme i try tell you is how can work this example without spring and just using jsf,jpa thanks. the annotations]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>214</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1303860230</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1303860230.9073";s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1303843320.9371";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>216</wp:comment_id>
    <wp:comment_author><![CDATA[IKENNA OKPALA]]></wp:comment_author>
    <wp:comment_author_email>ikennaokpala@googlemail.com</wp:comment_author_email>
    <wp:comment_author_url>http://ikennaokpala.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>82.5.93.10</wp:comment_author_IP>
    <wp:comment_date>2011-04-26 23:27:04</wp:comment_date>
    <wp:comment_date_gmt>2011-04-26 23:27:04</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Check out www.java2s.com.. probably you will find it there..]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>215</wp:comment_parent>
    <wp:comment_user_id>9228897</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1303860425</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1303860425.365";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1151</wp:comment_id>
    <wp:comment_author><![CDATA[Rahadhitya]]></wp:comment_author>
    <wp:comment_author_email>Adit_Gantenk@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>182.9.219.241</wp:comment_author_IP>
    <wp:comment_date>2012-12-09 14:15:31</wp:comment_date>
    <wp:comment_date_gmt>2012-12-09 14:15:31</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[sorry for my bad english.
Maybe can change title for this tutorial added with 'Spring'.
if use Native JSF2, must be construct first for ModelService and ModelDAO (ex: ModelDAO modelDAO = new ModelDAO(); )
and add empty constructor public ModelDAO() {};
hope it's helps from question above.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1355062531.664822101593017578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1355065877</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1355065878.2346630096435546875;s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Persisting many to many Relationship (JPA and Spring Strategy)</title>
  <link>http://ikennaokpala.wordpress.com/2010/06/18/persisting-jpa-many-to-many-relationship/</link>
  <pubDate>Fri, 18 Jun 2010 16:13:43 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=313</guid>
  <description></description>
  <content:encoded><![CDATA[This post is inspired by the <a title="Generate Entity class with Netbeans" href="http://wiki.netbeans.org/TS_65_Entity_Classes_From_Database" target="_blank">"Netbeans Generate Entity Class From Database" </a>feature which literally spits out vanilla JPA Entity classes for you while you have some coffee. For many to many relationship types Netbeans reads and generates an JPA Entity class for the join table and an extra class which holds the Primary key values for the two tables involved in a many to many relationship. This class is annotated with the @Embeddable JPA annotation. This i found very cool.

In this post i would like to show how to persist data from the respective tables to the join table.

The database create statement for the chosen table goes as follows:

<a href="http://ikennaokpala.files.wordpress.com/2010/06/m_m1.png"><img class="aligncenter size-medium wp-image-374" title="M_M" src="http://ikennaokpala.files.wordpress.com/2010/06/m_m1.png?w=300" alt="" width="300" height="163" /></a>

[sourcecode language="sql"]
create table Author (author_id int(10) not null auto_increment, name varchar(55) not null, email varchar(55) not null, primary key (author_id));
create table Book (book_id int(10) not null auto_increment, name varchar(55) not null, publisher varchar(55) not null, primary key (book_id));
create table Author_Book (author_id int(10) not null, book_id int(10) not null, primary key (author_id, book_id));
alter table Author_Book add index FKAuthor_Boo670752 (author_id), add constraint FKAuthor_Boo670752 foreign key (author_id) references Author (author_id);
alter table Author_Book add index FKAuthor_Boo981679 (book_id), add constraint FKAuthor_Boo981679 foreign key (book_id) references Book (book_id);
[/sourcecode]

Netbeans generates the following for you.. No skin pain :)

Class Author Entity

[sourcecode language="java"]
@Entity
@Table(name = &quot;Author&quot;)
@NamedQueries({
    @NamedQuery(name = &quot;Author.findAll&quot;, query = &quot;SELECT a FROM Author a&quot;),
    @NamedQuery(name = &quot;Author.findByAuthorId&quot;, query = &quot;SELECT a FROM Author a WHERE a.authorId = :authorId&quot;),
    @NamedQuery(name = &quot;Author.findByName&quot;, query = &quot;SELECT a FROM Author a WHERE a.name = :name&quot;),
    @NamedQuery(name = &quot;Author.findByEmail&quot;, query = &quot;SELECT a FROM Author a WHERE a.email = :email&quot;)})
public class Author implements Serializable {
    private static final long serialVersionUID = 1L;
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Basic(optional = false)
    @Column(name = &quot;author_id&quot;)
    private Integer authorId;
    @Basic(optional = false)
    @Column(name = &quot;name&quot;)
    private String name;
    @Basic(optional = false)
    @Column(name = &quot;email&quot;)
    private String email;

    public Author() {
    }

    public Author(Integer authorId) {
        this.authorId = authorId;
    }

    public Author(Integer authorId, String name, String email) {
        this.authorId = authorId;
        this.name = name;
        this.email = email;
    }

    public Integer getAuthorId() {
        return authorId;
    }

    public void setAuthorId(Integer authorId) {
        this.authorId = authorId;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (authorId != null ? authorId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Author)) {
            return false;
        }
        Author other = (Author) object;
        if ((this.authorId == null &amp;&amp; other.authorId != null) || (this.authorId != null &amp;&amp; !this.authorId.equals(other.authorId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return &quot;com.testing.jsf.Author[authorId=&quot; + authorId + &quot;]&quot;;
    }

}
[/sourcecode]

Class For Book Entity..

[sourcecode language="java"]
@Entity
@Table(name = &quot;Book&quot;)
@NamedQueries({
    @NamedQuery(name = &quot;Book.findAll&quot;, query = &quot;SELECT b FROM Book b&quot;),
    @NamedQuery(name = &quot;Book.findByBookId&quot;, query = &quot;SELECT b FROM Book b WHERE b.bookId = :bookId&quot;),
    @NamedQuery(name = &quot;Book.findByName&quot;, query = &quot;SELECT b FROM Book b WHERE b.name = :name&quot;),
    @NamedQuery(name = &quot;Book.findByPublisher&quot;, query = &quot;SELECT b FROM Book b WHERE b.publisher = :publisher&quot;)})
public class Book implements Serializable {
    private static final long serialVersionUID = 1L;
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Basic(optional = false)
    @Column(name = &quot;book_id&quot;)
    private Integer bookId;
    @Basic(optional = false)
    @Column(name = &quot;name&quot;)
    private String name;
    @Basic(optional = false)
    @Column(name = &quot;publisher&quot;)
    private String publisher;

    public Book() {
    }

    public Book(Integer bookId) {
        this.bookId = bookId;
    }

    public Book(Integer bookId, String name, String publisher) {
        this.bookId = bookId;
        this.name = name;
        this.publisher = publisher;
    }

    public Integer getBookId() {
        return bookId;
    }

    public void setBookId(Integer bookId) {
        this.bookId = bookId;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getPublisher() {
        return publisher;
    }

    public void setPublisher(String publisher) {
        this.publisher = publisher;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (bookId != null ? bookId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Book)) {
            return false;
        }
        Book other = (Book) object;
        if ((this.bookId == null &amp;&amp; other.bookId != null) || (this.bookId != null &amp;&amp; !this.bookId.equals(other.bookId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return &quot;com.testing.jsf.Book[bookId=&quot; + bookId + &quot;]&quot;;
    }

}
[/sourcecode]

Class for the join Table Author_Book

[sourcecode language="java"]
@Entity
@Table(name = &quot;Author_Book&quot;)
@NamedQueries({
    @NamedQuery(name = &quot;AuthorBook.findAll&quot;, query = &quot;SELECT a FROM AuthorBook a&quot;),
    @NamedQuery(name = &quot;AuthorBook.findByAuthorId&quot;, query = &quot;SELECT a FROM AuthorBook a WHERE a.authorBookPK.authorId = :authorId&quot;),
    @NamedQuery(name = &quot;AuthorBook.findByBookId&quot;, query = &quot;SELECT a FROM AuthorBook a WHERE a.authorBookPK.bookId = :bookId&quot;)})
public class AuthorBook implements Serializable {
    private static final long serialVersionUID = 1L;
    @EmbeddedId
    protected AuthorBookPK authorBookPK;

    public AuthorBook() {
    }

    public AuthorBook(AuthorBookPK authorBookPK) {
        this.authorBookPK = authorBookPK;
    }

    public AuthorBook(int authorId, int bookId) {
        this.authorBookPK = new AuthorBookPK(authorId, bookId);
    }

    public AuthorBookPK getAuthorBookPK() {
        return authorBookPK;
    }

    public void setAuthorBookPK(AuthorBookPK authorBookPK) {
        this.authorBookPK = authorBookPK;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (authorBookPK != null ? authorBookPK.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof AuthorBook)) {
            return false;
        }
        AuthorBook other = (AuthorBook) object;
        if ((this.authorBookPK == null &amp;&amp; other.authorBookPK != null) || (this.authorBookPK != null &amp;&amp; !this.authorBookPK.equals(other.authorBookPK))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return &quot;com.testing.jsf.AuthorBook[authorBookPK=&quot; + authorBookPK + &quot;]&quot;;
    }

}
[/sourcecode]

Below we have the class that holds the primary key values of the participating tables, also generated for you by netbeans:

[sourcecode language="java"]
@Embeddable
public class AuthorBookPK implements Serializable {
    @Basic(optional = false)
    @Column(name = &quot;author_id&quot;)
    private int authorId;
    @Basic(optional = false)
    @Column(name = &quot;book_id&quot;)
    private int bookId;

    public AuthorBookPK() {
    }

    public AuthorBookPK(int authorId, int bookId) {
        this.authorId = authorId;
        this.bookId = bookId;
    }

    public int getAuthorId() {
        return authorId;
    }

    public void setAuthorId(int authorId) {
        this.authorId = authorId;
    }

    public int getBookId() {
        return bookId;
    }

    public void setBookId(int bookId) {
        this.bookId = bookId;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (int) authorId;
        hash += (int) bookId;
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof AuthorBookPK)) {
            return false;
        }
        AuthorBookPK other = (AuthorBookPK) object;
        if (this.authorId != other.authorId) {
            return false;
        }
        if (this.bookId != other.bookId) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return &quot;com.testing.jsf.AuthorBookPK[authorId=&quot; + authorId + &quot;, bookId=&quot; + bookId + &quot;]&quot;;
    }

}
[/sourcecode]

At this point in order to persist, we require a component, service and repository (DAO) objects to do this.
For the view component, what ever is your web framework of choice, be it jsf, spring mvc, gwt or wicket, etc all you need to do is inject the service and call the respective method for saving that you have defined in your service object. the below is based on JSF.

Note: at this point you need to persist both sides of the divide at the same time (the join table entity in this case AuthorBook and anyone of the participating sides). For the AuthorBook Entity you instantiate the constructor for the join table entity class that accepts the ids of the participating table (for this example this is achieved by passing to the constructor the get method for retrieving the ids for the participating tables for the join table.) Like this

[sourcecode language="java"]authorBookService.save(new AuthorBook(book.getBookId(), author.getAuthorId())); [/sourcecode]

The code for this goes as follows:

[sourcecode language="java"]
@Component
@Scope(&quot;request&quot;)
public class ComponentBean implements Serializable {

    private AuthorBook authorbook = new AuthorBook();
    private Author author = new Author();
    private Book book = new Book();
    private AuthorService authorSerivce;
    private AuthorBookService authorbookSerivce;

    @Autowired
    public ComponentBean(AuthorService authorSerivce, AuthorBookService authorbookSerivce) {
        this.authorSerivce = authorSerivce;
        this.authorbookSerivce = authorbookSerivce;
    }

    public Author getAuthor() {
        return author;
    }

    public void setAuthor(Author author) {
        this.author = author;
    }
public void setAuthorbook(AuthorBook authorbook) {
        this.authorbook = authorbook;
    }
 public AuthorBook getAuthorbook() {
 return authorbook;
 }

 public void setBook(Book book) {
 this.book = book;
 }
public Book getBook() {
        return book;
    }
public void save(ActionEvent actionEvent) {
 authorService.save(author);
 authorBookService.save(new AuthorBook(book.getBookId(), author.getAuthorId())); // you instantiate the constructor for the join table entity  class and pass it the get method for retrieving the ids for the participating tables for the join table

 }
}
[/sourcecode]

Service interface to define the the save operation:

[sourcecode language="java"]
public interface AuthorBookService {

public void save(AuthorBook authorBook);
}
[/sourcecode]

Next the implementation for the AuthorBookService Service Interface:

[sourcecode language="java"]

@Service(&quot;authorBookService&quot;)
public AuthorBookServiceImpl implements AuthorBookService  {
private AuthorBookDAO authorbookdao;
@Autowired
public ModelServiceImpl(AuthorBookDAO authorbookdao) {
        this. authorbookdao = authorbookdao;
    }
    @Transactional
    public void save(AuthorBook authorBook) {
        authorbookdao.persist(AuthorBook authorBook);
    }
}
[/sourcecode]

The Data Access object interface:

[sourcecode language="java"]
public interface AuthorBookDAO {

public void persist(AuthorBook authorBook);
}
[/sourcecode]

The Data Access object implementation proper:

[sourcecode language="java"]
@Repository
public class AuthorBookDAOImpl implements ModelDAO {

    @PersistenceContext
    protected EntityManager entityMgr;

    public EntityManager getEntityMgr() {
        return entityMgr;
    }

    public void setEntityMgr(EntityManager entityMgr) {
        this.entityMgr = entityMgr;
    }

    public void persist(AuthorBook authorBook) {

      this.entityMgr.persist(authorBook)

    }
}
[/sourcecode]

Note: the service and repository for Author and Book will follow the same pattern. See the my previous blog post for more hints.. Ciao for now..]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>313</wp:post_id>
  <wp:post_date>2010-06-18 16:13:43</wp:post_date>
  <wp:post_date_gmt>2010-06-18 16:13:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>persisting-jpa-many-to-many-relationship</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="database"><![CDATA[DATABASE]]></category>
  <category domain="category" nicename="java"><![CDATA[JAVA]]></category>
  <category domain="category" nicename="jsf"><![CDATA[JSF]]></category>
  <category domain="category" nicename="netbeans"><![CDATA[NETBEANS]]></category>
  <category domain="category" nicename="primefaces"><![CDATA[PRIMEFACES]]></category>
  <category domain="category" nicename="spring"><![CDATA[SPRING]]></category>
  <category domain="category" nicename="wicket"><![CDATA[WICKET]]></category>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1276877627]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1276877626]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>290</wp:comment_id>
    <wp:comment_author><![CDATA[mediterran81]]></wp:comment_author>
    <wp:comment_author_email>hanynowsky@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://hanynowsky.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>162.38.121.175</wp:comment_author_IP>
    <wp:comment_date>2012-02-13 18:27:57</wp:comment_date>
    <wp:comment_date_gmt>2012-02-13 18:27:57</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I am using Netbeans 7.1 but same thing happened for 6.9 and 7.0.
Netbeans detects the join table and related tables but generates only the related tables. Using MySQL as Database Vendor (InnoDB as engine), JSF 2.0, and EclipseLink (JPA 2.0) as Persistence provider. I do not use Spring.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>289</wp:comment_parent>
    <wp:comment_user_id>23847444</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1329157679</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1329157679.8373";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:12:"mediterran81";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>288</wp:comment_id>
    <wp:comment_author><![CDATA[mediterran81]]></wp:comment_author>
    <wp:comment_author_email>hanynowsky@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://hanynowsky.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>162.38.121.175</wp:comment_author_IP>
    <wp:comment_date>2012-02-13 18:13:12</wp:comment_date>
    <wp:comment_date_gmt>2012-02-13 18:13:12</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Netbeans does not generate the class for the join table. How come did you manage to do it?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>23847444</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1329156792.6429";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:12:"mediterran81";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1329156990</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1329156991.0528";s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>289</wp:comment_id>
    <wp:comment_author><![CDATA[IKENNA OKPALA]]></wp:comment_author>
    <wp:comment_author_email>ikennaokpala@googlemail.com</wp:comment_author_email>
    <wp:comment_author_url>http://ikennaokpala.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>64.14.166.4</wp:comment_author_IP>
    <wp:comment_date>2012-02-13 18:18:32</wp:comment_date>
    <wp:comment_date_gmt>2012-02-13 18:18:32</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[What version of netbeans are you using ? Follow the link in the <a href="http://wiki.netbeans.org/TS_65_Entity_Classes_From_Database" rel="nofollow">wiki</a> for details..]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>288</wp:comment_parent>
    <wp:comment_user_id>9228897</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1329157113</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1329157113.5345";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>291</wp:comment_id>
    <wp:comment_author><![CDATA[mediterran81]]></wp:comment_author>
    <wp:comment_author_email>hanynowsky@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://hanynowsky.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>162.38.121.175</wp:comment_author_IP>
    <wp:comment_date>2012-02-13 18:51:47</wp:comment_date>
    <wp:comment_date_gmt>2012-02-13 18:51:47</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Same as here: http://netbeans.org/kb/docs/web/jsf20-crud.html#editEntity]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>23847444</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1329159108</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1329159108.2214";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:12:"mediterran81";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>292</wp:comment_id>
    <wp:comment_author><![CDATA[IKENNA OKPALA]]></wp:comment_author>
    <wp:comment_author_email>ikennaokpala@googlemail.com</wp:comment_author_email>
    <wp:comment_author_url>http://ikennaokpala.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>82.5.93.10</wp:comment_author_IP>
    <wp:comment_date>2012-02-13 20:45:20</wp:comment_date>
    <wp:comment_date_gmt>2012-02-13 20:45:20</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Wow.. i will find time to replicate your scenario.. but to be honest i no longer trade on these lines..]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>291</wp:comment_parent>
    <wp:comment_user_id>9228897</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1329165926</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1329165927.0059";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>293</wp:comment_id>
    <wp:comment_author><![CDATA[mediterran81]]></wp:comment_author>
    <wp:comment_author_email>hanynowsky@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/mediterran81</wp:comment_author_url>
    <wp:comment_author_IP>195.83.178.120</wp:comment_author_IP>
    <wp:comment_date>2012-02-13 21:46:49</wp:comment_date>
    <wp:comment_date_gmt>2012-02-13 21:46:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I hope you could figure it out as you seem to be more experienced than me in this matter! Thank you in advance. I'd be looking forward to it.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1329169611</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1329169611.6344";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>188</wp:comment_id>
    <wp:comment_author><![CDATA[cddthd]]></wp:comment_author>
    <wp:comment_author_email>cddthd@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>222.253.85.201</wp:comment_author_IP>
    <wp:comment_date>2011-01-04 11:21:45</wp:comment_date>
    <wp:comment_date_gmt>2011-01-04 11:21:45</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Great tutorial!
I am doing same many-to-many relationship but trouble in project about Hibernate intergrate Spring.
I posted at <a> http://forum.springsource.org/showthread.php?t=100579 </a>
Can I help me solution?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1294141526</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1294141526.3923";s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1294140105.8239";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>189</wp:comment_id>
    <wp:comment_author><![CDATA[cddthd]]></wp:comment_author>
    <wp:comment_author_email>cddthd@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>222.253.85.201</wp:comment_author_IP>
    <wp:comment_date>2011-01-04 11:25:34</wp:comment_date>
    <wp:comment_date_gmt>2011-01-04 11:25:34</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I just see my previous post.I got mistake "Can I help me solution?" Can you help me solution?I search a lot of article but I cannot find solution.
Sorry for my mistake in previous post]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1294141516</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1294141516.8957";s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1294140334.1621";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>225</wp:comment_id>
    <wp:comment_author><![CDATA[luis]]></wp:comment_author>
    <wp:comment_author_email>luis_castro@animotion.com.mx</wp:comment_author_email>
    <wp:comment_author_url>http://www.animotion.com.mx</wp:comment_author_url>
    <wp:comment_author_IP>189.214.9.106</wp:comment_author_IP>
    <wp:comment_date>2011-09-03 18:00:18</wp:comment_date>
    <wp:comment_date_gmt>2011-09-03 18:00:18</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[i can see you xml confing for spring]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1315073040</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1315073040.758";s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1315072818.9335";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>M_M</title>
  <link>http://ikennaokpala.wordpress.com/2010/06/18/persisting-jpa-many-to-many-relationship/m_m/#main</link>
  <pubDate>Mon, 05 Jul 2010 15:44:22 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.files.wordpress.com/2010/06/m_m1.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>374</wp:post_id>
  <wp:post_date>2010-07-05 15:44:22</wp:post_date>
  <wp:post_date_gmt>2010-07-05 15:44:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>m_m</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>313</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://ikennaokpala.files.wordpress.com/2010/06/m_m1.png</wp:attachment_url>
</item>
<item>
  <title>Monadologie: A Scala talk on continuations and monads by Christopher League.</title>
  <link>http://ikennaokpala.wordpress.com/2010/07/14/scala-talk-on-continuations-and-monads-2/</link>
  <pubDate>Wed, 14 Jul 2010 14:15:23 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=389</guid>
  <description></description>
  <content:encoded><![CDATA[Great talk by <a href="http://contrapunctus.net/">Christopher League</a>. In this <a href="http://vimeo.com/13304075">video</a>, Chris talks on Continuations and Monads as functional programming design patterns which offer Control and Data flow respectively..

[vimeo http://vimeo.com/13304075 w=650&amp;h=500]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>389</wp:post_id>
  <wp:post_date>2010-07-14 14:15:23</wp:post_date>
  <wp:post_date_gmt>2010-07-14 14:15:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>scala-talk-on-continuations-and-monads-2</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="functional-programming"><![CDATA[FUNCTIONAL PROGRAMMING]]></category>
  <category domain="category" nicename="scala"><![CDATA[SCALA]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1279116924]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1279116924]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Setting Up SBT (Simple Build Tool) on Unix For Building Scala Based Project.</title>
  <link>http://ikennaokpala.wordpress.com/2010/07/16/setting-up-sbt-simple-build-tool-on-unix-for-scala-development/</link>
  <pubDate>Fri, 16 Jul 2010 23:51:26 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=397</guid>
  <description></description>
  <content:encoded><![CDATA[One of the problems that plagued the Java development space prior to the advent of tools like ANT and Maven, was the lack of automated build tools.

Previously, Java developers had to either write thier own build script which knew no unformity at all or do javac *.java (did this really work.. hmm).

But today setting up a Java project is gradually becoming a trivial task especially with tools like Maven and SBT.

SBT is a build tool for Scala based project. SBT integrates very well with Maven.

The feature of SBT, i like is the continuous compilation (~compile) this is very useful especially when testing and/or debugging.

Kudos to the hands behind SBT and <a href="http://maciejmatyjas.com/">Maciej Matyjas</a> for recommending SBT to me..  you guys rock. period !

Alright, lets delve in and set up an SBT build environment.

Firstly, you need to download the latest jar of SBT <a href="http://code.google.com/p/simple-build-tool/downloads/list">here</a>

Next create the bin folder and move the SBT jar to the bin folder.

[sourcecode language="bash"]
mkdir ~/bin
mv ~/Downloads/sbt-launcher-0.7.4.jar ~/bin
[/sourcecode]

Next create the SBT file.

[sourcecode language="bash"]
echo &quot;java -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=256m -Xmx512M -Xss2M -jar \`dirname \$0\`/sbt-launcher-0.7.4.jar \&quot;\$@\&quot;&quot; | sudo tee ~/bin/sbt
[/sourcecode]

I prefer this way of using "dirname" rather that using a relative or absolute path to the SBT jar file.

After this is done you may need to  change the read write mode for the SBT file.

[sourcecode language="bash"]
chmod u+x ~/bin/sbt
[/sourcecode]

This allows you to launch SBT file to run or execute.

Finally, set environment path for SBT, this file name varies across flavours of Unix. I use a Mac OSX 10. 6 and i use .profile or .bash_profile to set my environment path.

For Debian this is .bashrc. Find out the file for setting environment variables for your flavour of Unix.

[sourcecode language="bash"]
emacs .profile                              #(or nano .profile or any editor of your choice.. only have it in mind that these type of files are hidden system files)
export PATH=$PATH:~/bin                     #(copy and paste this in to .profile)
source .profile
[/sourcecode]

This allows you to launch SBT from any directory by typing sbt at the terminal.

Type sbt on terminal to enjoy the it's euphoria.

For more on SBT <a href="http://code.google.com/p/simple-build-tool/">here</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>397</wp:post_id>
  <wp:post_date>2010-07-16 23:51:26</wp:post_date>
  <wp:post_date_gmt>2010-07-16 23:51:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>setting-up-sbt-simple-build-tool-on-unix-for-scala-development</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="jvm"><![CDATA[JVM]]></category>
  <category domain="category" nicename="mac"><![CDATA[MAC]]></category>
  <category domain="category" nicename="maven"><![CDATA[MAVEN]]></category>
  <category domain="category" nicename="sbt"><![CDATA[SBT]]></category>
  <category domain="category" nicename="scala"><![CDATA[SCALA]]></category>
  <category domain="category" nicename="unix"><![CDATA[UNIX]]></category>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1279324286]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1279324286]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>85</wp:comment_id>
    <wp:comment_author><![CDATA[John Stevenson]]></wp:comment_author>
    <wp:comment_author_email>john@jr0cket.com</wp:comment_author_email>
    <wp:comment_author_url>http://jr0cket.com</wp:comment_author_url>
    <wp:comment_author_IP>78.86.28.109</wp:comment_author_IP>
    <wp:comment_date>2010-07-19 13:08:46</wp:comment_date>
    <wp:comment_date_gmt>2010-07-19 13:08:46</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Nice example of setting up SBT.  Are you going to write a follow-on an article about using it on a project, so we can see how you have used SBT to compile and run tests when changes are saved to the project?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1279548643</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>86</wp:comment_id>
    <wp:comment_author><![CDATA[IKENNA OKPALA]]></wp:comment_author>
    <wp:comment_author_email>ikennaokpala@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://ikennaokpala.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>213.208.100.103</wp:comment_author_IP>
    <wp:comment_date>2010-07-19 14:18:14</wp:comment_date>
    <wp:comment_date_gmt>2010-07-19 14:18:14</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi John, 
I never considered doing that though. All i want to show is the basic steps for setting SBT. 

For more on that there is a another blog post <a href="http://schahzad.wordpress.com/2010/07/12/scala-lift-simple-build-tool-sbt-cheat-sheet/" rel="nofollow">here</a> that takes it further.

Cheers.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>85</wp:comment_parent>
    <wp:comment_user_id>9228897</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1279549097</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Automatic Re-Start Script for Tomcat</title>
  <link>http://ikennaokpala.wordpress.com/2010/08/15/automatic-re-start-script-for-tomcat/</link>
  <pubDate>Sun, 15 Aug 2010 05:02:30 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=483</guid>
  <description></description>
  <content:encoded><![CDATA[I noticed only recently that my remote tomcat instance has been frequently shutting down on it's own. This turned out to be very annoying, having to restart tomcat manually almost twice a day.

I queried the web and consulted other resources to seek for possible solutions on how i could detect why my remote tomcat instance goes down and also to re-start it almost immediate.

I learnt from several articles, documentations on the web and also got useful tips from friends on how to solve this problem. The steps i applied to solving this problem i have included in this blog post and  they are as follows:

First, create a folder and i named it servchk (or you give it any meaningful name you want). I created this folder under root (top-most) directory "/". This folder contains a file which i named chksrv (ie services checker ).

[sourcecode language="bash"]
/servchk/chksrv
mkdir servchk
cd servchk
nano chksrv

[/sourcecode]


Copy and paste the following to chksrv:

[sourcecode language="bash"]
# !/bin/bash
# Re-start Service - Automatically restart tomcat when it goes bonkers (down)

/bin/netstat -ln | /bin/grep &quot;:8080 &quot; | /usr/bin/wc -l | /bin/awk '{if ($1 == 0) system(&quot;/sbin/service tomcat6 start&quot;) }'
[/sourcecode]

Control + O and hit the Return key or enter to save the file and then Control + X to exit nano. (you may choose to use any editor of your choice).

Next i set the permissions for the file. Do this while logged in as root (very important)

[sourcecode language="bash"]
chmod 700 /servchk/chksrv

[/sourcecode]

Following the above step, is setting up a crontab. The crontab verifies if the tomcat instance is still running, and if the tomcat instance is down it will restart it.

[sourcecode language="bash"]

crontab -l &gt; mycrontab
echo '* * * * * /servchk/chksrv &gt; /dev/null 2&gt;&amp;1' &gt;&gt; mycrontab
crontab mycrontab

#  the above line  will add the following to your crontab:

#  type:
crontab -l
#  to verify the contents of your crontabs list.
[/sourcecode]



Test the crontab is working by manually stopping tomcat.

[sourcecode language="bash"]
service tomcat6 stop
[/sourcecode]


Wait for a few seconds to a minute for tomcat to start again.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>483</wp:post_id>
  <wp:post_date>2010-08-15 05:02:30</wp:post_date>
  <wp:post_date_gmt>2010-08-15 05:02:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>automatic-re-start-script-for-tomcat</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bash"><![CDATA[BASH]]></category>
  <category domain="category" nicename="java"><![CDATA[JAVA]]></category>
  <category domain="category" nicename="jvm"><![CDATA[JVM]]></category>
  <category domain="category" nicename="tomcat"><![CDATA[TOMCAT]]></category>
  <category domain="category" nicename="unix"><![CDATA[UNIX]]></category>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1281848554]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1281848552]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_yup</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>SBT and Netbeans Terminal Emulator..</title>
  <link>http://ikennaokpala.wordpress.com/2010/09/11/sbt-on-netbeans/</link>
  <pubDate>Sat, 11 Sep 2010 00:57:43 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=631</guid>
  <description></description>
  <content:encoded><![CDATA[One of the new features that came bundled with <a href="http://netbeans.org/">Netbeans</a> 6.9 is the terminal emulator. This provides a shell scripting interface for <a href="http://netbeans.org/">Netbeans</a> users. This has been very useful especially with running build tools like maven from the terminal emulator without having to navigate out of the IDE.

To access this feature, go to 'Window &gt; Output &gt; Terminal. For more on the <a href="http://netbeans.org/">Netbeans</a> Terminal Emulator click <a href="http://wiki.netbeans.org/TerminalEmulator">here</a>
<a href="http://ikennaokpala.files.wordpress.com/2010/09/screen-shot-2010-09-11-at-02-55-37.png"><img src="http://ikennaokpala.files.wordpress.com/2010/09/screen-shot-2010-09-11-at-02-55-37.png?w=300" alt="" title="netbeans terminal emulator 2010-09-11 at 02.55.37" width="700" height="500" class="aligncenter size-medium wp-image-660" /></a>

<a href="http://code.google.com/p/simple-build-tool/">SBT</a> (simple build tool) appears to be one of the raves of the moment, it gradually has grown on me and i am using it in my current project which obviously is Scala based.

At the moment i do not know of any plugin for <a href="http://code.google.com/p/simple-build-tool/">SBT</a> on the <a href="http://netbeans.org/">Netbeans</a> platform. 

I Initially assumed that having successfully installed <a href="http://code.google.com/p/simple-build-tool/">SBT</a> on my computer that it would be easily accessible from the terminal emulator. But 'Lo and Behold' the <a href="http://netbeans.org/">Netbeans</a> terminal emulator was not aware of <a href="http://code.google.com/p/simple-build-tool/">SBT</a>'s location.

In order to get <a href="http://code.google.com/p/simple-build-tool/">SBT</a> running in the terminal emulator the following commands would be appropriate, especially for MAC or Unix based PCs and already have <a href="http://code.google.com/p/simple-build-tool/">SBT</a> running. If you don't have <a href="http://code.google.com/p/simple-build-tool/">SBT</a> running already click <a href="http://code.google.com/p/simple-build-tool/wiki/Setup">here</a> to set it up.



[sourcecode language="bash"]


sudo echo &quot;java -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=256m -Xmx512M -Xss2M -jar /include/here/path/to/the/sbt-launcher.jar \&quot;\$@\&quot;&quot; | sudo tee /usr/bin/sbt #please don't forget to change the /include/here/path/to/the/sbt-launcher.jar to the relevant path on your system that points to the sbt launcher jar file.

whoami # this would tell you the current user if you already know the name skip this

cd /usr/bin # navigate to the /usr/bin folder

sudo chown username sbt # change owner to the required username on sbt. Also remember to change the username here  to the relevant one on you want to use
or alternatively

sudo chmod u+x sbt # this will give the required operation permission to the user

[/sourcecode]

After this has been done navigate back to your <a href="http://netbeans.org/">Netbeans</a> IDE's terminal emulator and type sbt to enjoy it's goodness within the <a href="http://netbeans.org/">Netbeans</a> IDE.

CIAO for now..



 

]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>631</wp:post_id>
  <wp:post_date>2010-09-11 00:57:43</wp:post_date>
  <wp:post_date_gmt>2010-09-11 00:57:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>sbt-on-netbeans</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="netbeans"><![CDATA[NETBEANS]]></category>
  <category domain="category" nicename="sbt"><![CDATA[SBT]]></category>
  <category domain="category" nicename="scala"><![CDATA[SCALA]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1284166664]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[sbt-on-netbeans-terminal-emulator]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1284166666]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>113</wp:comment_id>
    <wp:comment_author><![CDATA[John Stevenson]]></wp:comment_author>
    <wp:comment_author_email>john@jr0cket.com</wp:comment_author_email>
    <wp:comment_author_url>http://jr0cket.com</wp:comment_author_url>
    <wp:comment_author_IP>78.86.28.109</wp:comment_author_IP>
    <wp:comment_date>2010-09-11 11:18:11</wp:comment_date>
    <wp:comment_date_gmt>2010-09-11 11:18:11</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[So you need to add SBT to the Unix / OSX path, that I understand and is the same for any application on those platforms.

Is there any reason you need the following options on the java command?  Can you elaborate on what they do for SBT / Netbeans?

java -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=256m -Xmx512M -Xss2M

Thank you.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1284203892</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>114</wp:comment_id>
    <wp:comment_author><![CDATA[John Stevenson]]></wp:comment_author>
    <wp:comment_author_email>john@jr0cket.com</wp:comment_author_email>
    <wp:comment_author_url>http://jr0cket.com</wp:comment_author_url>
    <wp:comment_author_IP>78.86.28.109</wp:comment_author_IP>
    <wp:comment_date>2010-09-11 11:29:13</wp:comment_date>
    <wp:comment_date_gmt>2010-09-11 11:29:13</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[In terms of your command line script, I would not recommend changing the ownership of files under the /usr/bin folder and I also would advise against adding your own files to /usr/bin as that is an area of the file space managed by the operating system and package manager.

If your are setting up for multiple users, you should use the folder /usr/local/bin for your sbt script file.  Change the access permissions on the sbt script file by using sudo chmod +x /usr/local/sbt

If it is just for one user you can just create a ~/bin folder and place your sbt script file in there, changing the access permission using chmod u+x ~/bin/sbt

I find the following line a bit too geeky a way to saying create a file with the following java command in it:
sudo echo "java -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=256m -Xmx512M -Xss2M -jar /include/here/path/to/the/sbt-launcher.jar \"\$@\"" | sudo tee /usr/bin/sbt

If you were doing this as part of an install script, then I would understand its usage, but as it is it seems a little unnecessary and makes your instructions more complicated to follow.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1284204554</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>115</wp:comment_id>
    <wp:comment_author><![CDATA[John Stevenson]]></wp:comment_author>
    <wp:comment_author_email>john@jr0cket.com</wp:comment_author_email>
    <wp:comment_author_url>http://jr0cket.com</wp:comment_author_url>
    <wp:comment_author_IP>78.86.28.109</wp:comment_author_IP>
    <wp:comment_date>2010-09-11 11:29:20</wp:comment_date>
    <wp:comment_date_gmt>2010-09-11 11:29:20</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Have you had any conflicts between the Netbeans compile on save feature and SBT?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1284204561</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>116</wp:comment_id>
    <wp:comment_author><![CDATA[IKENNA OKPALA]]></wp:comment_author>
    <wp:comment_author_email>ikennaokpala@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://ikennaokpala.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>178.109.242.54</wp:comment_author_IP>
    <wp:comment_date>2010-09-11 12:24:30</wp:comment_date>
    <wp:comment_date_gmt>2010-09-11 12:24:30</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi john,

i have not looked into that feature yet.. 

Thanks for your review of the post.

This is an idea that came to me while trying out SBT on Netbeans terminal emulator.

Until last night I have been using ENSIME Emacs mode for Scala.

Cheers,]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>9228897</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1284207873</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>netbeans terminal emulator 2010-09-11 at 02.55.37</title>
  <link>http://ikennaokpala.wordpress.com/2010/09/11/sbt-on-netbeans/screen-shot-2010-09-11-at-02-55-37/#main</link>
  <pubDate>Sat, 11 Sep 2010 01:56:21 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.files.wordpress.com/2010/09/screen-shot-2010-09-11-at-02-55-37.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>660</wp:post_id>
  <wp:post_date>2010-09-11 01:56:21</wp:post_date>
  <wp:post_date_gmt>2010-09-11 01:56:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-shot-2010-09-11-at-02-55-37</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>631</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://ikennaokpala.files.wordpress.com/2010/09/screen-shot-2010-09-11-at-02-55-37.png</wp:attachment_url>
</item>
<item>
  <title>Dispatch</title>
  <link>http://ikennaokpala.wordpress.com/?p=704</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=704</guid>
  <description></description>
  <content:encoded><![CDATA[Normally, Scala symbols can be thought of as a unique identifier which will always be the same. Every symbol that is lexi-graphically identical refers to the exact same memory space. There's nothing else that's special about them from Scala's point of view.

However, Dispatch-Json pimps out symbols making them JSON property extractors. To see the code which is responsible for the pimping, check out the SymOp class and the rest of the JsonExtractor.scala code.

Let's write some code which solves the problem you are looking at and then analyze what's going on:

trait ExtUserProps extends UserProps with Js {
  val friends_count = 'friends_count ! num 
}
object ExtUser extends ExtUserProps with Js

val good_stuff = for {
  item # (list ! obj)
What this method is defining is a Dispatch Handler which converts the Response object into a JsonResponse object, and then parses the response into a list of JSON Objects. That's quite a bit going on in one line. You can see the definition for the operand &gt;# in the JsHttp.scala file in the http+json Dispatch module. Dispatch defines lots of Handlers that do a conversion behind the scenes into different types of data which you can then pass to block to work with. Check out the StdOut Walkthrough and the Common Tasks pages for some of the handlers but you'll need to dive into the various modules source code or Scaladoc to see what else is there.

All of this is a long way to get to what you want, which I believe is essentially this:

val statuses = http(Status(screenName).timeline)
statuses.map(Status.text).foreach(println _)
Only instead of doing a println, you can push it out to your web page in whatever way you want. Check out the Status object for some of the various pre-built extractors to pull information out of the status response.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------





Here's another way to use Dispatch HTTP with Lift-JSON. This example fetches JSON document from google, parses all "titles" from it and prints them.

import dispatch._
import net.liftweb.json.JsonParser
import net.liftweb.json.JsonAST._

object App extends Application {
  val http = new Http
  val req = :/("www.google.com") / "base" / "feeds" / "snippets" &lt; "scala", "alt" -&gt; "json")
  val json = http(req &gt;- JsonParser.parse)

  val titles = for {
    JField("title", title) &lt;- json
    JField(&quot;$t&quot;, JString(name)) &lt;- title
  } yield name

  titles.foreach(println)
}
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>704</wp:post_id>
  <wp:post_date>2010-09-30 19:26:44</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name></wp:post_name>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Converting Java List to Scala List</title>
  <link>http://ikennaokpala.wordpress.com/2011/01/03/converting-java-list-to-scala-list/</link>
  <pubDate>Mon, 03 Jan 2011 03:31:05 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=725</guid>
  <description></description>
  <content:encoded><![CDATA[I am currently playing around with some legacy Java libraries and at some point i needed to convert a Java List to a Scala List, because, i have come to prefer using Scala's very rich set of functions like filter(), find(), foreach(), foldLeft(), flatMap() and map(), which are very handy and concise. :)

As you may know already or according to the documentations,  <a href="http://download.oracle.com/javase/1.4.2/docs/api/java/util/List.html">Java's List is an interface</a> which is conceptual or abstract in nature, while Scala's List is an implementation of a sequence of elements that follow insertion order and do allow random access to elements within.

I mostly have used Java's ArrayList, as they are mutable via the add(e) method which alters the existing contents of the list and has constant-time random access.

Scala's List is an explicit implementation of a sequence. It is imported by default into scope as an immutable linked list i.e.  it's state cannot be modified after it has been instantiated and operations requiring random access take linear time.

Based on the above Scala's List is not similar to Java's List or ArrayList and as such can't serve as a replacement for them.

After a little while on the REPL and going through documentations:

[sourcecode language="bash"]

scala&gt; var jList = new java.util.ArrayList[String]()
jList: java.util.ArrayList[String] = []

scala&gt; jList.add(&quot;Ikenna&quot;); jList.add(&quot;okpala&quot;); jList.add(&quot;kengimel&quot;); jList.add(&quot;Scala&quot;); jList.add(&quot;Java&quot;)

scala&gt; println(jList)
[Ikenna, okpala, kengimel, Scala, Java]

scala&gt; val slist = scala.collection.JavaConversions.asBuffer(jList)
slist: scala.collection.mutable.Buffer[String] = Buffer(Ikenna, okpala, kengimel, Scala, Java)

scala&gt; println(slist.toList) 

List(Ikenna, okpala, kengimel, Scala, Java)            #However, i noticed that this implicitly converts the Java List  to a mutable buffer, as you may have noticed on line 12, i used the toList function to convert it to a Scala List. 

scala&gt; println(jList)
[Ikenna, okpala, kengimel, Scala, Java]


[/sourcecode]
One of Scala's goal is to make code as concise and functional as possible. Included in Scala 2.8 library are already baked Java to Scala conversions.
These implicit functions are found in the scala.collection.JavaConversions package to assist the conversion of Java's List to Scala.List. All that is required is importing this package into scope and you are already benefiting from these silent actors. 

[sourcecode language="scala"]
import scala.collection.JavaConversions._
[/sourcecode]
Also in this mode, i observed that this converts the Java List  to a Buffer (i.e. scala.collection.mutable.Buffer) that extends Seq[A], as you may have noticed on line 12 above, i used the toList function to convert it to a proper Scala List, this may be an option that you may consider in your program.

Prior to Scala 2.8 version(2.7.*) this was achieved by an implicit conversion: 

[sourcecode language="scala"]

implicit def toScalaListFromJavaList[T](jList: java.util.List[T]) : Seq[T] =
new BufferWrapper[T]() { def underlying = jList }

[/sourcecode]

There appears to be more grounds to cover, feel free to provide your views on this post. 

CIAO for now.

]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>725</wp:post_id>
  <wp:post_date>2011-01-03 03:31:05</wp:post_date>
  <wp:post_date_gmt>2011-01-03 03:31:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>converting-java-list-to-scala-list</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="scala"><![CDATA[SCALA]]></category>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1294025470]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1294025472]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Lift Web Framework</title>
  <link>http://ikennaokpala.wordpress.com/2010/03/10/lift/</link>
  <pubDate>Wed, 10 Mar 2010 23:45:51 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=799</guid>
  <description></description>
  <content:encoded><![CDATA[Below is a lightning talk i gave at skills matter on the Lift web framework. The lift web framework is an awesome framework with a productive sensation. If you are a Weby (or have done some JQuery) guy check the <a href="http://simply.liftweb.net/index-7.10.html">css selectors</a> and many more of its <a href="http://seventhings.liftweb.net/">features</a> that make it a good choice for web development..

Want to know more about lift visit<a href="http://liftweb.net"> liftweb.net</a> or join the <a href="http://groups.google.com/group/liftweb?pli=1">mailing list</a>.

For training <a href="http://skillsmatter.com/course/ajax-ria/david-pollak-lift-basics"> skills matter </a> offer the only none-online <a href="http://skillsmatter.com/course/ajax-ria/david-pollak-lift-basics">lift course</a> on the planet in their nice and cozy offices in london. This course is put together by none other than the Creator and BDFL of Lift land (David Pollak).  

NB: Though i am not actively using it at the time of my writing, but had the opportunity of exploring it during my degree dissertation. 


Anyways Enjoy.

[slideshare id=5660615&amp;doc=lift-101103182651-phpapp02] [vimeo http://vimeo.com/20899596 w=650&amp;h=500]




]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>799</wp:post_id>
  <wp:post_date>2010-03-10 23:45:51</wp:post_date>
  <wp:post_date_gmt>2010-03-10 23:45:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>lift</wp:post_name>
  <wp:status>private</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[JAVA]]></category>
  <category domain="category" nicename="jvm"><![CDATA[JVM]]></category>
  <category domain="category" nicename="lift"><![CDATA[LIFT]]></category>
  <category domain="category" nicename="scala"><![CDATA[SCALA]]></category>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1299800751]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1299800753]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Emacs (starter-kit and emacs for Mac OSX), Scala and Ensime Configuration steps </title>
  <link>http://ikennaokpala.wordpress.com/2011/03/18/emacs-scala-and-ensime-configuration-steps/</link>
  <pubDate>Fri, 18 Mar 2011 11:36:27 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=829</guid>
  <description></description>
  <content:encoded><![CDATA[<em>(Before starting with this i think you may want to delete the~/.emac, ~/.emacs.d or ~/.emacs~ files from you computer, if they already exit. this is just my view.. reason being that the settings in the .emacs file.. i noticed overshadowed the settings in the emacs start-kit version.)</em>

NB: Note that, this is <a href="https://github.com/kengimel/emacs-dotfiles">my cloned copy</a> and is specific to my system and user name.

This post aims to guide you through the steps and get you setup based on <a href="https://github.com/kengimel/emacs-dotfiles">my cloned copy</a>. 

To get cracking with this, type the following on the terminal: clone this git repo with the following:
[sourcecode language="bash"]
git clone git@github.com:kengimel/emacs-dotfiles.git .emacs.d
ln -s .emacs.d emacs.d
cd emacs.d
[/sourcecode]
next rename ikenna.el to your username on a mac that will be you shortname: the command below will give you the current username
[sourcecode language="bash"]
 whoami    # this will return to tell you your current username
 mv kengimel.el yourusername.el
[/sourcecode]
next rename kengimel.el to you system name, this can be gotten by typing:
[sourcecode language="bash"]
 hostname                # this will return to tell you your current hostname / system name
 mv ikenna.el yourhostname.el
[/sourcecode]
Sometimes the hostname may appear verbose use this command to rename it, if you rename it don't to repeat the step above:
[sourcecode language="bash"]
 scutil --set HostName yournewhostname
[/sourcecode]
NB: you have to restart your machine for this to take effect

Next:
[sourcecode language="bash"]
 git submodule init 
 git submodule update 
[/sourcecode]

The commands above will update the ensime submodule for the project: 

Next download and install <a href="http://emacsformacosx.com/">emacs for Mac OSX</a>.
[sourcecode language="bash"]
 cd vendor/ENSIME 
 sbt update               # this may take a little while to come through
 sbt dist
 Stop existing ENSIME server by killing inferior-ensime-server buffer 
 Restart ENSIME with M-x ensime 
 M-x ensime-sbt #gives you ensime sbt goodness
 M-x eshell #gives you the already embedded command line terminal
[/sourcecode]
Next open Applications folder and click Emacs.app to start emacs for Mac (You may notice that ensime will throw an error, don't worry just carry out the next steps below)

C-x C-f (control-x and control-f) and open the file with you system name Locate this line (i guess this will be around line number 151) (add-to-list 'load-path (concat dotfiles-dir "/vendor/ENSIME/elisp")) and edit it to this (add-to-list 'load-path (concat dotfiles-dir "/vendor/ENSIME/dist/elisp"))

DOWNLOAD SETUP THE FOLLOWING EMACS MODES:
<a href="http://www.thaiopensource.com/download/">NXML-MODE</a>
<a href="http://cx4a.org/software/auto-complete/#Downloads">AUTO-COMPLETE MODE</a>

I advice to first try out your installation by debugging it with this command;
[sourcecode language="bash"]
 emacs --debug-init 
[/sourcecode]

And now you ready to start writing some wonderful concise scala code with the help of emacs ENSIME. kudos to the guys behind the emacs starter kit, <a href="https://github.com/technomancy">technomancy</a>, <a href="https://github.com/g-eorge/">george agnelli</a>, <a href="https://github.com/topfunky"> topfunky</a> and <a href="https://github.com/aemoncannon/">aemon cannon</a>.


ROCK ON !]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>829</wp:post_id>
  <wp:post_date>2011-03-18 11:36:27</wp:post_date>
  <wp:post_date_gmt>2011-03-18 11:36:27</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>emacs-scala-and-ensime-configuration-steps</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="emacs"><![CDATA[EMACS]]></category>
  <category domain="category" nicename="ensime"><![CDATA[ENSIME]]></category>
  <category domain="category" nicename="scala"><![CDATA[SCALA]]></category>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1300534589]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1300534595]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>226</wp:comment_id>
    <wp:comment_author><![CDATA[Michael Nash]]></wp:comment_author>
    <wp:comment_author_email>mnash@jglobal.com</wp:comment_author_email>
    <wp:comment_author_url>http://jglobal.com</wp:comment_author_url>
    <wp:comment_author_IP>70.64.64.250</wp:comment_author_IP>
    <wp:comment_date>2011-09-06 14:25:55</wp:comment_date>
    <wp:comment_date_gmt>2011-09-06 14:25:55</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I'm afraid the above instructions must be a bit out-of-date, I get errors at the sbt update stage (unresolved dependencies)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1315319277</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1315319277.7692";s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1315319155.5123";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1315324437.7562";s:7:"message";s:44:"kengimel changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1315324442.5183";s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>227</wp:comment_id>
    <wp:comment_author><![CDATA[IKENNA OKPALA]]></wp:comment_author>
    <wp:comment_author_email>ikennaokpala@googlemail.com</wp:comment_author_email>
    <wp:comment_author_url>http://ikennaokpala.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>91.199.180.4</wp:comment_author_IP>
    <wp:comment_date>2011-09-06 14:28:23</wp:comment_date>
    <wp:comment_date_gmt>2011-09-06 14:28:23</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[What version of SBT are you on.. at the moment..]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>226</wp:comment_parent>
    <wp:comment_user_id>9228897</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1315319303</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1315319303.5128";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>228</wp:comment_id>
    <wp:comment_author><![CDATA[Michael Nash]]></wp:comment_author>
    <wp:comment_author_email>mnash@jglobal.com</wp:comment_author_email>
    <wp:comment_author_url>http://jglobal.com</wp:comment_author_url>
    <wp:comment_author_IP>70.64.64.250</wp:comment_author_IP>
    <wp:comment_date>2011-09-06 15:45:27</wp:comment_date>
    <wp:comment_date_gmt>2011-09-06 15:45:27</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I personally use .10.1, but the download needed 0.7.4, which I still have, so I tried that - and got the dependency error.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>227</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1315323928</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1315323928.8613";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>230</wp:comment_id>
    <wp:comment_author><![CDATA[IKENNA OKPALA]]></wp:comment_author>
    <wp:comment_author_email>ikennaokpala@googlemail.com</wp:comment_author_email>
    <wp:comment_author_url>http://ikennaokpala.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>91.199.180.4</wp:comment_author_IP>
    <wp:comment_date>2011-09-06 15:53:51</wp:comment_date>
    <wp:comment_date_gmt>2011-09-06 15:53:51</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Ok.. yes i remember i had a similar issue.. about a month ago.. when i was setting up  my new MacBook Pro
is it reporting something with eclipse scala like error
if yes
all i did was download the eclipse jar it required.. and then i located the maven location for that absent dependency.. and dump it there... this fixed my error.
hope it helps..]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>228</wp:comment_parent>
    <wp:comment_user_id>9228897</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1315324432</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1315324432.7961";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Upgrading Ruby to 1.9.3 via RVM</title>
  <link>http://ikennaokpala.wordpress.com/2011/11/01/upgrading-ruby-to-1-9-3-via-rvm/</link>
  <pubDate>Tue, 01 Nov 2011 00:09:44 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=892</guid>
  <description></description>
  <content:encoded><![CDATA[With Ruby <a href="http://www.ruby-lang.org/en/news/2011/10/31/ruby-1-9-3-p0-is-released/">1.9.3</a> out ! One can only expect <a href="http://www.rubyinside.com/ruby-1-9-3-preview-1-released-5229.html">better things</a>.

I tried to install 1.9.3 via ruby's version manager <a href="http://beginrescueend.com/">RVM</a> with this command:
[sourcecode language="bash"]
rvm list known
rvm update
rvm install 1.9.3
[/sourcecode]
But got no favorable response. After going through the rvm website docs. This combination did the trick: 
[sourcecode language="bash"]
rvm get head
rvm reload
rvm install 1.9.3
[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>892</wp:post_id>
  <wp:post_date>2011-11-01 00:09:44</wp:post_date>
  <wp:post_date_gmt>2011-11-01 00:09:44</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>upgrading-ruby-to-1-9-3-via-rvm</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby"><![CDATA[RUBY]]></category>
  <category domain="category" nicename="rvm"><![CDATA[RVM]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1320883786]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1320883787]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>A Scala API for database proceedings (ScalaQuery)</title>
  <link>http://ikennaokpala.wordpress.com/2011/11/10/a-scala-api-for-database-scalaquery/</link>
  <pubDate>Thu, 10 Nov 2011 01:37:56 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=907</guid>
  <description></description>
  <content:encoded><![CDATA[Back in the days making calls or connections to a database with jdbc took this much:

(Below is an excerpt code i wrote in 2005... :()

[sourcecode language="java"]
Connection con = null;
String url = &quot;jdbc:mysql://localhost:3306/&quot;;
String db = &quot;dblocal&quot;;
String driver = &quot;com.mysql.jdbc.Driver&quot;;
String user = &quot;dbuser&quot;;
String pass = &quot;dbuser&quot;;
try {
  Class.forName(driver);
  con = DriverManager.getConnection(url + db, user, pass);
  System.out.println(&quot;jdbc driver for mysql : &quot; + driver);
  System.out.println(&quot;Connection url : &quot; + url + db);
  System.out.println(&quot;Connection is established...&quot;);
  con.close();
  System.out.println(&quot;Connection is closed...&quot;);
} catch (Exception e) {
System.out.println(e);
}
[/sourcecode] 
The level of abstraction here is very low.
Then came ORM's with some abstraction but also giving us leaving us with the mountain to climb whilst leaving us with the <a href="http://www.codinghorror.com/blog/2006/06/object-relational-mapping-is-the-vietnam-of-computer-science.html">vietnam war of the impedance mis-match.</a></pre>  The capability of OOP (imperative) programming languages to tackle  high-level concepts like relational algebra has been questioned, this obviously has given room for Functional programming languages to shine.

One of such i recently have found within the JVM space is <a href="http://scalaquery.org">ScalaQuery</a>. I stumble across <a href="http://scalaquery.org/doc/ScalaQuery_Commerzbank_2011.pdf">this</a> on twitter, and began to look closer, though being a Scala fan and community member i had heard of ScalaQuery in it's early days, but did not take any real interest.

With the API in question connection to a database is more concise with named/default arguments (parameters) from scala land:
[sourcecode language="scala"]
import org.scalaquery.session._
import org.scalaquery.session.Database.threadLocalSession

val db = Database.forURL(
  &quot;jdbc:mysql://localhost:3306/&quot;,
  driver = &quot;com.mysql.jdbc.Driver&quot;,
  user=&quot;dbuser&quot;,
  password=&quot;dbuser&quot;
)
[/sourcecode]

ScalaQuery takes a better object oriented approach when mapping objects to tables:

[sourcecode language="scala"]
import org.scalaquery.ql.extended.{ExtendedTable =&gt; DBTable}
import org.scalaquery.ql.TypeMapper._
import org.scalaquery.ql._

case class Country (id:Int, name:String)
val Country = new DBTable[(Int, String)](&quot;countries&quot;) {
    def id = column[Int](&quot;id&quot;, O.NotNull, O.PrimaryKey, O.AutoInc)
    def name = column[String](&quot;name&quot;, O.NotNull, O.DBType &quot;varchar(50)&quot;)
    def * = id ~ name
  }

OR 

object country extends new DBTable[(Int, String)](&quot;countries&quot;) {
    def id = column[Int](&quot;id&quot;, O.NotNull, O.PrimaryKey, O.AutoInc)
    def name = column[String](&quot;name&quot;, O.NotNull, O.DBType &quot;varchar(50)&quot;)
    def * = id ~ name
  }
 

[/sourcecode]

Now one of the uses of case classes i love the most is using it as a value object, because with a case class we get the equals, hash and toString methods for free.

[sourcecode language="scala"]
case class Country (id:Int, name:String)
val countries = List(
    Country(1, &quot;Nigeria&quot;),
    Country(2, &quot;United Kingdom&quot;),
    Country(3, &quot;United States of America&quot;),
    Country(4, &quot;Canada&quot;),
    Country(5, &quot;France&quot;),
  )

[/sourcecode]

With the above playing with a dataset from the database becomes fun, as scala provides a collection library that is pack with goodness..

The following Query with for comprehensions.

[sourcecode language="scala"]
val nigeria = for {c &lt;- countries if c.id == 1}yield c.id ~ c.name
[/sourcecode]

happy days... only now i have to look for some project to use it in.

<a href='http://ikennaokpala.files.wordpress.com/2011/11/scalaquery_commerzbank_2011.pdf'>ScalaQuery Slides 2011 by Stefan Zeiger</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>907</wp:post_id>
  <wp:post_date>2011-11-10 01:37:56</wp:post_date>
  <wp:post_date_gmt>2011-11-10 01:37:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>a-scala-api-for-database-scalaquery</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="database"><![CDATA[DATABASE]]></category>
  <category domain="category" nicename="jvm"><![CDATA[JVM]]></category>
  <category domain="category" nicename="scala"><![CDATA[SCALA]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1320889077]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1320889078]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";s:1:"0";s:6:"author";s:7:"9228897";s:7:"blog_id";s:7:"9767970";s:9:"mod_stamp";s:19:"2011-11-11 23:20:04";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>ScalaQuery_Commerzbank_2011</title>
  <link>http://ikennaokpala.wordpress.com/2011/11/10/a-scala-api-for-database-scalaquery/scalaquery_commerzbank_2011/</link>
  <pubDate>Thu, 10 Nov 2011 02:14:05 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.files.wordpress.com/2011/11/scalaquery_commerzbank_2011.pdf</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>924</wp:post_id>
  <wp:post_date>2011-11-10 02:14:05</wp:post_date>
  <wp:post_date_gmt>2011-11-10 02:14:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>scalaquery_commerzbank_2011</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>907</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://ikennaokpala.files.wordpress.com/2011/11/scalaquery_commerzbank_2011.pdf</wp:attachment_url>
</item>
<item>
  <title>Guide to Setup Ruby On Rails in an Ubuntu Server</title>
  <link>http://ikennaokpala.wordpress.com/2011/11/07/guide-to-setup-ruby-on-rails-in-an-ubuntu-server/</link>
  <pubDate>Mon, 07 Nov 2011 13:07:05 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=927</guid>
  <description></description>
  <content:encoded><![CDATA[Find attached a very imperative guide to setting up ruby on rails Ubuntu. Click the link below.

I found it very useful. :)
<a href='http://ikennaokpala.files.wordpress.com/2011/11/installation_ruby-on-rails_for_ubuntu-linux-mint_www-mirceagoia-com.pdf'>Installation_Ruby-on-Rails_for_Ubuntu-Linux-Mint_www-mirceagoia-com</a>

However, with Ubuntu you may encounter this problem "no such file to load -- openssl (LoadError)". 
With rvm the solution is as follows:

[sourcecode language="bash"]
sudo apt-get install libssl-dev
cd ~/.rvm/src/ruby-1.8.7/ext/openssl
ruby extconf.rb
make &amp;&amp; make install
[/sourcecode]
Also you may encounter errors connected with the readline  extension.
Roll up you sleeve and do :) :
[sourcecode language="bash"]
sudo apt-get install libreadline5-dev
cd ~/.rvm/src/ruby-1.8.7/ext/readline
ruby extconf.rb
make &amp;&amp; make install
[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>927</wp:post_id>
  <wp:post_date>2011-11-07 13:07:05</wp:post_date>
  <wp:post_date_gmt>2011-11-07 13:07:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>guide-to-setup-ruby-on-rails-in-an-ubuntu-server</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bash"><![CDATA[BASH]]></category>
  <category domain="category" nicename="ruby"><![CDATA[RUBY]]></category>
  <category domain="category" nicename="rvm"><![CDATA[RVM]]></category>
  <category domain="category" nicename="ubuntu"><![CDATA[UBUNTU]]></category>
  <category domain="category" nicename="unix"><![CDATA[UNIX]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1320930425]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1320930426]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Installation_Ruby-on-Rails_for_Ubuntu-Linux-Mint_www-mirceagoia-com</title>
  <link>http://ikennaokpala.wordpress.com/2011/11/07/guide-to-setup-ruby-on-rails-in-an-ubuntu-server/installation_ruby-on-rails_for_ubuntu-linux-mint_www-mirceagoia-com/</link>
  <pubDate>Thu, 10 Nov 2011 13:06:15 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.files.wordpress.com/2011/11/installation_ruby-on-rails_for_ubuntu-linux-mint_www-mirceagoia-com.pdf</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>928</wp:post_id>
  <wp:post_date>2011-11-10 13:06:15</wp:post_date>
  <wp:post_date_gmt>2011-11-10 13:06:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>installation_ruby-on-rails_for_ubuntu-linux-mint_www-mirceagoia-com</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>927</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://ikennaokpala.files.wordpress.com/2011/11/installation_ruby-on-rails_for_ubuntu-linux-mint_www-mirceagoia-com.pdf</wp:attachment_url>
</item>
<item>
  <title>Advanced features in Scala talk</title>
  <link>http://ikennaokpala.wordpress.com/2011/11/16/advance-features-in-scala-talk/</link>
  <pubDate>Wed, 16 Nov 2011 23:53:31 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=946</guid>
  <description></description>
  <content:encoded><![CDATA[From the land of scala <a href="http://www.codecommit.com/blog/">Daniel Spiewak</a> one of the very rare, who are able to explain things in simple relative terms. In this <a href="http://vimeo.com/28793245">talk</a>, Daniel talks on an advanced features in Scala.. especially, Scala's type system which to many appears very complex, but daniel in this video breaks the ice a little..

[vimeo http://vimeo.com/28793245 w=650&amp;h=500]

BIG THANKS TO THE GUYS AT <a href="http://jz11.java.no/news.html">JAVA ZONE</a> FOR SHARING. ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>946</wp:post_id>
  <wp:post_date>2011-11-16 23:53:31</wp:post_date>
  <wp:post_date_gmt>2011-11-16 23:53:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>advance-features-in-scala-talk</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="jvm"><![CDATA[JVM]]></category>
  <category domain="category" nicename="scala"><![CDATA[SCALA]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1321487611]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1321487612]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>PixelShare_ERD</title>
  <link>http://ikennaokpala.wordpress.com/?attachment_id=956</link>
  <pubDate>Mon, 21 Nov 2011 10:56:09 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.files.wordpress.com/2011/11/pixelshare_erd.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>956</wp:post_id>
  <wp:post_date>2011-11-21 10:56:09</wp:post_date>
  <wp:post_date_gmt>2011-11-21 10:56:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>pixelshare_erd</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://ikennaokpala.files.wordpress.com/2011/11/pixelshare_erd.png</wp:attachment_url>
</item>
<item>
  <title>Setting the permissions for Webserver </title>
  <link>http://ikennaokpala.wordpress.com/2011/11/24/set-the-permissions-for-webserver/</link>
  <pubDate>Thu, 24 Nov 2011 02:25:27 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=957</guid>
  <description></description>
  <content:encoded><![CDATA[Sometimes when i deploy via tools like ruby's capistrano, there is a certain tendency to get permissions brutally wrong. 

and also very easy to encounter the 403 forbidden error "you don't have permission to access on this server"

For apache to render web files, it require read permissions. 

I ran into this and used this commands to resolve the matter: :P
[sourcecode language="bash"]
sudo chmod -R a+rx ~/public_html # this is the web site folder
sudo chmod a+rx ~ # this is current or deployment user home directory
[/sourcecode]
the first ensures that public_html directory is readable and accessible to all users on the system. 

The next command sets current or deployment user's home directory to be readable and accessible to all. 

If you add more directories for additional virtual domains later, run that first command again to make sure the new directories are accessible as well.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>957</wp:post_id>
  <wp:post_date>2011-11-24 02:25:27</wp:post_date>
  <wp:post_date_gmt>2011-11-24 02:25:27</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>set-the-permissions-for-webserver</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bash"><![CDATA[BASH]]></category>
  <category domain="category" nicename="ruby"><![CDATA[RUBY]]></category>
  <category domain="category" nicename="ubuntu"><![CDATA[UBUNTU]]></category>
  <category domain="category" nicename="unix"><![CDATA[UNIX]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1322274327]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[Set the permissions for Webserver : http://wp.me/pEZ5U-fr]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1322274328]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>How to disable logging of asset pipeline 304 messages</title>
  <link>http://ikennaokpala.wordpress.com/?p=981</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=981</guid>
  <description></description>
  <content:encoded><![CDATA[

http://stackoverflow.com/questions/6312448/how-to-disable-logging-of-asset-pipeline-sprockets-messages-in-rails-3-1]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>981</wp:post_id>
  <wp:post_date>2011-11-27 16:18:25</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>how-to-disable-logging-of-asset-pipeline-304-messages</wp:post_name>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_29467db2f7c69fbb8ca5dd451c5259eb</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_36def6e945777b2276239529b0ac119f</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b1896342d57e78957ccbe3c0f1106d4f</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Vagrant could not detect VirtualBox!</title>
  <link>http://ikennaokpala.wordpress.com/2011/12/04/984/</link>
  <pubDate>Sun, 04 Dec 2011 10:22:31 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=984</guid>
  <description></description>
  <content:encoded><![CDATA[if you run into this error 

[sourcecode language="bash"]
=====================================================================
Vagrant experienced an error!

Vagrant could not detect VirtualBox! Make sure VirtualBox is properly installed.
If VirtualBox is installed, it may be an incorrect version. Vagrant currently
requires VirtualBox 3.2.x. Please install the proper version to continue.
=====================================================================
[/sourcecode]

Know ye! that you may be using an older version of vagrant... 

Solution is to do gem install vagrant -v='0.8.8' or edit your Gemfile to include gem 'vagrant', '=0.8.8'

hope that helps.. 

]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>984</wp:post_id>
  <wp:post_date>2011-12-04 10:22:31</wp:post_date>
  <wp:post_date_gmt>2011-12-04 10:22:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>984</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby"><![CDATA[RUBY]]></category>
  <category domain="category" nicename="vagrant"><![CDATA[VAGRANT]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1322994151]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:2:"fb";a:1:{i:582482282;a:2:{s:7:"user_id";s:9:"582482282";s:7:"post_id";s:17:"10150399645387283";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1322994152]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[vagrant-could-not-detect-virtualbox]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Capistrano: “Permissions are too open … private key will be ignored”</title>
  <link>http://ikennaokpala.wordpress.com/2011/12/05/capistrano-permissions-are-too-open-private-key-will-be-ignored/</link>
  <pubDate>Mon, 05 Dec 2011 00:32:37 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=991</guid>
  <description></description>
  <content:encoded><![CDATA[While trying to login to a remote server with my .ssh credentials on it.. i notice capistrano's warning:

[sourcecode language="bash"]
** [out ::domain.com] @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 ** [out :: domain.com] @         WARNING: UNPROTECTED PRIVATE KEY FILE!          @
 ** [out :: domain.com] @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 ** [out :: domain.com] Permissions 0755 for '~/.ssh/id_rsa' are too open.
 ** [out :: domain.com] It is recommended that your private key files are NOT accessible by others.
[/sourcecode]

The problem being that my ssh private key was then public rather than private.

To Fix:
[sourcecode language="bash"]
chmod 600 ~/.ssh/id_rsa

#or you could also do 

chmod a-rwx ~/.ssh/id_rsa
chmod u+rw ~/.ssh/id_rsa
[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>991</wp:post_id>
  <wp:post_date>2011-12-05 00:32:37</wp:post_date>
  <wp:post_date_gmt>2011-12-05 00:32:37</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capistrano-permissions-are-too-open-private-key-will-be-ignored</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bash"><![CDATA[BASH]]></category>
  <category domain="category" nicename="capistrano"><![CDATA[CAPISTRANO]]></category>
  <category domain="category" nicename="ruby"><![CDATA[RUBY]]></category>
  <category domain="category" nicename="unix"><![CDATA[UNIX]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1323175238]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[Capistrano: “Permissions are too open … private key will be ignored”:]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1323175238]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Amending Git commits</title>
  <link>http://ikennaokpala.wordpress.com/2011/12/13/amending-git-commits/</link>
  <pubDate>Tue, 13 Dec 2011 16:55:57 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=998</guid>
  <description></description>
  <content:encoded><![CDATA[In my experience with <a title="Git" href="http://git-scm.com/" target="_blank">Git</a>, i have run into situations where i had made a commit in error, especially when resolving merge conflicts or sometimes i find my commit very non descriptive and need amending.

To remove a commit made in error entirely do:

[sourcecode language="bash"]
git reset --soft HEAD~1
 # and then
git reset --hard # this will reset the current branch
[/sourcecode]

Another issue that may arise is, may be you have already push the unwanted change in error to the remote origin branch.
No worries at all, Git is very forgiving.

After you must have done the above steps do this to update (rewind) remote origin.

[sourcecode language="bash"]
git push origin head -f
[/sourcecode]

To amend commit message i do:

[sourcecode language="bash"]
git commit --amend
[/sourcecode]

Another scenario where git shines is amending commits.. May be you are working from a new system and have not set the git config --globla user.email to the right email address.
All that is required is running this command:

[sourcecode language="bash"]
git commit --amend --author=username@domain.com
[/sourcecode]

It all depend on what part of your commit you would like to change. for a full usage guide do:

[sourcecode language="bash"]
git commit --usage

[/sourcecode]

To stop tracking changes on a commited file do

[sourcecode language="bash"]
git update-index --assume-unchanged &lt;path-to-file&gt;
[/sourcecode]

if need be to continue tracking changes again run the following command:

[sourcecode language="bash"]
git update-index --no-assume-unchanged &lt;path-to-file&gt;
[/sourcecode]

At some point there may be a couple of commits that you would like to delete, edit or include, or possibly the commit is branching off irregularly.

No worries this git command will interactively see you through (i advise reading through the messages as you go):
[sourcecode language="bash"]
git rebase -i HEAD~5 # 5 here is the position of the very last commit you want to edit
[/sourcecode]
Ciao !!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>998</wp:post_id>
  <wp:post_date>2011-12-13 16:55:57</wp:post_date>
  <wp:post_date_gmt>2011-12-13 16:55:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>amending-git-commits</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bash"><![CDATA[BASH]]></category>
  <category domain="category" nicename="git"><![CDATA[GIT]]></category>
  <category domain="category" nicename="unix"><![CDATA[UNIX]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1323795357]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1323795556]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:2:"fb";a:1:{i:582482282;a:2:{s:7:"user_id";s:9:"582482282";s:7:"post_id";s:17:"10150418290627283";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[git-commit-delete-and-amend-usage]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Automate Bundler (Check and Install) with Capistrano</title>
  <link>http://ikennaokpala.wordpress.com/2011/12/18/automate-bundler-check-and-install-with-capistrano/</link>
  <pubDate>Sun, 18 Dec 2011 23:27:43 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=1007</guid>
  <description></description>
  <content:encoded><![CDATA[I mistakenly emptied my RVM gemset which affected all the gems that where stored within. 

[sourcecode language="bash"]
/usr/local/rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/dependency.rb:247:in `to_specs': Could not find bundler (&gt;= 0) amongst [] (Gem::LoadError)
[/sourcecode]

I then looked through my Capistrano script and went like this can be automated. 
After googling i found <a href="http://pivotallabs.com/users/chad/blog/articles/1208-automating-bundler-in-your-deploy">this</a> but not quite what i had in mind

After hacking around with maroon 5 playing in the background, on a very cool winter afternoon.. i finally landed at this:

[sourcecode language="ruby"]
namespace :deploy do
  desc &quot;Install bundler&quot;
  task :bundle_install do
    begin
      run &quot;bundle install&quot;
    rescue
      gem_install_bundler
    end
  end

  desc &quot;installs Bundler if it is not already installed&quot;
  task :gem_install_bundler, :roles =&gt; :app do
    run &quot;gem install bundler &amp;&amp; bundle install&quot;
  end
end
[/sourcecode]

You can override to include this in deploy:cold as well like this:

[sourcecode language="ruby"]

namespace :deploy do
  task :cold do
    update
    bundle_install
  end
  desc &quot;Install bundler&quot;
  task :bundle_install do
    begin
      run &quot;bundle install&quot;
    rescue
      gem_install_bundler
    end
  end

  desc &quot;installs Bundler if it is not already installed&quot;
  task :gem_install_bundler, :roles =&gt; :app do
    run &quot;gem install bundler &amp;&amp; bundle install&quot;
  end
end
[/sourcecode]

Yes i am aware i am breaking the rules here.. please lets discuss below.. Drop me a line. :)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1007</wp:post_id>
  <wp:post_date>2011-12-18 23:27:43</wp:post_date>
  <wp:post_date_gmt>2011-12-18 23:27:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>automate-bundler-check-and-install-with-capistrano</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="capistrano"><![CDATA[CAPISTRANO]]></category>
  <category domain="category" nicename="ruby"><![CDATA[RUBY]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1324250864]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[Automate Bundler (Check and Install) with Capistrano:]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1324250867]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Nginx: 403 Forbidden (Error)</title>
  <link>http://ikennaokpala.wordpress.com/2011/12/25/nginx-403-forbidden-error/</link>
  <pubDate>Sun, 25 Dec 2011 01:27:18 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=1020</guid>
  <description></description>
  <content:encoded><![CDATA[[sourcecode language="bash"]
2011/12/25 21:07:03 [error] 23#0: *2 directory index of &quot;/path/to/public/&quot; is forbidden, client: 8.1.7.22, server: xxx.com, request: &quot;GET / HTTP/1.1&quot;, host: &quot;xxx.com&quot;
[/sourcecode]

This is not the first time i hit this kinda error and i go ok i will check my permissions settings.

And Oops!, that does not seem to be the issue. Then i go ok need to check and modify access rights of the user www-data and group www-data in the nginx.conf. But No!.

An then as usual i go hunting in the dark not knowing what i am really up against. For me this happens.. :(

But in this case i was shocked to  find out that the actual issue was with the mod passenger definition in the various conf files i had created.

I came to realise that i was configuring the very wrong way:

This appears not to work.
[sourcecode language="bash"]
server { 
  listen 80; 
  server_name xxx.com; 
  access_log  /var/log/access.log; 
  passenger_enabled on; 
   
  location / { 
    root /path/to/public; 
    index index.html index.htm; 
  }
} 
 or 
server {
    listen 80 default;
    server_name localhost;
    location / {
        root /usr/share/nginx/html/;
        expires 1d;
    }
}
[/sourcecode]

While this seems right:
[sourcecode language="bash"]
server { 
  listen 80; 
  server_name xxx.com; 
  access_log  /var/log/access.log; 
  passenger_enabled on; 
}

[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1020</wp:post_id>
  <wp:post_date>2011-12-25 01:27:18</wp:post_date>
  <wp:post_date_gmt>2011-12-25 01:27:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>nginx-403-forbidden-error</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bash"><![CDATA[BASH]]></category>
  <category domain="category" nicename="nginx"><![CDATA[NGINX]]></category>
  <category domain="category" nicename="unix"><![CDATA[UNIX]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1324950060]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1324950062]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[Nginx: 403 Forbidden (Error)]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>295</wp:comment_id>
    <wp:comment_author><![CDATA[☠DaMainBoss☠ (@FaYiMoRa)]]></wp:comment_author>
    <wp:comment_author_email>FaYiMoRa@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/FaYiMoRa</wp:comment_author_url>
    <wp:comment_author_IP>86.145.239.37</wp:comment_author_IP>
    <wp:comment_date>2012-03-11 20:05:21</wp:comment_date>
    <wp:comment_date_gmt>2012-03-11 20:05:21</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[When you have a location block nested inside a server block, you need to re-define server settings which would lead to duplication. You can just use the root option directly in the server block.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>64431298</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1331497051</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1331497051.4262";s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://a0.twimg.com/profile_images/1720028258/bxp58333_normal.jpg</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1331496321.9394";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>296</wp:comment_id>
    <wp:comment_author><![CDATA[IKENNA OKPALA]]></wp:comment_author>
    <wp:comment_author_email>ikennaokpala@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://ikennaokpala.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>82.5.93.10</wp:comment_author_IP>
    <wp:comment_date>2012-03-11 20:17:58</wp:comment_date>
    <wp:comment_date_gmt>2012-03-11 20:17:58</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Ok! will try that out..]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>295</wp:comment_parent>
    <wp:comment_user_id>9228897</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1331497078.1525";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1331497078</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Deployment Strategy for Rails, Passenger and Nginx server with Multiple Virtual Hosts</title>
  <link>http://ikennaokpala.wordpress.com/2011/12/27/deployment-strategy-for-rails-passenger-and-nginx-server-with-multiple-virtual-hosts/</link>
  <pubDate>Tue, 27 Dec 2011 05:01:04 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=1031</guid>
  <description></description>
  <content:encoded><![CDATA[In this blog post i intend to share notes taken during deployment exercise of rails apps on Multiple Virtual Hosts.

I have decided to put this all down for self reference and possibly interesting debates that may help expose areas that i am not be aware of.

Deploying rails apps from a beginners perspective (like mine) could be really confusing.

This note will show how i have come to avoid breaking the passenger-nginx compilation and deploying rails apps to Multiple Virtual Hosts.

The development stack/environment is based on the following technologies:
<ul>
	<li>Centos
<ul>
	<li>Run these commands to find out what version of Centos your server is.</li>
	<li>`cat /etc/redhat-release` gives me: "CentOS Linux release 6.0 (Final)"</li>
	<li>`uname -a` gives me: "Linux servername-xxx 2.6.32-71.29.1.el6.x86_64 #1 SMP Mon Jun 27 19:49:27 BST 2011 x86_64 x86_64 x86_64 GNU/Linux"</li>
</ul>
</li>
	<li>Nginx Web Server</li>
	<li>RVM 1.10.0</li>
	<li>Phusion Passenger 3.0.11</li>
	<li>Ruby 1.9.2 patch level 290</li>
	<li>Rails 3.1.3</li>
</ul>
It is worthy of note that at the time of writting this post the urls and rpm are valid. if you encounter any not found kinda error, you can google to find the rpm and the include it to the centos repo file.

[sourcecode language="bash"]
sudo vim /etc/yum.repos.d/CentOS-Base.repo
[/sourcecode]

<strong>Firstly, before we get started we need to setup the following</strong>

<em>Setup a deployment user account</em>
Our rails application will run as user: deployerbot.
To create a deployerbot, allocate it to a group, modify the deployerbot user password and then add deployerbot to sudoers file.

[sourcecode language="bash"]
groupadd staff # if staff does not exist (cat /etc/groups | grep staff)
useradd -m -g staff -s /bin/bash deployerbot # if you need to add deploybot user to more groups  usermod -G grp1,grp2,newgrp username
passwd deployerbot
visudo  # edit to include deployerbot to the sudoers file.. notice that i changed this to visudo instead of vim /etc/sudoers.. this is a safer way to edit sudoers. see this link for more on visudo http://linux.about.com/library/cmd/blcmdl8_visudo.htm.. thanks to Geoff Low (gflow) for the correction..

# include this line below  'root ALL=(ALL) ALL': to enable deployerbot to use the sudo command
deployerbot ALL=(ALL) ALL
#or alternatively add the staff group below  'root ALL=(ALL) ALL': to enable deployerbot to use the sudo command as a member of the group
%staff ALL=(ALL) ALL
#login as the newly created user and create the ssh key
ssh-keygen -t rsa -b 4096
[/sourcecode]

More on <a href="http://ubuntuforums.org/showthread.php?t=904796" target="_blank">ssh and its key generation here</a>
Now the web applications are going to run in production-mode, include this line to /etc/environment to avoid repeating it for every kind of Rails like commands:

[sourcecode language="bash"]
RAILS_ENV=production
[/sourcecode]

<em>Install RVM </em>
Make sure you have all the essential armoury (dependencies) :)

[sourcecode language="bash"]
yum groupinstall &quot;Development Tools&quot;  # ubuntu equivalent may be this apt-get install build-essential ruby-full libmagickcore-dev imagemagick libxml2-dev libxslt1-dev git-core ruby-devel libxml2 libxml2-devel libxslt libxslt-devel

yum install kernel-devel kernel-headers # this may already have been installed by default

yum install openssl-devel libcurl-devel ImageMagick httpd-devel ruby-libs zlib-devel libjpeg-devel giflib-devel readline-devel

# or this could also work as well if the above fails

sudo rpm -Uvh http://download.fedora.redhat.com/pub/epel/5/i386/epel-release-5-4.noarch.rpm

yum -y install libpcap libpcap-devel libnet libnet-devel pcre pcre-devel gcc automake autoconf libtool make gcc-c++ libyaml libyaml-devel zlib zlib-devel pkgconfig ruby-devel libxml2 libxml2-devel libxslt libxslt-devel
[/sourcecode]


Check out this <a href="http://www.openinfosecfoundation.org/doc/INSTALL.txt">link</a> for more information

To Install RVM on Centos this following command is require (do this as the deployment user). Also make sure you already have curl and git installed.

[sourcecode language="bash"]
bash &lt; &lt;(curl -s https://rvm.beginrescueend.com/install/rvm) # after installation, rvm should be ready to use.. if not reboot

rvm notes # to find out if there are any system specific setting that require attention.. for centos you may need to create a .screenrc file with only this as its content shell -/bin/bash

usermod -a -G staff,rvm deployerbot  #modify deployerbot to multiple groups rvm and staff
[/sourcecode]

For Centos depending on the version you are running on i would advise run the command below for more information

[sourcecode language="bash"]
rvm notes
[/sourcecode]

<em>Install Ruby and Upgrade RubyGems</em>
For precautionary reason install 1.9.2 with the following packages: (do this as the deployment user)

[sourcecode language="bash"]

rvm pkg install readline # you may want to do (--skip-autoreconf) this for each package to avoid autoreconf error: rvm --skip-autoreconf pkg install readline
rvm pkg install zlib
rvm pkg install openssl
rvm install 1.9.2 --with-openssl-dir=$rvm_path/usr --with-readline-dir=$rvm_path/usr # with zlib optional rvm install 1.9.2 --with-zlib-dir=$rvm_path/usr --with-openssl-dir=$rvm_path/usr --with-readline-dir=$rvm_path/usr
rvm use 1.9.2 # to make this the system's ruby do: rvm --default use 1.9.2

# Upgrade RubyGems to the latest (stable) and greatest.. :)
wget http://rubyforge.org/frs/download.php/xxxxx/rubygems-x.x.x*.tgz
tar zxvf rubygems-x.x.x*.tgz
cd rubygems-x.x.x*
ruby setup.rb
# to confirm rubygem upgrade:
gem -v
[/sourcecode]

<em>Create a Gemsets for each web application</em>
This blog focuses on deployment on multiple virtual hosts we will be creating two gemsets demonstration purposes.

[sourcecode language="bash"]
rvm gemset create webapp1
rvm gemset create webapp2
[/sourcecode]

On the server create a ~/.gemrc file

[sourcecode language="bash"]
:verbose: true
:bulk_threshold: 1000
install: --no-ri --no-rdoc --env-shebang
:sources:
- http://gemcutter.org
- http://gems.rubyforge.org/
- http://gems.github.com
:benchmark: false
:backtrace: false
update: --no-ri --no-rdoc --env-shebang
:update_sources: true
[/sourcecode]


<strong>
To deploy these apps on Nginx</strong>
<em>Install and setup passenger and nginx</em>
Passenger as i have come to know is simply mod_rails pr mod ruby for webservers like nginx.
now here is where i have observed that i made a big mistake. Now because you have multiple virtual host sitting on the server, they are mostly likely not useing the exactly set of gems and even possibly may different rubies.

With RVM installed on the server, your RVM directory is located here "$HOME/.rvm/" probably has taken this form.

[sourcecode language="bash"]
cd $HOME/.rvm/gems/
ls

# archives  environments  help     log        README   tmp      wrappers
# bin       examples      hooks    man        rubies   user
# config    gems          lib      patches    scripts  usr
# contrib   gemsets       LICENCE  patchsets  src      VERSION
[/sourcecode]

Out of all these we are interested in two folders the gems and wrapper.

A brief look into the gems folder you will find the following

[sourcecode language="bash"]
cd gems
ls

# cache            ruby-1.9.2-p290@webapp1      ruby-1.9.2-p290@webapp2
# ruby-1.9.2-p290  ruby-1.9.2-p290@global
[/sourcecode]

Because we want to maintain virtual host and accommodate dissimilarities between webapp1 and webapp2

I suggest installing passenger in the ruby-1.9.2-p290 gemset folder. This will avoid breaking passenger on each deployment of any of the two web applications, because for each time you reload or reinstall your gems , there is a big propensity of getting the passenger-nginx link broken. Hence the need to recompile passenger for nignx on the server.

This could also lead to errors like:
<ul>
	<li style="color:red;font-size:12px;">500 internal server error</li>
	<li style="color:red;font-size:12px;">403 Forbidden</li>
	<li style="color:red;font-size:12px;">[Tue Dec 27 22:43:57 2011] [error] *** Passenger could not be initialised because of this error: Unable to start the Phusion Passenger watchdog because it encountered the following error during startup: Unable to start the Phusion Passenger logging agent because its executable (/path/to/gems/passenger-3.0.11/agents/PassengerLoggingAgent) doesn't exist. This probably means that your Phusion Passenger installation is broken or incomplete. Please reinstall Phusion Passenger</li>
</ul>
So i think it's better to have the passenger gem separate from the gemsets for the web application. This will not require recompiling passenger on every deployment, hence leaving a high chance of downtime problems.

Now i have come across solutions like unicorn, but for now what is obtain in my environment is passenger. Burt will be checking unicorn out pretty soon.

To achieve this do the following (perform this as the deployment user):

[sourcecode language="bash"]
rvm use 1.9.2 # load the ruby-1.9.2-p290 folder into your current session

gem install passenger # this should install passenger to the ruby-1.9.2-p290 folder

passenger-install-nginx-module # do this to setup/compile passenger with nginx
[/sourcecode]

At a certain stage of the <em>passenger-install-nginx-module</em> you will be asked to chose to between two setup processes. For me i will take the number 1 option of installing nginx from scratch which is the recommended option. This also makes sense since so far we have not installed nginx.

<em>Nginx Virtual Host Configuration</em>
For nginx assuming that decided to install it in /etc/nginx/ passenger will locate the nginx.conf in the conf folder. To correctly link passenger and nginx the copy the following to your nginx.conf file

[sourcecode language="bash"]
user  deployerbot staff;

worker_processes  2;

events {
    worker_connections  1024;
}
http {
    passenger_root /usr/local/rvm/gems/ruby-1.9.2-p290/gems/passenger-3.0.11;
    passenger_ruby /usr/local/rvm/wrappers/ruby-1.9.2-p290/ruby;

    include       mime.types;
    default_type  application/octet-stream;

    access_log  /etc/nginx/logs/access.log;
    error_log  /etc/nginx/logs/error.log;

    sendfile        on;
    keepalive_timeout  65;
    include /etc/nginx/conf.d/*.conf;
}

[/sourcecode]

Before the next steps create the conf.d directory. I personal prefer to keep them inside conf.d. You can chosen to keep yours somewhere else only remember to link it up.

[sourcecode language="bash"]
mkdir conf.d
[/sourcecode]

Now for webapp1 you want to configure you server something like this

[sourcecode language="bash"]
server {
    # if you're running multiple servers, instead of &quot;default&quot; you should
    # put your main domain name here
    listen 80;

    # you could put a list of other domain names this application answers
    server_name webapp1.com;

    root /var/www/path/to/webapp1/current/public;
    access_log /var/www/path/to/webapp1/logs/webapp1.access.log;
    error_log /var/path/to/webapp1/logs/webapp1.error.log;

    rewrite_log on;

    passenger_enabled on;
}

[/sourcecode]

And for webapp2 we have

[sourcecode language="bash"]
server {
    # if you're running multiple servers, instead of &quot;default&quot; you should
    # put your main domain name here
    listen 80;

    # you could put a list of other domain names this application answers
    server_name webapp2.com;

    root /var/www/path/to/webapp2/current/public;
    access_log /var/www/path/to/webapp2/logs/webapp2.access.log;
    error_log /var/path/to/webapp2/logs/webapp2.error.log;

    rewrite_log on;

    passenger_enabled on;
}

[/sourcecode]

Obviously the above steps do not settle it all. We need to create our web app.

[sourcecode language="bash"]
rails new webapp1
rails new webapp2
[/sourcecode]

Create a ~/.rvmrc to trust your .rvmrc project files and (create) load the project specific gemset

[sourcecode language="bash"]
rvm_trust_rvmrcs_flag=1

if [[ -s &quot;/usr/local/rvm/gems/ruby-1.9.2-p290@webapp1&quot; ]] ; then
  . &quot;/usr/local/rvm/gems/ruby-1.9.2-p290@webapp1&quot;
else
  rvm --create use  &quot;1.9.2@webapp1&quot;
fi
[/sourcecode]


Here comes another part.

Unlike <a href="http://httpd.apache.org/docs/2.0/mod/mod_env.html">Apache's SetEnv feature</a>, nginx does not allow setting of environment variable rather relies on the shell for environment variables.

Passenger on the other hand is a shel script and will use the default settings of the shell if the rails application does not specify its own settings.

To avoid this problem, you need to set environment variable for each application (webapp1 and webapp2).

To do this edit config/production.rb with the following:

[sourcecode language="ruby"]

WebApp1::Application.configure do
# Settings specified here will take precedence over those in config/application.rb

  # Code is not reloaded between requests
  config.cache_classes = true #..........
# .....................................
end

#paste this at the bottom and edit this part with your own relevant paths

ENV['GEM_HOME']='/usr/local/rvm/gems/ruby-1.9.2-p290@webapp1/gems' # take note for webapp2 it will be /usr/local/rvm/gems/ruby-1.9.2-p290@webapp2/gems
ENV['GEM_PATH']='/usr/local/rvm/gems/ruby-1.9.2-p290@webapp1/gems:/usr/local/rvm/gems/ruby-1.9.2-p290@global/gems'
ENV['PATH']='/usr/local/rvm/gems/ruby-1.9.2-p290@webapp1/bin:$PATH'
ENV['MY_RUBY_HOME']='/usr/local/rvm/wrappers/ruby-1.9.2-p290@webapp1/ruby'
[/sourcecode]

The above will set the environment variable for the rails application to the gemset folder <em>/usr/local/rvm/gems/ruby-1.9.2-p290@webapp1/gems</em> as well as all others.

Next you need to create a in the config folder setup_load_paths.rb this is well explained in <a href="http://beginrescueend.com/integration/passenger/">this post</a>
Copy and paste the following:

[sourcecode language="ruby"]
if ENV['MY_RUBY_HOME'] &amp;&amp; ENV['MY_RUBY_HOME'].include?('rvm')
  begin
    rvm_path = File.dirname(File.dirname(ENV['MY_RUBY_HOME']))
    rvm_lib_path = File.join(rvm_path, 'lib')
    $LOAD_PATH.unshift rvm_lib_path
    require 'rvm'
    RVM.use_from_path! File.dirname(File.dirname(__FILE__))
  rescue LoadError
    # RVM is unavailable at this point.
    raise &quot;RVM ruby lib is currently unavailable.&quot;
  end
end

# Pick the lines for your version of Bundler
# If you're not using Bundler at all, remove all of them

# Require Bundler 1.0
ENV['BUNDLE_GEMFILE'] = File.expand_path('../Gemfile', File.dirname(__FILE__))
require 'bundler/setup'

# Require Bundler 0/9
# if File.exist?(&quot;.bundle/environment.rb&quot;)
#   require '.bundle/environment'
# else
#   require 'rubygems'
#   require 'bundler'
#   Bundler.setup
# end
[/sourcecode]

Now last part is the Capistrano recipe to compliment the above setting.

[sourcecode language="bash"]
# First of all create capistrano files with this
capify .
[/sourcecode]

Following the above copy this part to the Capfile:

[sourcecode language="ruby"]
# this part goes in the Capfile which is located in the root of your rails app

# Add RVM's lib directory to the load path.
$:.unshift(File.expand_path('./lib', ENV['rvm_path']))
# Load RVM's capistrano plugin.
require &quot;rvm/capistrano&quot;
# Set it to the ruby + gemset of your app, e.g:
set :rvm_ruby_string, '1.9.2@webapp1'
[/sourcecode]
[sourcecode language="ruby"]
#this part goes in the deploy.rb file inside the config in your rails app

require 'bundler/capistrano'
set :application, &quot;webapp1.com&quot;

set :domain, &quot;www.domain.com&quot;
set :environment, &quot;production&quot;
set :branch, &quot;master&quot;
set :deploy_to, &quot;/var/www/path/to/www/webapp1&quot;

role :app, domain
role :web, domain
role :db, domain, :primary =&gt; true

default_run_options[:pty] = true

default_run_options[:shell] = 'bash'

default_environment[&quot;RAILS_ENV&quot;] = 'production'

set :repository, &quot;git@ domain.com/webapp1.git&quot;
set :deploy_via, :remote_cache

# If you aren't using Subversion to manage your source code, specify
# your SCM below:
set :scm, :git
set :scm_verbose, true
set :use_sudo, false
set :ssh_options, :forward_agent =&gt; true

set :user, &quot;deployerbot&quot;
set :keep_releases, 7

set :default_environment, {
    'PATH' =&gt; &quot;/usr/local/rvm/gems/ruby-1.9.2-p290@webapp1/gems/bin:$PATH&quot;,
    'RUBY_VERSION' =&gt; 'ruby 1.9.2',
    'GEM_HOME' =&gt; '/usr/local/rvm/gems/ruby-1.9.2-p290@webapp1/gems',
    'GEM_PATH' =&gt; '/usr/local/rvm/gems/ruby-1.9.2-p290@webapp1/gems:/usr/local/rvm/gems/ruby-1.9.2-p290@global/gems',
    'BUNDLE_PATH' =&gt; '//usr/local/rvm/gems/ruby-1.9.2-p290@webapp1/gems' # If using bundler.
}

namespace :deploy do
  desc &quot;restarting&quot;
  task :restart do
    run &quot;touch #{current_path}/tmp/restart.txt&quot;
  end

  desc &quot;symlink vendor to shared vendor&quot;
  task :symlink_vendor_to_shared_vendor do
    run &quot;ln -s #{current_path}/../shared/vendor #{current_path}/vendor&quot;
  end

  desc &quot;trust rvmrc&quot;
  task :trust_rvmrc do
    run &quot;rvm rvmrc trust #{release_path}&quot;
  end
end

after 'deploy:symlink', 'deploy:symlink_vendor_to_shared_vendor', 'deploy:trust_rvmrc'
[/sourcecode]

Next do

[sourcecode language="bash"]
cap deploy:setup
cap deploy:cold
cap deploy
[/sourcecode]

On the server you want to load each application's gemset and do bundle install

[sourcecode language="bash"]
rvm use 1.9.2@webapp1
cd /var/www/path/to/www/webapp1
bundle install

rvm use 1.9.2@webapp2
cd /var/www/path/to/www/webapp2
bundle install
[/sourcecode]

Do keep in mind, that if you start nginx manually, including the sudo -E will inform sudo to preserve your environment. If this is not done, sudo will possibly reset all your environment variables.

[sourcecode language="bash"]
cd /etc/nginx/sbin/
sudo -E ./nginx
[/sourcecode]


After doing this, nginx is sure to use the your chosen set of configuration.

Here ends the deployment notes, please feel free to comment below.

And away we go ! Ciao for now..]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1031</wp:post_id>
  <wp:post_date>2011-12-27 05:01:04</wp:post_date>
  <wp:post_date_gmt>2011-12-27 05:01:04</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>deployment-strategy-for-rails-passenger-and-nginx-server-with-multiple-virtual-hosts</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bash"><![CDATA[BASH]]></category>
  <category domain="category" nicename="capistrano"><![CDATA[CAPISTRANO]]></category>
  <category domain="category" nicename="nginx"><![CDATA[NGINX]]></category>
  <category domain="category" nicename="rails"><![CDATA[RAILS]]></category>
  <category domain="category" nicename="ruby"><![CDATA[RUBY]]></category>
  <category domain="category" nicename="rvm"><![CDATA[RVM]]></category>
  <category domain="category" nicename="unix"><![CDATA[UNIX]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[Deployment strategy for Rails, Passenger and Nginx server with Multiple Virtual Hosts http://wp.me/pEZ5U-gD]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1324962064]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1324962066]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>263</wp:comment_id>
    <wp:comment_author><![CDATA[IKENNA OKPALA]]></wp:comment_author>
    <wp:comment_author_email>ikennaokpala@googlemail.com</wp:comment_author_email>
    <wp:comment_author_url>http://ikennaokpala.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>82.5.93.10</wp:comment_author_IP>
    <wp:comment_date>2011-12-30 00:05:33</wp:comment_date>
    <wp:comment_date_gmt>2011-12-30 00:05:33</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Wow awesome.. thanks..]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>262</wp:comment_parent>
    <wp:comment_user_id>9228897</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1325203536.5196";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1325203535</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>262</wp:comment_id>
    <wp:comment_author><![CDATA[Kiruban PREMKUMAR]]></wp:comment_author>
    <wp:comment_author_email>Kiru42@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.kiruban-premkumar.com</wp:comment_author_url>
    <wp:comment_author_IP>82.237.50.176</wp:comment_author_IP>
    <wp:comment_date>2011-12-30 00:02:20</wp:comment_date>
    <wp:comment_date_gmt>2011-12-30 00:02:20</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Really work. Keep it up. &amp; Thank you very much it helped me a lot. :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1325203341.2613";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1325203503</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1325203503.996";s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Postgres gem native extension error</title>
  <link>http://ikennaokpala.wordpress.com/2011/12/27/postgres-native-extension-error/</link>
  <pubDate>Tue, 27 Dec 2011 01:27:33 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=1085</guid>
  <description></description>
  <content:encoded><![CDATA[I hit this error when installing the pg gem for using postgresql with rails apps.
[sourcecode language="bash"]
Gem::Installer::ExtensionBuildError: ERROR: Failed to build gem native extension.

        /Users/userx/.rvm/rubies/ruby-1.9.2-p290/bin/ruby extconf.rb 
checking for pg_config... no
No pg_config... trying anyway. If building fails, please try again with
 --with-pg-config=/path/to/pg_config
checking for libpq-fe.h... no
Can't find the 'libpq-fe.h header
*** extconf.rb failed ***
Could not create Makefile due to some reason, probably lack of
necessary libraries and/or headers.  Check the mkmf.log file for more
details.  You may need configuration options.

Provided configuration options:
	--with-opt-dir
	--without-opt-dir
	--with-opt-include
	--without-opt-include=${opt-dir}/include
	--with-opt-lib
	--without-opt-lib=${opt-dir}/lib
	--with-make-prog
	--without-make-prog
	--srcdir=.
	--curdir
	--ruby=/Users/kengimel/.rvm/rubies/ruby-1.9.2-p290/bin/ruby
	--with-pg
	--without-pg
	--with-pg-dir
	--without-pg-dir
	--with-pg-include
	--without-pg-include=${pg-dir}/include
[/sourcecode]

I already have postgres installed, so what? it appears postgres does not know when to find the its native extension files.

To solve you need to locate bin directory for your postgresql in the Library directory. Depending the version of postgres you are running, the path to the bin folder may differ.

including the below to you .bashrc or .bash_profile or .profile or .zshrc will do the trick :) 
[sourcecode language="bash"]

PATH=${PATH}:/Library/PostgreSQL/9.1/bin
source .zshrc
gem install pg
[/sourcecode]

For centos users <a href="http://serverfault.com/questions/316703/how-to-install-libpq-dev-on-centos-5-5">this post</a> could be of help.
 and/or
Prepend with a variable assignment for PATH with the location of the pg_config file, for example:

[sourcecode language="bash"]

export PATH=/usr/pgsql-9.1/bin:$PATH
source .bashrc
gem install pg
[/sourcecode]

Check that postgres is running: 

service postgresql-9.1 status
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1085</wp:post_id>
  <wp:post_date>2011-12-27 01:27:33</wp:post_date>
  <wp:post_date_gmt>2011-12-27 01:27:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>postgres-native-extension-error</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bash"><![CDATA[BASH]]></category>
  <category domain="category" nicename="database"><![CDATA[DATABASE]]></category>
  <category domain="category" nicename="postgresql"><![CDATA[POSTGRESQL]]></category>
  <category domain="category" nicename="rails"><![CDATA[RAILS]]></category>
  <category domain="category" nicename="ruby"><![CDATA[RUBY]]></category>
  <category domain="category" nicename="unix"><![CDATA[UNIX]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1325003254]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1325003257]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";s:1:"0";s:6:"author";s:7:"9228897";s:7:"blog_id";s:7:"9767970";s:9:"mod_stamp";s:19:"2011-12-27 16:40:36";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[postgres-native-extension-error-mac-os-x]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>1147</wp:comment_id>
    <wp:comment_author><![CDATA[Ken]]></wp:comment_author>
    <wp:comment_author_email>ken@kenstipek.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>98.247.176.153</wp:comment_author_IP>
    <wp:comment_date>2012-11-10 20:55:08</wp:comment_date>
    <wp:comment_date_gmt>2012-11-10 20:55:08</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You are a rock star.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1352580908.5104339122772216796875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1352581462</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1352581462.8758389949798583984375;s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>(In my brain) What are Semantic Web Services ?</title>
  <link>http://ikennaokpala.wordpress.com/2009/08/02/in-my-brain-what-are-semantic-web-services/</link>
  <pubDate>Sun, 02 Aug 2009 16:58:16 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=1160</guid>
  <description></description>
  <content:encoded><![CDATA[<h4>INTRODUCTION</h4>
This report seeks to evaluate the extent to which basic service standards for the web have been used. The content within will serve as a  microscope for the following:
<ul>
	<li>How basic web service standards like XML implement a service-oriented architecture (Part One).</li>
	<li>How software agents and semantic web technology are used within an industry application (Part Two).</li>
	<li>How web service standards have supported communication with enterprise applications (Part Three).</li>
</ul>
<h4>PART ONE</h4>
Services are independent modules that are represented in an application environment in a collective manner. SOA’s design gives rise to making of loosely coupled components of business functionality that come together through a common compliance to a standard communications framework.  The most popular type of service is the XML Web service.

XML Web services has two basic requirements:
<ul>
	<li>Communication via HTTP (i.e. interaction via internet protocols).</li>
	<li>Data exchange format in XML documents (i.e. sending and receiving messages in XML format).</li>
</ul>
The SOA design framework advocates the encapsulation of application logic inside the services interacting through a common communication protocol. A search on Google for SOA appears to favour XML based Web services, which is founded on the established XML technology strata and disclosing application logic as loosely coupled services.

Based on this model, SOA backs the use of a discovery mechanism for services via a service broker or discovery agent (Thomas E., 2004).

Under SOA, xml serves as the data delivery format inside applications. XML documents take data that come from within and between the various layers of a multi-tiered architecture.

In addition, the ability to transform XML documents from disparate application data sources into multiple formats for output has served as a key part of modern XML architectures such as XSLT.

<a href="http://ikennaokpala.files.wordpress.com/2012/01/soa.png"><img src="http://ikennaokpala.files.wordpress.com/2012/01/soa.png?w=300" alt="" title="soa" width="339" height="282" class="aligncenter size-medium wp-image-1162" /></a>

Diagram 1: Web standards Interaction

Source: <a href="http://fgamedia.org/faculty/rdcormia/COIN83/lesson06.htm">http://fgamedia.org/faculty/rdcormia/COIN83/lesson06.htm</a>

Another XML-based technology is Web Services Description Language (WSDL). This defines Web services interfaces, data and message types, interaction patterns, and protocol mappings.

WSDL within a SOA context is used in conjunction with SOAP and XML Schemas. This provides web services via Internet protocols.

In the SOA context, Simple Object Access Protocol (SOAP) defines an envelope for Web services communication that can be mapped to several transports including HTTP.

It makes available a serialization format for sending XML documents through a network and a pretty convention for defining RPC interactions (E. Newcomer, 2002).

However, main the web service specifications (SOAP, WSDL, UDDI, etc.) were built to serve as mechanisms on their own for defining how independent web services can connect to sustain reliability of business solutions with the appropriate level of complexity. This is according to sources was the birthroots of BPEL.

BPEL for instance is how web service specifications can be amplified to standardize web application to web application integration and also extend integration legacy systems (H. Lausen et al, 2005).

In addition it serves as the foundation for building workflow systems and modelling of business processes. The fundamental way of describing a web service using WSDL is in essence very stateless, defining how an operation could be invoked (or the expected form of a message or document).

This doesn’t say anything about the aftermath of the operation, or in what order the series of operations can be arranged to get things running as expected. For describing long running business processes which bond together (orchestrate) a number of services, require a higher-level language such as BPEL.

For instance, purchasing products online may involve a long running process, which could connect with a several of service providers:
<ul>
	<li>Searching, browsing and selecting items to basket</li>
	<li>Obtaining or retrieving customer information an instance of this is with the evolving social commerce where service consumers can obtain customer data from social networks (e.g.: Facebook, but these are REST based though).</li>
	<li> Obtaining and verifying credit card details from credit card service providers.</li>
	<li> Sending notification and invoice via emails.</li>
	<li>Delivery of goods in warehouses and generating one or more orders for posting.</li>
	<li> Shipping orders via a Delivery Company, e.g.: Royal Mail etc.</li>
</ul>
<h4>PART TWO</h4>
On websites natural languages is the main form of representing information e.g. English, Chinese or Turkish. Computers are not aware of how to parse and use this kind of data sensibly. Amongst the goals of the semantic web are having the potential to find and access web sites and web resources not only with keywords or sensible defaults like checking the files extension of images and files just like what search engines bots do e.g.: Google, Yahoo and Bing. The desire is to be able to describe their forms, contents and capabilities.

For instance, a person that has a mobile phone or any digital device (like an iPad) that is aware of certain default settings set by the user of the device and the device stores knowledge through utilization history and is capable of combining this local understanding with remote services such as online flight services, privacy preferences, dietary rules, medical conditions and time management settings etc.

With software agents having this innate capacity, with intelligence and mobility, they can implicit or explicitly move from one website site to another, with their password, ssh keys, codes, data, running states, and intelligence and fulfill their task on their own very smartly.

In addition, web-services very much still need human's input and cognition during their execution. In the e-commerce sector, to buy items from an online shop, the user needs to register and which involves clicking a button to accomplish this task. In another way, the user may decide to send a HTTP request to the service URL with the required encoded form field parameters.

Both ways still require human cognition of what information is needed to run the service and to interpret the information the service returns.

With the emergence of semantic markup, web services have the ability to execute services via a declarative and computer interpretable Application Programming Interface (API). Semantic markup informs the software agent of the input required, what response to expect, and how it should potentially execute and communicate with the service (S. McIlraith , 2001).

In addition, ontology serves as interactions for different agents and improves the quality of the service rendered by every agent. The web ontology language (OWL) is defined for implementation by software applications that are required to process data rather than presenting it to humans.

A resource description framework (RDF) is a data framework for resources (or object in their own rights) and affiliations between them. RDF provides semantics for data, and the data models can be defined in XML format and queries with XPath if required.

In order to use these technologies, an e-commerce industry can have many layers with a semantic Intelligence stratum within enabling knowledge description and knowledge access via ontology.
<ul>
	<li>The web services stratum makes sure that resources are dynamically discovered and integrated. Compliance to web services standards will give the online buyers or the software agents that represent them, the capability to distribute data and use functionality from other applications in a multi-domain, multi-technology, heterogeneous environment in a dynamic manner.</li>
</ul>
<ul>
	<li> An Agent layer will assist in dealing with security, privacy, negotiation, personalization and web service procurement issues as they arise.</li>
</ul>

<a href="http://ikennaokpala.files.wordpress.com/2012/01/wcss.jpg"><img src="http://ikennaokpala.files.wordpress.com/2012/01/wcss.jpg?w=300" alt="" title="wcss" width="986" height="469" class="aligncenter size-medium wp-image-1161" /></a>

Diagram 2: E-Commerce Software Agent interaction Diagram
<h4>PART THREE</h4>
For an e-commerce industry to adopt and use semantic web services, the accepted XML standards for interoperating web services doesn’t define not the semantic meaning of messages but provides specification for only syntactic interoperability.

WSDL for instance has the capability to define the available operations via a web service, data structure and the messages sent and received. It lacks capability of interpreting the semantic meaning or constraints of the data.

Programmers are required achieve specific agreements on the interaction of web services and makes automatic web service composition difficult. Semantic web services helps to resolve this by provision of another layer above the web service infrastructure to provide semantic meaning for web services. A number of semantic web languages exist today examples are RDF, WSML, OWL, SPARQL and OIL.

UDDI and WSDL are perfectly suited for semantic web technology. Further more, SOAP can utilize, remote RDF queries and updates, RDF payloads to connect and interface with the rules engines for a semantic web application (P. Alesso, 2004).

UDDI can however extend semantic discovery via the following:
<ul>
	<li>By storing the semantic annotation of web services in the existing structures of UDDI.</li>
	<li>And making available an interaction interface to create the queries that will use that semantic annotation of web services (K. Sivashanmugam et al, 2006).</li>
</ul>
For Ecommerce, when an online buyer is searching for a product item to buy, it should be possible to independently find the relevant service with its meaning, with out knowing what it name or what language it belongs to and who company or service provider is.

As earlier stated WSDL can’t provide semantic information but it can utilize OIL and DAML ontologies by adding its constructs to them. Utilizing these ontologies formats web service descriptions in a machine-readable way like DAML-S (K. Sivashanmugam et al, 2006).

The concepts of web services and semantic web are very similar; they both help to make it easier for data on the current World Wide Web to be in the right data formats that software agents can use.
<h2>References</h2>
<ol>
	<li>E. Thomas, 2004. Service-Oriented Architecture: A Field Guide to Integrating XML and Web Services. Prentice Hall PTR.ISBN: 0-13-142898-5.p.48</li>
	<li>M. Elkstein, Learn REST: A Tutorial <a href="http://rest.elkstein.org/">http://rest.elkstein.org/</a> [Accessed 12<sup>th</sup> November 2009]</li>
	<li>R. D. Cormia: Web as a Platform for Distributed Computing, Web 2.0, and the Social Web: <a href="http://fgamedia.org/faculty/rdcormia/COIN83/lesson06.htm">http://fgamedia.org/faculty/rdcormia/COIN83/lesson06.htm</a> [Accessed 13<sup>th</sup> January 2009]</li>
	<li>Dion Hinchcliffe, 2008. The hidden battle between web services: REST versus SOAP.  Available at: <a href="http://www.hinchcliffe.org/archive/2005/02/12/171.aspx">http://www.hinchcliffe.org/archive/2005/02/12/171.aspx</a> [Accessed 12<sup>th</sup> January 2009]</li>
	<li>J. Snell, D. Tidwell and P. Kulchenko, December 2001. Programming Web Services with SOAP. O’Reilly. ISBN 10: 0-596-00095-2.p.6.</li>
	<li>E. Newcomer, 2002. Understanding Web Services XML, WSDL, SOAP, UDDI. Addison-Wesley Professional. ISBN-10: 0201750813. p-17.</li>
	<li>H. Lausen et al, 2005.Position Paper for the W3C rules workshop. Available at: <a href="http://www.w3.org/2004/12/rules-ws/paper/44/">http://www.w3.org/2004/12/rules-ws/paper/44/</a> [Accessed on 20th of January 2009].</li>
	<li> S. McIlraith , 2001. Semantic web service.ieee.org. Available at: <a href="http://ksl.stanford.edu/people/sam/ieee01.pdf">http://ksl.stanford.edu/people/sam/ieee01.pdf</a> [Accessed on 20th of January 2009].</li>
</ol>
<ol>
	<li>P. Alesso, 2004. Preparing for Semantic Web Services. Available at: <a href="http://www.sitepoint.com/article/semantic-web-services">http://www.sitepoint.com/article/semantic-web-services</a> [Accessed on 20th of January 2009].</li>
	<li>K. Sivashanmugam et al., 2006. Adding Semantics to Web Services Standards. Available at: <a href="http://lsdis.cs.uga.edu/library/download/SVSM03-ICWS-final.pdf">http://lsdis.cs.uga.edu/library/download/SVSM03-ICWS-final.pdf</a> [Accessed on 20th of January 2009].</li>
</ol>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1160</wp:post_id>
  <wp:post_date>2009-08-02 16:58:16</wp:post_date>
  <wp:post_date_gmt>2009-08-02 16:58:16</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>in-my-brain-what-are-semantic-web-services</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="rdf"><![CDATA[RDF]]></category>
  <category domain="category" nicename="soa"><![CDATA[SOA]]></category>
  <category domain="category" nicename="soap"><![CDATA[SOAP]]></category>
  <category domain="category" nicename="web-services"><![CDATA[WEB SERVICES]]></category>
  <category domain="category" nicename="wsdl"><![CDATA[WSDL]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1327665041]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1327665055]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>wcss</title>
  <link>http://ikennaokpala.wordpress.com/2009/08/02/in-my-brain-what-are-semantic-web-services/wcss/#main</link>
  <pubDate>Thu, 26 Jan 2012 17:02:34 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.files.wordpress.com/2012/01/wcss.jpg</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1161</wp:post_id>
  <wp:post_date>2012-01-26 17:02:34</wp:post_date>
  <wp:post_date_gmt>2012-01-26 17:02:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>wcss</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1160</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://ikennaokpala.files.wordpress.com/2012/01/wcss.jpg</wp:attachment_url>
</item>
<item>
  <title>soa</title>
  <link>http://ikennaokpala.wordpress.com/2009/08/02/in-my-brain-what-are-semantic-web-services/soa/#main</link>
  <pubDate>Thu, 26 Jan 2012 17:03:40 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.files.wordpress.com/2012/01/soa.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1162</wp:post_id>
  <wp:post_date>2012-01-26 17:03:40</wp:post_date>
  <wp:post_date_gmt>2012-01-26 17:03:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>soa</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1160</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://ikennaokpala.files.wordpress.com/2012/01/soa.png</wp:attachment_url>
</item>
<item>
  <title>Functional Thinking</title>
  <link>http://ikennaokpala.wordpress.com/2012/01/30/functional-thinking/</link>
  <pubDate>Mon, 30 Jan 2012 21:34:56 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=1183</guid>
  <description></description>
  <content:encoded><![CDATA[In this talk<a href="http://www.nealford.com/"> Neal Ford</a> emphasizes the fact that functional programming uses a different way of solving a problem, thinking about the results rather than the steps to make. 

Link: <a href="http://www.infoq.com/presentations/Functional-Thinking" target="_blank">http://www.infoq.com/presentations/Functional-Thinking</a>

Also Read this as well: <a href="http://steve-yegge.blogspot.com/2006/03/execution-in-kingdom-of-nouns.html" target="_blank">http://steve-yegge.blogspot.com/2006/03/execution-in-kingdom-of-nouns.html</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1183</wp:post_id>
  <wp:post_date>2012-01-30 21:34:56</wp:post_date>
  <wp:post_date_gmt>2012-01-30 21:34:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>functional-thinking</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="groovy"><![CDATA[GROOVY]]></category>
  <category domain="category" nicename="java"><![CDATA[JAVA]]></category>
  <category domain="category" nicename="jvm"><![CDATA[JVM]]></category>
  <category domain="category" nicename="ruby"><![CDATA[RUBY]]></category>
  <category domain="category" nicename="scala"><![CDATA[SCALA]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1327959296]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1327959298]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>A good user story</title>
  <link>http://ikennaokpala.wordpress.com/2012/02/04/a-good-user-story-2/</link>
  <pubDate>Sat, 04 Feb 2012 00:13:33 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=1197</guid>
  <description></description>
  <content:encoded><![CDATA[<p>Been working within a very good agile team lately and have been practicing BDD using the usual suspects like RSpec and Cucumber for user stories in conjunction with stakeholders, to reveal and document, as well drive development of, behavior in a large legacy code base.</p><blockquote><p> </p></blockquote><p>I was asked this question yesterday at a meetup.</p><blockquote><p>What is difference between a good User story and a bad one?</p><p></p></blockquote><p>I did provide some answers the question, but waffled a lot.. trust me i did not make a lot of sense in fact a painted a bad user story, this has lead to this blog post.</p><p>From my end:</p><ul><li>A good user story should be short and sweet;  A bad one is nothing short of being bulky and clunky.</li><li>A good user story should reflective of the vision of the product owner; A bad one would not.</li><li>A good user story is meant to break down properly. A bad one will be very granular.</li><li>A good user story should paint the picture properly for the Software Engineers (who apparently may not be domain experts at first) but are experted to build the blocks upon which deliverable application will be based on.  A bad one will not paint another picture.</li></ul><p> </p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1197</wp:post_id>
  <wp:post_date>2012-02-04 00:13:33</wp:post_date>
  <wp:post_date_gmt>2012-02-04 00:13:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>a-good-user-story-2</wp:post_name>
  <wp:status>trash</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>A good user story vs  a bad one</title>
  <link>http://ikennaokpala.wordpress.com/2012/02/03/a-good-user-story/</link>
  <pubDate>Fri, 03 Feb 2012 12:13:36 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2012/02/04/a-good-user-story/</guid>
  <description></description>
  <content:encoded><![CDATA[Been practicing BDD using the usual suspects like RSpec and Cucumber for user stories in conjunction with stakeholders, to reveal and document behavior, as well as drive development in a large legacy code base.

I was asked this question yesterday at a meetup.
<blockquote>What is the difference between a good User story and a bad one?</blockquote>

From my end based on experience and reading literature i summarise thus:
<ul>
	<li>A good user story should be short and sweet;  A bad one is nothing short of being bulky and clunky.</li>
        <li>A good user story should focus on the "WHAT" and not the "HOW";  A bad one may try to capture the "WHAT" and "HOW".</li>
	<li>A good user story should reflect the vision of the product owner; A bad one would not.</li>
	<li>A good user story should be broken down properly (questionable and able to drive conversations); A bad one would be obscure and unable to drive curiosity.</li>
	<li>A good user story should paint the picture properly for the Software Engineers (who may not have domain knowledge at first) but are expected to deliver value;  A bad one will paint a totally different picture.</li>
</ul>
For more information on this: <a href="http://www.allaboutagile.com/writing-good-user-stories/" target="_blank">http://www.allaboutagile.com/writing-good-user-stories/</a>

[youtube=http://www.youtube.com/watch?v=DaqyLWOEObY]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1314</wp:post_id>
  <wp:post_date>2012-02-03 12:13:36</wp:post_date>
  <wp:post_date_gmt>2012-02-03 12:13:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>a-good-user-story</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="agile"><![CDATA[AGILE]]></category>
  <category domain="category" nicename="bdd"><![CDATA[BDD]]></category>
  <category domain="category" nicename="tdd"><![CDATA[TDD]]></category>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1328314418]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1328314420]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Screen shot 2012-03-07 at 11.54.58</title>
  <link>http://ikennaokpala.wordpress.com/?attachment_id=1361</link>
  <pubDate>Wed, 07 Mar 2012 12:00:30 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.files.wordpress.com/2012/03/screen-shot-2012-03-07-at-11-54-58.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1361</wp:post_id>
  <wp:post_date>2012-03-07 12:00:30</wp:post_date>
  <wp:post_date_gmt>2012-03-07 12:00:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-shot-2012-03-07-at-11-54-58</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://ikennaokpala.files.wordpress.com/2012/03/screen-shot-2012-03-07-at-11-54-58.png</wp:attachment_url>
</item>
<item>
  <title>Modify Capistrano shell</title>
  <link>http://ikennaokpala.wordpress.com/2012/03/17/modify-capistrano-shell/</link>
  <pubDate>Sat, 17 Mar 2012 23:53:15 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=1368</guid>
  <description></description>
  <content:encoded><![CDATA[I remember a while back i <a href="https://twitter.com/#!/kengimel/statuses/152549051076837377" target="_blank" title="tweet by @kengimel 12:38 AM - 30 Dec 2011">tweeted</a> and <a href="https://twitter.com/#!/kengimel/status/152210894733062144" target="_blank" title="tweet by @kengimel 2:14 AM - 29 Dec 2011">tweeted</a> :( for some help with understanding why cap shell was different from the user's ssh shell.

Glad that now i finally came in contact with some way to modify the cap shell to use the same environment variables as SSH or login shell.

Simply by adding in the deploy.rb file and you are done:

[sourcecode language="bash"]
set :default_shell, &quot;bash -l&quot;
[/sourcecode]

The `-l`flag will simply help to load the login shell properly rather than omit it.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1368</wp:post_id>
  <wp:post_date>2012-03-17 23:53:15</wp:post_date>
  <wp:post_date_gmt>2012-03-17 23:53:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>modify-capistrano-shell</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bash"><![CDATA[BASH]]></category>
  <category domain="category" nicename="capistrano"><![CDATA[CAPISTRANO]]></category>
  <category domain="category" nicename="ruby"><![CDATA[RUBY]]></category>
  <category domain="category" nicename="unix"><![CDATA[UNIX]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1332028397]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1332028399]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>300</wp:comment_id>
    <wp:comment_author><![CDATA[Zeitan]]></wp:comment_author>
    <wp:comment_author_email>antonbas@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://zeitan.blogsome.com</wp:comment_author_url>
    <wp:comment_author_IP>200.109.248.21</wp:comment_author_IP>
    <wp:comment_date>2012-03-22 13:25:33</wp:comment_date>
    <wp:comment_date_gmt>2012-03-22 13:25:33</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi, reading the rvm documentation I found this:
http://beginrescueend.com/integration/capistrano/
I did this adaption  into my deploy.rb file:
http://www.pastie.org/3641508
The error still show it but the gemset was created without problem.
I did a test (cap deploy) with your proposal (set :default_shell, "bash -l"), - I deleted my code (set default_enviroment)- and the error still show into the capistrano out but the gemset was create no problem.
I think that your solution is equivalent to the recomendation of rvm site but I still without understand 'cause the error is still yet.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>1695945</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1332422733.9606";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"antonbas";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1332424831</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1332424831.1235";s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>301</wp:comment_id>
    <wp:comment_author><![CDATA[IKENNA OKPALA]]></wp:comment_author>
    <wp:comment_author_email>ikennaokpala@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://ikennaokpala.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>64.14.166.4</wp:comment_author_IP>
    <wp:comment_date>2012-03-22 14:06:14</wp:comment_date>
    <wp:comment_date_gmt>2012-03-22 14:06:14</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Cool thanks for the response.. i see what you mean. but then setting set :default_shell, "bash -l"
 works well for me without any errors.. basically it sets the cap to use the login bash environment on the server. 

Anyways i guess different strokes for different folks..

CHEERS]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>9228897</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1332425174</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1332425174.4754";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>302</wp:comment_id>
    <wp:comment_author><![CDATA[Zeitan]]></wp:comment_author>
    <wp:comment_author_email>antonbas@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://zeitan.blogsome.com</wp:comment_author_url>
    <wp:comment_author_IP>200.109.248.21</wp:comment_author_IP>
    <wp:comment_date>2012-03-22 14:12:40</wp:comment_date>
    <wp:comment_date_gmt>2012-03-22 14:12:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi, my deploy.rb is that:
http://www.pastie.org/3648082
Can you check if there is some error in the configuration? 
what server runs rvm? I used squeeze, I don't think that is something 'bout server 'cause rvm is the same installer in bash.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>301</wp:comment_parent>
    <wp:comment_user_id>1695945</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1332425560</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1332425560.4487";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"antonbas";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>304</wp:comment_id>
    <wp:comment_author><![CDATA[IKENNA OKPALA]]></wp:comment_author>
    <wp:comment_author_email>ikennaokpala@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://ikennaokpala.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>64.14.166.4</wp:comment_author_IP>
    <wp:comment_date>2012-03-22 14:16:22</wp:comment_date>
    <wp:comment_date_gmt>2012-03-22 14:16:22</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[#awesome.. i will check it when i get home.. and get back to you..
https://gist.github.com/2438173]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>302</wp:comment_parent>
    <wp:comment_user_id>9228897</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1332425782</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1332425782.8359";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1169</wp:comment_id>
    <wp:comment_author><![CDATA[lyman h reynolds]]></wp:comment_author>
    <wp:comment_author_email>wiley-corcoran@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.lawyers.com/Florida/West-Palm-Beach/Roberts-Reynolds-Bedard-and-Tuzzio-P-A--850455-f.html</wp:comment_author_url>
    <wp:comment_author_IP>37.98.227.34</wp:comment_author_IP>
    <wp:comment_date>2013-02-10 02:33:06</wp:comment_date>
    <wp:comment_date_gmt>2013-02-10 02:33:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Very nice post. I simply stumbled upon your blog and 
wished to say that I have truly enjoyed surfing around your blog posts.
After all I'll be subscribing for your rss feed and I'm hoping you 
write once more very soon!]]></wp:comment_content>
    <wp:comment_approved>trash</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1360463587.8763430118560791015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_wp_trash_meta_time</wp:meta_key>
      <wp:meta_value>1365004183</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_wp_trash_meta_status</wp:meta_key>
      <wp:meta_value>0</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1365004183.6051731109619140625;s:7:"message";s:44:"kengimel changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1154</wp:comment_id>
    <wp:comment_author><![CDATA[coffee bean diet]]></wp:comment_author>
    <wp:comment_author_email>roger_gavin@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://coffeebeandiet.org</wp:comment_author_url>
    <wp:comment_author_IP>184.154.57.92</wp:comment_author_IP>
    <wp:comment_date>2012-12-23 22:58:50</wp:comment_date>
    <wp:comment_date_gmt>2012-12-23 22:58:50</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[This is a topic that is near to my heart... Thank 
you! Exactly where are your contact details though?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1356303530.890307903289794921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1356304231</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1356304232.215713977813720703125;s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1163</wp:comment_id>
    <wp:comment_author><![CDATA[see results]]></wp:comment_author>
    <wp:comment_author_email>marshall-connolly@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>https://hunch.com/adamyong62/profile/</wp:comment_author_url>
    <wp:comment_author_IP>23.27.129.90</wp:comment_author_IP>
    <wp:comment_date>2013-02-01 08:59:53</wp:comment_date>
    <wp:comment_date_gmt>2013-02-01 08:59:53</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[There is definately a lot to learn about this topic.
I really like all the points you made.]]></wp:comment_content>
    <wp:comment_approved>trash</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1359709194.6288969516754150390625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_wp_trash_meta_status</wp:meta_key>
      <wp:meta_value>0</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_wp_trash_meta_time</wp:meta_key>
      <wp:meta_value>1365004183</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1365004183.630320072174072265625;s:7:"message";s:44:"kengimel changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1160</wp:comment_id>
    <wp:comment_author><![CDATA[Diet Solution]]></wp:comment_author>
    <wp:comment_author_email>lanoratice@aol.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.sixteenhole.com/profiles/blogs/cambridge-existence-options-rip-off</wp:comment_author_url>
    <wp:comment_author_IP>184.154.133.150</wp:comment_author_IP>
    <wp:comment_date>2013-01-31 00:25:20</wp:comment_date>
    <wp:comment_date_gmt>2013-01-31 00:25:20</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[We are a group of volunteers and starting a new scheme in our community.
Your website offered us with valuable info to work on.
You've performed an impressive process and our whole neighborhood shall be thankful to you.]]></wp:comment_content>
    <wp:comment_approved>trash</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1359591921.8488171100616455078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1365004183.6781919002532958984375;s:7:"message";s:44:"kengimel changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_wp_trash_meta_status</wp:meta_key>
      <wp:meta_value>0</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_wp_trash_meta_time</wp:meta_key>
      <wp:meta_value>1365004183</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1158</wp:comment_id>
    <wp:comment_author><![CDATA[Neva]]></wp:comment_author>
    <wp:comment_author_email>nevamccollum@hotmail.de</wp:comment_author_email>
    <wp:comment_author_url>http://Horseracingbettingtips.org/</wp:comment_author_url>
    <wp:comment_author_IP>173.232.88.145</wp:comment_author_IP>
    <wp:comment_date>2013-01-24 09:20:03</wp:comment_date>
    <wp:comment_date_gmt>2013-01-24 09:20:03</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Often retain an eye on horse racing applications.
That is a typical vendor profile.

When you want to learn how to win at horse racing, do make it a habit to find out about the jockeys.

A top rated-notch jockey has been recognized to turn an unreliable horse with high odds into a true gem.
Do take discover to skilled jockeys who have a track record of running a good long race, lasting much more than a mile.]]></wp:comment_content>
    <wp:comment_approved>trash</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1359019204.0989840030670166015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1365004183.704596996307373046875;s:7:"message";s:44:"kengimel changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_wp_trash_meta_status</wp:meta_key>
      <wp:meta_value>0</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_wp_trash_meta_time</wp:meta_key>
      <wp:meta_value>1365004183</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1178</wp:comment_id>
    <wp:comment_author><![CDATA[quit smoking]]></wp:comment_author>
    <wp:comment_author_email>raymon.nowak@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://wenzlitschke.de/index.php/Assistance_On_The_Best_Ways_To_Give_up_smoking</wp:comment_author_url>
    <wp:comment_author_IP>5.39.44.23</wp:comment_author_IP>
    <wp:comment_date>2013-03-06 11:51:35</wp:comment_date>
    <wp:comment_date_gmt>2013-03-06 11:51:35</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks for any other informative blog. The place else may I get that kind of information written in such a perfect way?
I have a undertaking that I am just now working 
on, and I have been on the look out for such 
info.]]></wp:comment_content>
    <wp:comment_approved>trash</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_wp_trash_meta_status</wp:meta_key>
      <wp:meta_value>0</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1365004183.514605045318603515625;s:7:"message";s:44:"kengimel changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1362570696.0376269817352294921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_wp_trash_meta_time</wp:meta_key>
      <wp:meta_value>1365004183</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1162</wp:comment_id>
    <wp:comment_author><![CDATA[http://dietsolutionreview.net]]></wp:comment_author>
    <wp:comment_author_email>lizettecohen@inbox.com</wp:comment_author_email>
    <wp:comment_author_url>http://Redcolme.Ning.com/profile/ArdisVandiver</wp:comment_author_url>
    <wp:comment_author_IP>184.154.133.149</wp:comment_author_IP>
    <wp:comment_date>2013-02-01 08:32:18</wp:comment_date>
    <wp:comment_date_gmt>2013-02-01 08:32:18</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi, i feel that i saw you visited my website so i got here to return the choose?

.I am trying to find issues to improve my site!I assume its ok to make use 
of a few of your ideas!!]]></wp:comment_content>
    <wp:comment_approved>trash</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1359707539.5104389190673828125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1365004183.6539208889007568359375;s:7:"message";s:44:"kengimel changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_wp_trash_meta_status</wp:meta_key>
      <wp:meta_value>0</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_wp_trash_meta_time</wp:meta_key>
      <wp:meta_value>1365004183</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Using homebrew with multiple users on a single machine</title>
  <link>http://ikennaokpala.wordpress.com/2012/04/11/using-homebrew-with-multiple-users-on-a-single-machine/</link>
  <pubDate>Wed, 11 Apr 2012 19:17:43 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=1390</guid>
  <description></description>
  <content:encoded><![CDATA[I a big fan of <a href="http://mxcl.github.com/homebrew/" target="_blank">homebrew</a>. I have been using it for a while now and i am like a lot. But i recent hit a big headache with permission issue with another account on my Mac.

I installed homebrew using a previous user account, but this proved to be very unforgiving to install software from the new user account.
[sourcecode language="bash"]
brew install redis
Error: Cannot write to /usr/local/Cellar
[/sourcecode] 

The following steps will enable the new user and/or other users to install software with homebrew. BTW thanks for Geoff Low (glow) for helping out.

Firstly set the umask for the user. (inside the .bashrc or .profile or .bash_profile)
[sourcecode language="bash"]
umask 0002 # grant write permission to group
[/sourcecode] 

For more on <a href="http://www.cyberciti.biz/tips/understanding-linux-unix-umask-value-usage.html" target="_blank">umask.</a>

then recursively grant group write permission to /usr/local directory:
[sourcecode language="bash"]
sudo chmod -R g+w /usr/local/
[/sourcecode] 

then also change recursively /usr/local group to staff:
[sourcecode language="bash"]
sudo chgrp -R staff /usr/local
[/sourcecode] 

Do same for /Library/Caches/Homebrew (optional):
[sourcecode language="bash"]
sudo chmod -R g+w /Library/Caches/Homebrew 
sudo chgrp -R staff /Library/Caches/Homebrew
[/sourcecode] 

Alright thats it you should be good to go now with the new user account installing software with homebrew. 

Be sure to run and follow any further instructions:
[sourcecode language="bash"]
brew doctor
[/sourcecode] 

NB: It is worthy to note that homebrew by design requires that in your user profile file (i.e. .bashrc or .profile or .bash_profile), that your set /usr/local/bin ahead of /usr/bin to avoid clashes with system software tools that may exist in other paths on your machine. it is important that you override the system paths to use homebrew installations as default. ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1390</wp:post_id>
  <wp:post_date>2012-04-11 19:17:43</wp:post_date>
  <wp:post_date_gmt>2012-04-11 19:17:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>using-homebrew-with-multiple-users-on-a-single-machine</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bash"><![CDATA[BASH]]></category>
  <category domain="category" nicename="homebrew"><![CDATA[HOMEBREW]]></category>
  <category domain="category" nicename="mac"><![CDATA[MAC]]></category>
  <category domain="category" nicename="ruby"><![CDATA[RUBY]]></category>
  <category domain="category" nicename="unix"><![CDATA[UNIX]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1334171863]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1334171863]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>314</wp:comment_id>
    <wp:comment_author><![CDATA[uberbrodt]]></wp:comment_author>
    <wp:comment_author_email>chris@uberbrodt.net</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>66.177.171.110</wp:comment_author_IP>
    <wp:comment_date>2012-05-05 13:37:03</wp:comment_date>
    <wp:comment_date_gmt>2012-05-05 13:37:03</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hmmm...I believe it should be noted that by modifying your umask this way, that any file/dir the user creates will be writeable by all other users.  It's not limited to just /usr/local]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1336225023.4935";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:9:"uberbrodt";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1336248236</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1336248236.6608";s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>315</wp:comment_id>
    <wp:comment_author><![CDATA[uberbrodt]]></wp:comment_author>
    <wp:comment_author_email>chris@uberbrodt.net</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>66.177.171.110</wp:comment_author_IP>
    <wp:comment_date>2012-05-05 13:40:55</wp:comment_date>
    <wp:comment_date_gmt>2012-05-05 13:40:55</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I think it should be noted that by modifying the umask this way, you make all files and folders you subsequently create *writable* by anyone in the same group as you.  Maybe fine on a laptop that you only use, but I wouldn't try and do this on Mac OS X Server.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>27468071</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1336225255.1654";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:9:"uberbrodt";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1336248244.0947";s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1336248244</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>316</wp:comment_id>
    <wp:comment_author><![CDATA[IKENNA OKPALA]]></wp:comment_author>
    <wp:comment_author_email>ikennaokpala@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://ikennaokpala.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>82.5.93.10</wp:comment_author_IP>
    <wp:comment_date>2012-05-05 20:05:13</wp:comment_date>
    <wp:comment_date_gmt>2012-05-05 20:05:13</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[thanks for the contribution.. can you provide another better solution.. Cheers]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>314</wp:comment_parent>
    <wp:comment_user_id>9228897</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1336248313</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1336248313.9974";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>317</wp:comment_id>
    <wp:comment_author><![CDATA[uberbrodt]]></wp:comment_author>
    <wp:comment_author_email>chris@uberbrodt.net</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>66.177.171.110</wp:comment_author_IP>
    <wp:comment_date>2012-05-08 23:31:07</wp:comment_date>
    <wp:comment_date_gmt>2012-05-08 23:31:07</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Sorry about the double post.  Basically what you want to do, is make the /usr/local folder is owned by a certain group (say 'admin' or 'homebrew' ), and then add any users that need to make homebrew installs to that group.  It's basically outlined in this stackexchange question:  http://apple.stackexchange.com/questions/42127/homebrew-permissions-multiple-users-needing-to-brew-update]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>27468071</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1336519869</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1336519870.6043";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:9:"uberbrodt";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>320</wp:comment_id>
    <wp:comment_author><![CDATA[IKENNA OKPALA]]></wp:comment_author>
    <wp:comment_author_email>ikennaokpala@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://ikennaokpala.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>64.14.166.4</wp:comment_author_IP>
    <wp:comment_date>2012-05-09 08:31:45</wp:comment_date>
    <wp:comment_date_gmt>2012-05-09 08:31:45</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[awesome will look in to this and try it out soonish!! cheers]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>317</wp:comment_parent>
    <wp:comment_user_id>9228897</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1336552305</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1336552305.8509";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1192</wp:comment_id>
    <wp:comment_author><![CDATA[fruity floral perfumes]]></wp:comment_author>
    <wp:comment_author_email>irvinrico@arcor.de</wp:comment_author_email>
    <wp:comment_author_url>http://www.crystalspace3d.org/main/User:Fleuri01</wp:comment_author_url>
    <wp:comment_author_IP>142.91.208.32</wp:comment_author_IP>
    <wp:comment_date>2013-04-07 20:14:45</wp:comment_date>
    <wp:comment_date_gmt>2013-04-07 20:14:45</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Good information. Lucky me I found your website by accident (stumbleupon).

I have saved as a favorite for later!]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1365365685.4017269611358642578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1148</wp:comment_id>
    <wp:comment_author><![CDATA[danieladeniji]]></wp:comment_author>
    <wp:comment_author_email>Daniel_Adeniji@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>24.6.83.230</wp:comment_author_IP>
    <wp:comment_date>2012-11-26 11:10:12</wp:comment_date>
    <wp:comment_date_gmt>2012-11-26 11:10:12</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks 2 - Good &amp; relevant discussions - Thanks for freely sharing.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>3719976</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1353928838.6948249340057373046875;s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1353928838</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1353928212.2674190998077392578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"danieladeniji";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1155</wp:comment_id>
    <wp:comment_author><![CDATA[phatmann]]></wp:comment_author>
    <wp:comment_author_email>thephatmann@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>67.165.114.195</wp:comment_author_IP>
    <wp:comment_date>2013-01-07 20:31:34</wp:comment_date>
    <wp:comment_date_gmt>2013-01-07 20:31:34</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Very helpful, thank!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1357592605</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1357592605.7850220203399658203125;s:7:"message";s:47:"kengimel changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"kengimel";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1357590695.1637790203094482421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"phatmann";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Remote access to PostgreSQL server and Removing Postgres</title>
  <link>http://ikennaokpala.wordpress.com/2012/06/08/remote-access-to-postgresql-server-14/</link>
  <pubDate>Fri, 08 Jun 2012 14:43:50 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2012/06/08/remote-access-to-postgresql-server-14/</guid>
  <description></description>
  <content:encoded><![CDATA[This is a very common requirement for remote staging environments.

All that is required is edit postgressql.conf and pg_hba.conf files.

To get going on this it maybe worthy of note to first search for these files.

[sourcecode language="bash"]find / -name &quot;postgresql.conf&quot;[/sourcecode]

Because locations for these files may differ per operating system (i.e Linux distros)

For this post the location should match Ubuntu/Debian.

For Ubuntu these files are located in "/etc/postgresql/9.1/main" so cd there.

First edit the postgresql.conf, by adding this to the file "listen_addresses = '*'"

[sourcecode language="bash"]listen_addresses = '*'[/sourcecode]

Next stop edit the pg_hba.conf, add the below close to the end of the file.

[sourcecode language="bash"]host    all             all             0.0.0.0/0               md5[/sourcecode]

Finally restart postgresql:

[sourcecode language="bash"]service postgresql restart[/sourcecode]

OR

[sourcecode language="bash"]/etc/init.d/postgresql restart[/sourcecode]


To remove the EnterpriseDB One-Click install of PostgreSQL 9.1:

Open a terminal window

Utilities-&gt;Terminal

Run the uninstaller

sudo /Library/PostgreSQL/9.1/uninstall-postgresql.app/Contents/MacOS/installbuilder.sh

If you installed with the Postgres Installer, you can do:

open /Library/PostgreSQL/9.2/uninstall-postgresql.app

It will ask for the administrator password and run the uninstaller.

Remove the PostgreSQL and data folders (Wizard will notify you that these were not removed)

sudo rm -rf /Library/PostgreSQL

Remove the ini file

sudo rm /etc/postgres-reg.ini

Remove the PostgreSQL user

System Preferences -&gt; Users &amp; Groups

Unlock the settings panel by clicking on the padlock and enter your password

Select the PostgreSQL user and click on the minus button.

Restore your shared memory settings

sudo rm /etc/sysctl.conf

]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1444</wp:post_id>
  <wp:post_date>2012-06-08 14:43:50</wp:post_date>
  <wp:post_date_gmt>2012-06-08 14:43:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>remote-access-to-postgresql-server-14</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bash"><![CDATA[BASH]]></category>
  <category domain="category" nicename="postgresql"><![CDATA[POSTGRESQL]]></category>
  <category domain="category" nicename="ubuntu"><![CDATA[UBUNTU]]></category>
  <category domain="category" nicename="unix"><![CDATA[UNIX]]></category>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1339166632]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1339166635]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Debot gem 0.0.1 released: (Capistrano recipes for Ruby, Rails, Ngnix, Unicorn and Postgres setup)</title>
  <link>http://ikennaokpala.wordpress.com/2012/07/24/debot-gem-0-0-1-released-custom-recipes-for-ruby-rails-app-ngnix-unicorn-and-postgres-setup/</link>
  <pubDate>Tue, 24 Jul 2012 15:47:28 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/2012/07/24/debot-gem-0-0-1-released-custom-recipes-for-ruby-rails-app-ngnix-unicorn-and-postgres-setup/</guid>
  <description></description>
  <content:encoded><![CDATA[I just launched <a href="https://github.com/kengimel/debot" rel="nofollow" target="_blank">debot</a> a gem with custom recipes that extend capistrano for provisioning and deploying rails application to a VPS with ruby (via rubyenv), nginx, postgresql and unicorn..

For more details <a href="https://github.com/kengimel/debot/blob/master/README.md" rel="nofollow" target="_blank">Click here </a>

NB: I am just pouring out ideas on this gem, as i use it on multiple projects. it is under constant development. You are welcome to contribute, try it out and give feeback]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1458</wp:post_id>
  <wp:post_date>2012-07-24 15:47:28</wp:post_date>
  <wp:post_date_gmt>2012-07-24 15:47:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>debot-gem-0-0-1-released-custom-recipes-for-ruby-rails-app-ngnix-unicorn-and-postgres-setup</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bash"><![CDATA[BASH]]></category>
  <category domain="category" nicename="capistrano"><![CDATA[CAPISTRANO]]></category>
  <category domain="category" nicename="nginx"><![CDATA[NGINX]]></category>
  <category domain="category" nicename="postgresql"><![CDATA[POSTGRESQL]]></category>
  <category domain="category" nicename="rails"><![CDATA[RAILS]]></category>
  <category domain="category" nicename="ruby"><![CDATA[RUBY]]></category>
  <category domain="category" nicename="unix"><![CDATA[UNIX]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1343144852]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1343144850]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Capistrano – Could not parse object "b4042..."</title>
  <link>http://ikennaokpala.wordpress.com/2012/08/31/capistrano-could-not-parse-object-b40429d9b1f72ac16a22601b4c6843ff24a74e6f/</link>
  <pubDate>Fri, 31 Aug 2012 02:36:31 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=1470</guid>
  <description></description>
  <content:encoded><![CDATA[<p>The above titled error gave a friend some troubles.</p><p>The thing is that we found out that Capistrano was failing because apparently it had lost track of the commit SHA, hence the error message: </p><p>"Could not parse object ’b4042...′"</p><p>We found deleting the “cached-copy” inside the shared directory, to have made this go away at least for now.</p><p> </p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1470</wp:post_id>
  <wp:post_date>2012-08-31 02:36:31</wp:post_date>
  <wp:post_date_gmt>2012-08-31 02:36:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capistrano-could-not-parse-object-b40429d9b1f72ac16a22601b4c6843ff24a74e6f</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="capistrano"><![CDATA[CAPISTRANO]]></category>
  <category domain="category" nicename="ruby"><![CDATA[RUBY]]></category>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1346380593]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1346380594]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Keeping environment variables (ENV) alive for use in Rails, Pow, Nginx</title>
  <link>http://ikennaokpala.wordpress.com/?p=1483</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=1483</guid>
  <description></description>
  <content:encoded><![CDATA[Sadly, enough is one that is very well documented, but not immediately apparent.

For security reasons we want to stay away from have our security keys or data exposed in our repositories. 

In this case we turn to use environment variable to keep these safely separate and away from the busy eyes.

But i must be honest here.. i tend to forget quite offten hence the main reason why i still keep this blog.

It isn't apparent that when you define environment variables in say a .secret_defaults file and you have sourced it out in say .bashrc that the likes of Pow and Nginx will take cognisance of them.

I assumed that my rails app would pick up these environment as long as they have been define prior to start up.

Yes! and it did only this is true when you interact with the rails application via the rails console, but not so for the POW and Nginx.

Thing is ENV hash values originate from the system environment  when the rails process starts out.

This i did set can be set on the command line prior to starting the server or program. For example in bash:

export MONGOID_USERNAME='username'
These are only good for the life of your shell, unless you add them to your profile, but it is likely that your web server won't use that profile, so it is only useful for local development.

They can also be set, for example, in Apache with SetEnv. For example:

http://shreevatsa.wordpress.com/2008/03/30/zshbash-startup-files-loading-order-bashrc-zshrc-etc/

http://stackoverflow.com/questions/4973750/set-environment-variable-env-for-use-in-rails]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1483</wp:post_id>
  <wp:post_date>2012-09-07 00:22:23</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>keeping-environment-variables-env-alive-for-use-in-rails-pow-nginx</wp:post_name>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_afa1c934410564e41519798a6e738d67</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_7d92078d82fd3439408339b3df134dea</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_510623d47892fb8a558157ad61914d0e</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_ca5f31915567c6a8304a0d1269ad133f</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Installing 1.8.7 On Mountain Lion (10.8.7)</title>
  <link>http://ikennaokpala.wordpress.com/?p=1506</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=1506</guid>
  <description></description>
  <content:encoded><![CDATA[Maintaining Legacy systems is a big part of our lives as software developers.

Also, our world is filled with load of technological sweeps.

I ran into this problem with not being able to instal ruby 1.8.7 on my mountain lion version of OSX.

initial i noticed rvm global gemset did not include the usual suspect gems like bundler

As usual i tried :( to install bundler "gem install bundler"

NB: First i advice installing xquatz.. http://xquartz.macosforge.org/landing/

All in all this did the trick
[sourcecode language="bash"]


rvm remove ruby-1.8.7-p352 &amp;&amp; CC=/usr/local/Cellar/apple-gcc42/4.2.1-5666.3/bin/gcc-4.2 CPPFLAGS=-I/opt/X11/include rvm install ruby-1.8.7-p352 --without-tcl --without-tk

[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1506</wp:post_id>
  <wp:post_date>2013-01-30 16:56:19</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name></wp:post_name>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Fix ubuntu virtual box (windows) full screen problem</title>
  <link>http://ikennaokpala.wordpress.com/2013/04/03/fix-ubuntu-virtual-box-windows-full-screen-problem/</link>
  <pubDate>Wed, 03 Apr 2013 15:44:38 +0000</pubDate>
  <dc:creator>kengimel</dc:creator>
  <guid isPermaLink="false">http://ikennaokpala.wordpress.com/?p=1528</guid>
  <description></description>
  <content:encoded><![CDATA[<p>NOTE the 4.2.0 version of virtual box does not support the 3d graphic libraries for 12.11</p><p>You need to download the latest guest additions iso from here http://download.virtualbox.org/virtualbox/</p><p>Secondly mount it on by clicking Devices -&gt; CD/DVD Devices and then run the installation process.</p><p>After this restart and your VM should be able to render in full screen mode properly.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1528</wp:post_id>
  <wp:post_date>2013-04-03 15:44:38</wp:post_date>
  <wp:post_date_gmt>2013-04-03 15:44:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>fix-ubuntu-virtual-box-windows-full-screen-problem</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ubuntu"><![CDATA[UBUNTU]]></category>
  <category domain="post_tag" nicename="ubuntu"><![CDATA[UBUNTU]]></category>
  <category domain="post_tag" nicename="virtual-box"><![CDATA[VIRTUAL-BOX]]></category>
  <category domain="category" nicename="virtual-box"><![CDATA[VIRTUAL-BOX]]></category>
  <category domain="category" nicename="virtual-machines"><![CDATA[VIRTUAL-MACHINES]]></category>
  <wp:postmeta>
    <wp:meta_key>email_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1365003879]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>jabber_published</wp:meta_key>
    <wp:meta_value><![CDATA[1365003878]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[9228897]]></wp:meta_value>
  </wp:postmeta>
</item>
  </channel>
</rss>
